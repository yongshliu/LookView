<div class="div_line"  data-info=({id:10750,ln:1}) id=l1><div class="dl_wrapper"><a name=line1 onclick='overload_click(this)' class="a_ln">1<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">/* Definitions for data structures and routines for the regular
</div></div></div><div class="div_line"  data-info=({id:10751,ln:2}) id=l2><div class="dl_wrapper"><a name=line2 onclick='overload_click(this)' class="a_ln">2<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   expression library.
</div></div></div><div class="div_line"  data-info=({id:10752,ln:3}) id=l3><div class="dl_wrapper"><a name=line3 onclick='overload_click(this)' class="a_ln">3<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   Copyright (C) 1985,1989-93,1995-98,2000,2001,2002,2003,2005,2006,2008
</div></div></div><div class="div_line"  data-info=({id:10753,ln:4}) id=l4><div class="dl_wrapper"><a name=line4 onclick='overload_click(this)' class="a_ln">4<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   Free Software Foundation, Inc.
</div></div></div><div class="div_line"  data-info=({id:10754,ln:5}) id=l5><div class="dl_wrapper"><a name=line5 onclick='overload_click(this)' class="a_ln">5<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   This file is part of the GNU C Library.
</div></div></div><div class="div_line"  data-info=({id:10755,ln:6}) id=l6><div class="dl_wrapper"><a name=line6 onclick='overload_click(this)' class="a_ln">6<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:10756,ln:7}) id=l7><div class="dl_wrapper"><a name=line7 onclick='overload_click(this)' class="a_ln">7<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   The GNU C Library is free software; you can redistribute it and/or
</div></div></div><div class="div_line"  data-info=({id:10757,ln:8}) id=l8><div class="dl_wrapper"><a name=line8 onclick='overload_click(this)' class="a_ln">8<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   modify it under the terms of the GNU Lesser General Public
</div></div></div><div class="div_line"  data-info=({id:10758,ln:9}) id=l9><div class="dl_wrapper"><a name=line9 onclick='overload_click(this)' class="a_ln">9<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   License as published by the Free Software Foundation; either
</div></div></div><div class="div_line"  data-info=({id:10759,ln:10}) id=l10><div class="dl_wrapper"><a name=line10 onclick='overload_click(this)' class="a_ln">10<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   version 2.1 of the License, or (at your option) any later version.
</div></div></div><div class="div_line"  data-info=({id:10760,ln:11}) id=l11><div class="dl_wrapper"><a name=line11 onclick='overload_click(this)' class="a_ln">11<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:10761,ln:12}) id=l12><div class="dl_wrapper"><a name=line12 onclick='overload_click(this)' class="a_ln">12<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   The GNU C Library is distributed in the hope that it will be useful,
</div></div></div><div class="div_line"  data-info=({id:10762,ln:13}) id=l13><div class="dl_wrapper"><a name=line13 onclick='overload_click(this)' class="a_ln">13<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   but WITHOUT ANY WARRANTY; without even the implied warranty of
</div></div></div><div class="div_line"  data-info=({id:10763,ln:14}) id=l14><div class="dl_wrapper"><a name=line14 onclick='overload_click(this)' class="a_ln">14<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
</div></div></div><div class="div_line"  data-info=({id:10764,ln:15}) id=l15><div class="dl_wrapper"><a name=line15 onclick='overload_click(this)' class="a_ln">15<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   Lesser General Public License for more details.
</div></div></div><div class="div_line"  data-info=({id:10765,ln:16}) id=l16><div class="dl_wrapper"><a name=line16 onclick='overload_click(this)' class="a_ln">16<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:10766,ln:17}) id=l17><div class="dl_wrapper"><a name=line17 onclick='overload_click(this)' class="a_ln">17<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   You should have received a copy of the GNU Lesser General Public
</div></div></div><div class="div_line"  data-info=({id:10767,ln:18}) id=l18><div class="dl_wrapper"><a name=line18 onclick='overload_click(this)' class="a_ln">18<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   License along with the GNU C Library; if not, write to the Free
</div></div></div><div class="div_line"  data-info=({id:10768,ln:19}) id=l19><div class="dl_wrapper"><a name=line19 onclick='overload_click(this)' class="a_ln">19<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
</div></div></div><div class="div_line"  data-info=({id:10769,ln:20}) id=l20><div class="dl_wrapper"><a name=line20 onclick='overload_click(this)' class="a_ln">20<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   02111-1307 USA.  */
</div></div></div><div class="div_line"  data-info=({id:10770,ln:21}) id=l21><div class="dl_wrapper"><a name=line21 onclick='overload_click(this)' class="a_ln">21<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:10771,ln:22}) id=l22><div class="dl_wrapper"><a name=line22 onclick='overload_click(this)' class="a_ln">22<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">#ifndef <a href='ctags/gnu_regex/regex.h#line23' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>_REGEX_H</a>
</div></div></div><div class="div_line"  data-info=({id:10772,ln:23}) id=l23><div class="dl_wrapper"><a name=line23 onclick='overload_click(this)' class="a_ln">23<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">#define <span class='ctd macdef'>_REGEX_H</span> 1
</div></div></div><div class="div_line"  data-info=({id:10773,ln:24}) id=l24><div class="dl_wrapper"><a name=line24 onclick='overload_click(this)' class="a_ln">24<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:10774,ln:25}) id=l25><div class="dl_wrapper"><a name=line25 onclick='overload_click(this)' class="a_ln">25<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">#include &lt;<span class='ctd include'>sys/types.h</span>&gt;
</div></div></div><div class="div_line"  data-info=({id:10775,ln:26}) id=l26><div class="dl_wrapper"><a name=line26 onclick='overload_click(this)' class="a_ln">26<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:10776,ln:27}) id=l27><div class="dl_wrapper"><a name=line27 onclick='overload_click(this)' class="a_ln">27<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">/* Allow the use in C++ code.  */
</div></div></div><div class="div_line"  data-info=({id:10777,ln:28}) id=l28><div class="dl_wrapper"><a name=line28 onclick='overload_click(this)' class="a_ln">28<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">#ifdef __cplusplus
</div></div></div><div class="div_line"  data-info=({id:10778,ln:29}) id=l29><div class="dl_wrapper"><a name=line29 onclick='overload_click(this)' class="a_ln">29<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">extern "C" {
</div></div></div><div class="div_line"  data-info=({id:10779,ln:30}) id=l30><div class="dl_wrapper"><a name=line30 onclick='overload_click(this)' class="a_ln">30<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">#endif
</div></div></div><div class="div_line"  data-info=({id:10780,ln:31}) id=l31><div class="dl_wrapper"><a name=line31 onclick='overload_click(this)' class="a_ln">31<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:10781,ln:32}) id=l32><div class="dl_wrapper"><a name=line32 onclick='overload_click(this)' class="a_ln">32<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">/* The following two types have to be signed and unsigned integer type
</div></div></div><div class="div_line"  data-info=({id:10782,ln:33}) id=l33><div class="dl_wrapper"><a name=line33 onclick='overload_click(this)' class="a_ln">33<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   wide enough to hold a value of a pointer.  For most ANSI compilers
</div></div></div><div class="div_line"  data-info=({id:10783,ln:34}) id=l34><div class="dl_wrapper"><a name=line34 onclick='overload_click(this)' class="a_ln">34<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   ptrdiff_t and size_t should be likely OK.  Still size of these two
</div></div></div><div class="div_line"  data-info=({id:10784,ln:35}) id=l35><div class="dl_wrapper"><a name=line35 onclick='overload_click(this)' class="a_ln">35<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   types is 2 for Microsoft C.  Ugh... */
</div></div></div><div class="div_line"  data-info=({id:10785,ln:36}) id=l36><div class="dl_wrapper"><a name=line36 onclick='overload_click(this)' class="a_ln">36<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">typedef long int <span class='ctd typedef'>s_reg_t</span>;
</div></div></div><div class="div_line"  data-info=({id:10786,ln:37}) id=l37><div class="dl_wrapper"><a name=line37 onclick='overload_click(this)' class="a_ln">37<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">typedef unsigned long int <span class='ctd typedef'>active_reg_t</span>;
</div></div></div><div class="div_line"  data-info=({id:10787,ln:38}) id=l38><div class="dl_wrapper"><a name=line38 onclick='overload_click(this)' class="a_ln">38<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:10788,ln:39}) id=l39><div class="dl_wrapper"><a name=line39 onclick='overload_click(this)' class="a_ln">39<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">/* The following bits are used to determine the regexp syntax we
</div></div></div><div class="div_line"  data-info=({id:10789,ln:40}) id=l40><div class="dl_wrapper"><a name=line40 onclick='overload_click(this)' class="a_ln">40<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   recognize.  The set/not-set meanings are chosen so that Emacs syntax
</div></div></div><div class="div_line"  data-info=({id:10790,ln:41}) id=l41><div class="dl_wrapper"><a name=line41 onclick='overload_click(this)' class="a_ln">41<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   remains the value 0.  The bits are given in alphabetical order, and
</div></div></div><div class="div_line"  data-info=({id:10791,ln:42}) id=l42><div class="dl_wrapper"><a name=line42 onclick='overload_click(this)' class="a_ln">42<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   the definitions shifted by one from the previous bit; thus, when we
</div></div></div><div class="div_line"  data-info=({id:10792,ln:43}) id=l43><div class="dl_wrapper"><a name=line43 onclick='overload_click(this)' class="a_ln">43<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   add or remove a bit, only one other definition need change.  */
</div></div></div><div class="div_line"  data-info=({id:10793,ln:44}) id=l44><div class="dl_wrapper"><a name=line44 onclick='overload_click(this)' class="a_ln">44<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">typedef unsigned long int <span class='ctd typedef'>reg_syntax_t</span>;
</div></div></div><div class="div_line"  data-info=({id:10794,ln:45}) id=l45><div class="dl_wrapper"><a name=line45 onclick='overload_click(this)' class="a_ln">45<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:10795,ln:46}) id=l46><div class="dl_wrapper"><a name=line46 onclick='overload_click(this)' class="a_ln">46<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">#ifdef __USE_GNU
</div></div></div><div class="div_line"  data-info=({id:10796,ln:47}) id=l47><div class="dl_wrapper"><a name=line47 onclick='overload_click(this)' class="a_ln">47<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">/* If this bit is not set, then \ inside a bracket expression is literal.
</div></div></div><div class="div_line"  data-info=({id:10797,ln:48}) id=l48><div class="dl_wrapper"><a name=line48 onclick='overload_click(this)' class="a_ln">48<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   If set, then such a \ quotes the following character.  */
</div></div></div><div class="div_line"  data-info=({id:10798,ln:49}) id=l49><div class="dl_wrapper"><a name=line49 onclick='overload_click(this)' class="a_ln">49<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents"># define <span class='ctd macdef'>RE_BACKSLASH_ESCAPE_IN_LISTS</span> ((unsigned long int) 1)
</div></div></div><div class="div_line"  data-info=({id:10799,ln:50}) id=l50><div class="dl_wrapper"><a name=line50 onclick='overload_click(this)' class="a_ln">50<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:10800,ln:51}) id=l51><div class="dl_wrapper"><a name=line51 onclick='overload_click(this)' class="a_ln">51<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">/* If this bit is not set, then + and ? are operators, and \+ and \? are
</div></div></div><div class="div_line"  data-info=({id:10801,ln:52}) id=l52><div class="dl_wrapper"><a name=line52 onclick='overload_click(this)' class="a_ln">52<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">     literals.
</div></div></div><div class="div_line"  data-info=({id:10802,ln:53}) id=l53><div class="dl_wrapper"><a name=line53 onclick='overload_click(this)' class="a_ln">53<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   If set, then \+ and \? are operators and + and ? are literals.  */
</div></div></div><div class="div_line"  data-info=({id:10803,ln:54}) id=l54><div class="dl_wrapper"><a name=line54 onclick='overload_click(this)' class="a_ln">54<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents"># define <span class='ctd macdef'>RE_BK_PLUS_QM</span> (<a href='ctags/gnu_regex/regex.h#line49' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>RE_BACKSLASH_ESCAPE_IN_LISTS</a> &lt;&lt; 1)
</div></div></div><div class="div_line"  data-info=({id:10804,ln:55}) id=l55><div class="dl_wrapper"><a name=line55 onclick='overload_click(this)' class="a_ln">55<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:10805,ln:56}) id=l56><div class="dl_wrapper"><a name=line56 onclick='overload_click(this)' class="a_ln">56<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">/* If this bit is set, then character classes are supported.  They are:
</div></div></div><div class="div_line"  data-info=({id:10806,ln:57}) id=l57><div class="dl_wrapper"><a name=line57 onclick='overload_click(this)' class="a_ln">57<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">     [:alpha:], [:upper:], [:lower:],  [:digit:], [:alnum:], [:xdigit:],
</div></div></div><div class="div_line"  data-info=({id:10807,ln:58}) id=l58><div class="dl_wrapper"><a name=line58 onclick='overload_click(this)' class="a_ln">58<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">     [:space:], [:print:], [:punct:], [:graph:], and [:cntrl:].
</div></div></div><div class="div_line"  data-info=({id:10808,ln:59}) id=l59><div class="dl_wrapper"><a name=line59 onclick='overload_click(this)' class="a_ln">59<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   If not set, then character classes are not supported.  */
</div></div></div><div class="div_line"  data-info=({id:10809,ln:60}) id=l60><div class="dl_wrapper"><a name=line60 onclick='overload_click(this)' class="a_ln">60<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents"># define <span class='ctd macdef'>RE_CHAR_CLASSES</span> (<a href='ctags/gnu_regex/regex.h#line54' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>RE_BK_PLUS_QM</a> &lt;&lt; 1)
</div></div></div><div class="div_line"  data-info=({id:10810,ln:61}) id=l61><div class="dl_wrapper"><a name=line61 onclick='overload_click(this)' class="a_ln">61<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:10811,ln:62}) id=l62><div class="dl_wrapper"><a name=line62 onclick='overload_click(this)' class="a_ln">62<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">/* If this bit is set, then ^ and $ are always anchors (outside bracket
</div></div></div><div class="div_line"  data-info=({id:10812,ln:63}) id=l63><div class="dl_wrapper"><a name=line63 onclick='overload_click(this)' class="a_ln">63<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">     expressions, of course).
</div></div></div><div class="div_line"  data-info=({id:10813,ln:64}) id=l64><div class="dl_wrapper"><a name=line64 onclick='overload_click(this)' class="a_ln">64<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   If this bit is not set, then it depends:
</div></div></div><div class="div_line"  data-info=({id:10814,ln:65}) id=l65><div class="dl_wrapper"><a name=line65 onclick='overload_click(this)' class="a_ln">65<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">        ^  is an anchor if it is at the beginning of a regular
</div></div></div><div class="div_line"  data-info=({id:10815,ln:66}) id=l66><div class="dl_wrapper"><a name=line66 onclick='overload_click(this)' class="a_ln">66<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">           expression or after an open-group or an alternation operator;
</div></div></div><div class="div_line"  data-info=({id:10816,ln:67}) id=l67><div class="dl_wrapper"><a name=line67 onclick='overload_click(this)' class="a_ln">67<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">        $  is an anchor if it is at the end of a regular expression, or
</div></div></div><div class="div_line"  data-info=({id:10817,ln:68}) id=l68><div class="dl_wrapper"><a name=line68 onclick='overload_click(this)' class="a_ln">68<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">           before a close-group or an alternation operator.
</div></div></div><div class="div_line"  data-info=({id:10818,ln:69}) id=l69><div class="dl_wrapper"><a name=line69 onclick='overload_click(this)' class="a_ln">69<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:10819,ln:70}) id=l70><div class="dl_wrapper"><a name=line70 onclick='overload_click(this)' class="a_ln">70<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   This bit could be (re)combined with RE_CONTEXT_INDEP_OPS, because
</div></div></div><div class="div_line"  data-info=({id:10820,ln:71}) id=l71><div class="dl_wrapper"><a name=line71 onclick='overload_click(this)' class="a_ln">71<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   POSIX draft 11.2 says that * etc. in leading positions is undefined.
</div></div></div><div class="div_line"  data-info=({id:10821,ln:72}) id=l72><div class="dl_wrapper"><a name=line72 onclick='overload_click(this)' class="a_ln">72<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   We already implemented a previous draft which made those constructs
</div></div></div><div class="div_line"  data-info=({id:10822,ln:73}) id=l73><div class="dl_wrapper"><a name=line73 onclick='overload_click(this)' class="a_ln">73<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   invalid, though, so we haven't changed the code back.  */
</div></div></div><div class="div_line"  data-info=({id:10823,ln:74}) id=l74><div class="dl_wrapper"><a name=line74 onclick='overload_click(this)' class="a_ln">74<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents"># define <span class='ctd macdef'>RE_CONTEXT_INDEP_ANCHORS</span> (<a href='ctags/gnu_regex/regex.h#line60' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>RE_CHAR_CLASSES</a> &lt;&lt; 1)
</div></div></div><div class="div_line"  data-info=({id:10824,ln:75}) id=l75><div class="dl_wrapper"><a name=line75 onclick='overload_click(this)' class="a_ln">75<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:10825,ln:76}) id=l76><div class="dl_wrapper"><a name=line76 onclick='overload_click(this)' class="a_ln">76<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">/* If this bit is set, then special characters are always special
</div></div></div><div class="div_line"  data-info=({id:10826,ln:77}) id=l77><div class="dl_wrapper"><a name=line77 onclick='overload_click(this)' class="a_ln">77<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">     regardless of where they are in the pattern.
</div></div></div><div class="div_line"  data-info=({id:10827,ln:78}) id=l78><div class="dl_wrapper"><a name=line78 onclick='overload_click(this)' class="a_ln">78<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   If this bit is not set, then special characters are special only in
</div></div></div><div class="div_line"  data-info=({id:10828,ln:79}) id=l79><div class="dl_wrapper"><a name=line79 onclick='overload_click(this)' class="a_ln">79<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">     some contexts; otherwise they are ordinary.  Specifically,
</div></div></div><div class="div_line"  data-info=({id:10829,ln:80}) id=l80><div class="dl_wrapper"><a name=line80 onclick='overload_click(this)' class="a_ln">80<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">     * + ? and intervals are only special when not after the beginning,
</div></div></div><div class="div_line"  data-info=({id:10830,ln:81}) id=l81><div class="dl_wrapper"><a name=line81 onclick='overload_click(this)' class="a_ln">81<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">     open-group, or alternation operator.  */
</div></div></div><div class="div_line"  data-info=({id:10831,ln:82}) id=l82><div class="dl_wrapper"><a name=line82 onclick='overload_click(this)' class="a_ln">82<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents"># define <span class='ctd macdef'>RE_CONTEXT_INDEP_OPS</span> (<a href='ctags/gnu_regex/regex.h#line74' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>RE_CONTEXT_INDEP_ANCHORS</a> &lt;&lt; 1)
</div></div></div><div class="div_line"  data-info=({id:10832,ln:83}) id=l83><div class="dl_wrapper"><a name=line83 onclick='overload_click(this)' class="a_ln">83<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:10833,ln:84}) id=l84><div class="dl_wrapper"><a name=line84 onclick='overload_click(this)' class="a_ln">84<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">/* If this bit is set, then *, +, ?, and { cannot be first in an re or
</div></div></div><div class="div_line"  data-info=({id:10834,ln:85}) id=l85><div class="dl_wrapper"><a name=line85 onclick='overload_click(this)' class="a_ln">85<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">     immediately after an alternation or begin-group operator.  */
</div></div></div><div class="div_line"  data-info=({id:10835,ln:86}) id=l86><div class="dl_wrapper"><a name=line86 onclick='overload_click(this)' class="a_ln">86<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents"># define <span class='ctd macdef'>RE_CONTEXT_INVALID_OPS</span> (<a href='ctags/gnu_regex/regex.h#line82' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>RE_CONTEXT_INDEP_OPS</a> &lt;&lt; 1)
</div></div></div><div class="div_line"  data-info=({id:10836,ln:87}) id=l87><div class="dl_wrapper"><a name=line87 onclick='overload_click(this)' class="a_ln">87<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:10837,ln:88}) id=l88><div class="dl_wrapper"><a name=line88 onclick='overload_click(this)' class="a_ln">88<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">/* If this bit is set, then . matches newline.
</div></div></div><div class="div_line"  data-info=({id:10838,ln:89}) id=l89><div class="dl_wrapper"><a name=line89 onclick='overload_click(this)' class="a_ln">89<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   If not set, then it doesn't.  */
</div></div></div><div class="div_line"  data-info=({id:10839,ln:90}) id=l90><div class="dl_wrapper"><a name=line90 onclick='overload_click(this)' class="a_ln">90<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents"># define <span class='ctd macdef'>RE_DOT_NEWLINE</span> (<a href='ctags/gnu_regex/regex.h#line86' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>RE_CONTEXT_INVALID_OPS</a> &lt;&lt; 1)
</div></div></div><div class="div_line"  data-info=({id:10840,ln:91}) id=l91><div class="dl_wrapper"><a name=line91 onclick='overload_click(this)' class="a_ln">91<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:10841,ln:92}) id=l92><div class="dl_wrapper"><a name=line92 onclick='overload_click(this)' class="a_ln">92<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">/* If this bit is set, then . doesn't match NUL.
</div></div></div><div class="div_line"  data-info=({id:10842,ln:93}) id=l93><div class="dl_wrapper"><a name=line93 onclick='overload_click(this)' class="a_ln">93<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   If not set, then it does.  */
</div></div></div><div class="div_line"  data-info=({id:10843,ln:94}) id=l94><div class="dl_wrapper"><a name=line94 onclick='overload_click(this)' class="a_ln">94<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents"># define <span class='ctd macdef'>RE_DOT_NOT_NULL</span> (<a href='ctags/gnu_regex/regex.h#line90' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>RE_DOT_NEWLINE</a> &lt;&lt; 1)
</div></div></div><div class="div_line"  data-info=({id:10844,ln:95}) id=l95><div class="dl_wrapper"><a name=line95 onclick='overload_click(this)' class="a_ln">95<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:10845,ln:96}) id=l96><div class="dl_wrapper"><a name=line96 onclick='overload_click(this)' class="a_ln">96<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">/* If this bit is set, nonmatching lists [^...] do not match newline.
</div></div></div><div class="div_line"  data-info=({id:10846,ln:97}) id=l97><div class="dl_wrapper"><a name=line97 onclick='overload_click(this)' class="a_ln">97<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   If not set, they do.  */
</div></div></div><div class="div_line"  data-info=({id:10847,ln:98}) id=l98><div class="dl_wrapper"><a name=line98 onclick='overload_click(this)' class="a_ln">98<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents"># define <span class='ctd macdef'>RE_HAT_LISTS_NOT_NEWLINE</span> (<a href='ctags/gnu_regex/regex.h#line94' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>RE_DOT_NOT_NULL</a> &lt;&lt; 1)
</div></div></div><div class="div_line"  data-info=({id:10848,ln:99}) id=l99><div class="dl_wrapper"><a name=line99 onclick='overload_click(this)' class="a_ln">99<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:10849,ln:100}) id=l100><div class="dl_wrapper"><a name=line100 onclick='overload_click(this)' class="a_ln">100<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">/* If this bit is set, either \{...\} or {...} defines an
</div></div></div><div class="div_line"  data-info=({id:10850,ln:101}) id=l101><div class="dl_wrapper"><a name=line101 onclick='overload_click(this)' class="a_ln">101<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">     interval, depending on RE_NO_BK_BRACES.
</div></div></div><div class="div_line"  data-info=({id:10851,ln:102}) id=l102><div class="dl_wrapper"><a name=line102 onclick='overload_click(this)' class="a_ln">102<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   If not set, \{, \}, {, and } are literals.  */
</div></div></div><div class="div_line"  data-info=({id:10852,ln:103}) id=l103><div class="dl_wrapper"><a name=line103 onclick='overload_click(this)' class="a_ln">103<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents"># define <span class='ctd macdef'>RE_INTERVALS</span> (<a href='ctags/gnu_regex/regex.h#line98' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>RE_HAT_LISTS_NOT_NEWLINE</a> &lt;&lt; 1)
</div></div></div><div class="div_line"  data-info=({id:10853,ln:104}) id=l104><div class="dl_wrapper"><a name=line104 onclick='overload_click(this)' class="a_ln">104<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:10854,ln:105}) id=l105><div class="dl_wrapper"><a name=line105 onclick='overload_click(this)' class="a_ln">105<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">/* If this bit is set, +, ? and | aren't recognized as operators.
</div></div></div><div class="div_line"  data-info=({id:10855,ln:106}) id=l106><div class="dl_wrapper"><a name=line106 onclick='overload_click(this)' class="a_ln">106<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   If not set, they are.  */
</div></div></div><div class="div_line"  data-info=({id:10856,ln:107}) id=l107><div class="dl_wrapper"><a name=line107 onclick='overload_click(this)' class="a_ln">107<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents"># define <span class='ctd macdef'>RE_LIMITED_OPS</span> (<a href='ctags/gnu_regex/regex.h#line103' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>RE_INTERVALS</a> &lt;&lt; 1)
</div></div></div><div class="div_line"  data-info=({id:10857,ln:108}) id=l108><div class="dl_wrapper"><a name=line108 onclick='overload_click(this)' class="a_ln">108<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:10858,ln:109}) id=l109><div class="dl_wrapper"><a name=line109 onclick='overload_click(this)' class="a_ln">109<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">/* If this bit is set, newline is an alternation operator.
</div></div></div><div class="div_line"  data-info=({id:10859,ln:110}) id=l110><div class="dl_wrapper"><a name=line110 onclick='overload_click(this)' class="a_ln">110<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   If not set, newline is literal.  */
</div></div></div><div class="div_line"  data-info=({id:10860,ln:111}) id=l111><div class="dl_wrapper"><a name=line111 onclick='overload_click(this)' class="a_ln">111<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents"># define <span class='ctd macdef'>RE_NEWLINE_ALT</span> (<a href='ctags/gnu_regex/regex.h#line107' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>RE_LIMITED_OPS</a> &lt;&lt; 1)
</div></div></div><div class="div_line"  data-info=({id:10861,ln:112}) id=l112><div class="dl_wrapper"><a name=line112 onclick='overload_click(this)' class="a_ln">112<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:10862,ln:113}) id=l113><div class="dl_wrapper"><a name=line113 onclick='overload_click(this)' class="a_ln">113<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">/* If this bit is set, then `{...}' defines an interval, and \{ and \}
</div></div></div><div class="div_line"  data-info=({id:10863,ln:114}) id=l114><div class="dl_wrapper"><a name=line114 onclick='overload_click(this)' class="a_ln">114<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">     are literals.
</div></div></div><div class="div_line"  data-info=({id:10864,ln:115}) id=l115><div class="dl_wrapper"><a name=line115 onclick='overload_click(this)' class="a_ln">115<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">  If not set, then `\{...\}' defines an interval.  */
</div></div></div><div class="div_line"  data-info=({id:10865,ln:116}) id=l116><div class="dl_wrapper"><a name=line116 onclick='overload_click(this)' class="a_ln">116<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents"># define <span class='ctd macdef'>RE_NO_BK_BRACES</span> (<a href='ctags/gnu_regex/regex.h#line111' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>RE_NEWLINE_ALT</a> &lt;&lt; 1)
</div></div></div><div class="div_line"  data-info=({id:10866,ln:117}) id=l117><div class="dl_wrapper"><a name=line117 onclick='overload_click(this)' class="a_ln">117<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:10867,ln:118}) id=l118><div class="dl_wrapper"><a name=line118 onclick='overload_click(this)' class="a_ln">118<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">/* If this bit is set, (...) defines a group, and \( and \) are literals.
</div></div></div><div class="div_line"  data-info=({id:10868,ln:119}) id=l119><div class="dl_wrapper"><a name=line119 onclick='overload_click(this)' class="a_ln">119<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   If not set, \(...\) defines a group, and ( and ) are literals.  */
</div></div></div><div class="div_line"  data-info=({id:10869,ln:120}) id=l120><div class="dl_wrapper"><a name=line120 onclick='overload_click(this)' class="a_ln">120<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents"># define <span class='ctd macdef'>RE_NO_BK_PARENS</span> (<a href='ctags/gnu_regex/regex.h#line116' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>RE_NO_BK_BRACES</a> &lt;&lt; 1)
</div></div></div><div class="div_line"  data-info=({id:10870,ln:121}) id=l121><div class="dl_wrapper"><a name=line121 onclick='overload_click(this)' class="a_ln">121<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:10871,ln:122}) id=l122><div class="dl_wrapper"><a name=line122 onclick='overload_click(this)' class="a_ln">122<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">/* If this bit is set, then \&lt;digit&gt; matches &lt;digit&gt;.
</div></div></div><div class="div_line"  data-info=({id:10872,ln:123}) id=l123><div class="dl_wrapper"><a name=line123 onclick='overload_click(this)' class="a_ln">123<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   If not set, then \&lt;digit&gt; is a back-reference.  */
</div></div></div><div class="div_line"  data-info=({id:10873,ln:124}) id=l124><div class="dl_wrapper"><a name=line124 onclick='overload_click(this)' class="a_ln">124<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents"># define <span class='ctd macdef'>RE_NO_BK_REFS</span> (<a href='ctags/gnu_regex/regex.h#line120' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>RE_NO_BK_PARENS</a> &lt;&lt; 1)
</div></div></div><div class="div_line"  data-info=({id:10874,ln:125}) id=l125><div class="dl_wrapper"><a name=line125 onclick='overload_click(this)' class="a_ln">125<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:10875,ln:126}) id=l126><div class="dl_wrapper"><a name=line126 onclick='overload_click(this)' class="a_ln">126<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">/* If this bit is set, then | is an alternation operator, and \| is literal.
</div></div></div><div class="div_line"  data-info=({id:10876,ln:127}) id=l127><div class="dl_wrapper"><a name=line127 onclick='overload_click(this)' class="a_ln">127<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   If not set, then \| is an alternation operator, and | is literal.  */
</div></div></div><div class="div_line"  data-info=({id:10877,ln:128}) id=l128><div class="dl_wrapper"><a name=line128 onclick='overload_click(this)' class="a_ln">128<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents"># define <span class='ctd macdef'>RE_NO_BK_VBAR</span> (<a href='ctags/gnu_regex/regex.h#line124' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>RE_NO_BK_REFS</a> &lt;&lt; 1)
</div></div></div><div class="div_line"  data-info=({id:10878,ln:129}) id=l129><div class="dl_wrapper"><a name=line129 onclick='overload_click(this)' class="a_ln">129<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:10879,ln:130}) id=l130><div class="dl_wrapper"><a name=line130 onclick='overload_click(this)' class="a_ln">130<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">/* If this bit is set, then an ending range point collating higher
</div></div></div><div class="div_line"  data-info=({id:10880,ln:131}) id=l131><div class="dl_wrapper"><a name=line131 onclick='overload_click(this)' class="a_ln">131<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">     than the starting range point, as in [z-a], is invalid.
</div></div></div><div class="div_line"  data-info=({id:10881,ln:132}) id=l132><div class="dl_wrapper"><a name=line132 onclick='overload_click(this)' class="a_ln">132<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   If not set, then when ending range point collates higher than the
</div></div></div><div class="div_line"  data-info=({id:10882,ln:133}) id=l133><div class="dl_wrapper"><a name=line133 onclick='overload_click(this)' class="a_ln">133<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">     starting range point, the range is ignored.  */
</div></div></div><div class="div_line"  data-info=({id:10883,ln:134}) id=l134><div class="dl_wrapper"><a name=line134 onclick='overload_click(this)' class="a_ln">134<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents"># define <span class='ctd macdef'>RE_NO_EMPTY_RANGES</span> (<a href='ctags/gnu_regex/regex.h#line128' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>RE_NO_BK_VBAR</a> &lt;&lt; 1)
</div></div></div><div class="div_line"  data-info=({id:10884,ln:135}) id=l135><div class="dl_wrapper"><a name=line135 onclick='overload_click(this)' class="a_ln">135<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:10885,ln:136}) id=l136><div class="dl_wrapper"><a name=line136 onclick='overload_click(this)' class="a_ln">136<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">/* If this bit is set, then an unmatched ) is ordinary.
</div></div></div><div class="div_line"  data-info=({id:10886,ln:137}) id=l137><div class="dl_wrapper"><a name=line137 onclick='overload_click(this)' class="a_ln">137<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   If not set, then an unmatched ) is invalid.  */
</div></div></div><div class="div_line"  data-info=({id:10887,ln:138}) id=l138><div class="dl_wrapper"><a name=line138 onclick='overload_click(this)' class="a_ln">138<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents"># define <span class='ctd macdef'>RE_UNMATCHED_RIGHT_PAREN_ORD</span> (<a href='ctags/gnu_regex/regex.h#line134' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>RE_NO_EMPTY_RANGES</a> &lt;&lt; 1)
</div></div></div><div class="div_line"  data-info=({id:10888,ln:139}) id=l139><div class="dl_wrapper"><a name=line139 onclick='overload_click(this)' class="a_ln">139<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:10889,ln:140}) id=l140><div class="dl_wrapper"><a name=line140 onclick='overload_click(this)' class="a_ln">140<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">/* If this bit is set, succeed as soon as we match the whole pattern,
</div></div></div><div class="div_line"  data-info=({id:10890,ln:141}) id=l141><div class="dl_wrapper"><a name=line141 onclick='overload_click(this)' class="a_ln">141<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   without further backtracking.  */
</div></div></div><div class="div_line"  data-info=({id:10891,ln:142}) id=l142><div class="dl_wrapper"><a name=line142 onclick='overload_click(this)' class="a_ln">142<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents"># define <span class='ctd macdef'>RE_NO_POSIX_BACKTRACKING</span> (<a href='ctags/gnu_regex/regex.h#line138' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>RE_UNMATCHED_RIGHT_PAREN_ORD</a> &lt;&lt; 1)
</div></div></div><div class="div_line"  data-info=({id:10892,ln:143}) id=l143><div class="dl_wrapper"><a name=line143 onclick='overload_click(this)' class="a_ln">143<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:10893,ln:144}) id=l144><div class="dl_wrapper"><a name=line144 onclick='overload_click(this)' class="a_ln">144<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">/* If this bit is set, do not process the GNU regex operators.
</div></div></div><div class="div_line"  data-info=({id:10894,ln:145}) id=l145><div class="dl_wrapper"><a name=line145 onclick='overload_click(this)' class="a_ln">145<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   If not set, then the GNU regex operators are recognized. */
</div></div></div><div class="div_line"  data-info=({id:10895,ln:146}) id=l146><div class="dl_wrapper"><a name=line146 onclick='overload_click(this)' class="a_ln">146<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents"># define <span class='ctd macdef'>RE_NO_GNU_OPS</span> (<a href='ctags/gnu_regex/regex.h#line142' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>RE_NO_POSIX_BACKTRACKING</a> &lt;&lt; 1)
</div></div></div><div class="div_line"  data-info=({id:10896,ln:147}) id=l147><div class="dl_wrapper"><a name=line147 onclick='overload_click(this)' class="a_ln">147<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:10897,ln:148}) id=l148><div class="dl_wrapper"><a name=line148 onclick='overload_click(this)' class="a_ln">148<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">/* If this bit is set, turn on internal regex debugging.
</div></div></div><div class="div_line"  data-info=({id:10898,ln:149}) id=l149><div class="dl_wrapper"><a name=line149 onclick='overload_click(this)' class="a_ln">149<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   If not set, and debugging was on, turn it off.
</div></div></div><div class="div_line"  data-info=({id:10899,ln:150}) id=l150><div class="dl_wrapper"><a name=line150 onclick='overload_click(this)' class="a_ln">150<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   This only works if regex.c is compiled -DDEBUG.
</div></div></div><div class="div_line"  data-info=({id:10900,ln:151}) id=l151><div class="dl_wrapper"><a name=line151 onclick='overload_click(this)' class="a_ln">151<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   We define this bit always, so that all that's needed to turn on
</div></div></div><div class="div_line"  data-info=({id:10901,ln:152}) id=l152><div class="dl_wrapper"><a name=line152 onclick='overload_click(this)' class="a_ln">152<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   debugging is to recompile regex.c; the calling code can always have
</div></div></div><div class="div_line"  data-info=({id:10902,ln:153}) id=l153><div class="dl_wrapper"><a name=line153 onclick='overload_click(this)' class="a_ln">153<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   this bit set, and it won't affect anything in the normal case. */
</div></div></div><div class="div_line"  data-info=({id:10903,ln:154}) id=l154><div class="dl_wrapper"><a name=line154 onclick='overload_click(this)' class="a_ln">154<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents"># define <span class='ctd macdef'>RE_DEBUG</span> (<a href='ctags/gnu_regex/regex.h#line146' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>RE_NO_GNU_OPS</a> &lt;&lt; 1)
</div></div></div><div class="div_line"  data-info=({id:10904,ln:155}) id=l155><div class="dl_wrapper"><a name=line155 onclick='overload_click(this)' class="a_ln">155<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:10905,ln:156}) id=l156><div class="dl_wrapper"><a name=line156 onclick='overload_click(this)' class="a_ln">156<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">/* If this bit is set, a syntactically invalid interval is treated as
</div></div></div><div class="div_line"  data-info=({id:10906,ln:157}) id=l157><div class="dl_wrapper"><a name=line157 onclick='overload_click(this)' class="a_ln">157<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   a string of ordinary characters.  For example, the ERE 'a{1' is
</div></div></div><div class="div_line"  data-info=({id:10907,ln:158}) id=l158><div class="dl_wrapper"><a name=line158 onclick='overload_click(this)' class="a_ln">158<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   treated as 'a\{1'.  */
</div></div></div><div class="div_line"  data-info=({id:10908,ln:159}) id=l159><div class="dl_wrapper"><a name=line159 onclick='overload_click(this)' class="a_ln">159<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents"># define <span class='ctd macdef'>RE_INVALID_INTERVAL_ORD</span> (<a href='ctags/gnu_regex/regex.h#line154' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>RE_DEBUG</a> &lt;&lt; 1)
</div></div></div><div class="div_line"  data-info=({id:10909,ln:160}) id=l160><div class="dl_wrapper"><a name=line160 onclick='overload_click(this)' class="a_ln">160<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:10910,ln:161}) id=l161><div class="dl_wrapper"><a name=line161 onclick='overload_click(this)' class="a_ln">161<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">/* If this bit is set, then ignore case when matching.
</div></div></div><div class="div_line"  data-info=({id:10911,ln:162}) id=l162><div class="dl_wrapper"><a name=line162 onclick='overload_click(this)' class="a_ln">162<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   If not set, then case is significant.  */
</div></div></div><div class="div_line"  data-info=({id:10912,ln:163}) id=l163><div class="dl_wrapper"><a name=line163 onclick='overload_click(this)' class="a_ln">163<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents"># define <span class='ctd macdef'>RE_ICASE</span> (<a href='ctags/gnu_regex/regex.h#line159' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>RE_INVALID_INTERVAL_ORD</a> &lt;&lt; 1)
</div></div></div><div class="div_line"  data-info=({id:10913,ln:164}) id=l164><div class="dl_wrapper"><a name=line164 onclick='overload_click(this)' class="a_ln">164<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:10914,ln:165}) id=l165><div class="dl_wrapper"><a name=line165 onclick='overload_click(this)' class="a_ln">165<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">/* This bit is used internally like RE_CONTEXT_INDEP_ANCHORS but only
</div></div></div><div class="div_line"  data-info=({id:10915,ln:166}) id=l166><div class="dl_wrapper"><a name=line166 onclick='overload_click(this)' class="a_ln">166<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   for ^, because it is difficult to scan the regex backwards to find
</div></div></div><div class="div_line"  data-info=({id:10916,ln:167}) id=l167><div class="dl_wrapper"><a name=line167 onclick='overload_click(this)' class="a_ln">167<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   whether ^ should be special.  */
</div></div></div><div class="div_line"  data-info=({id:10917,ln:168}) id=l168><div class="dl_wrapper"><a name=line168 onclick='overload_click(this)' class="a_ln">168<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents"># define <span class='ctd macdef'>RE_CARET_ANCHORS_HERE</span> (<a href='ctags/gnu_regex/regex.h#line163' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>RE_ICASE</a> &lt;&lt; 1)
</div></div></div><div class="div_line"  data-info=({id:10918,ln:169}) id=l169><div class="dl_wrapper"><a name=line169 onclick='overload_click(this)' class="a_ln">169<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:10919,ln:170}) id=l170><div class="dl_wrapper"><a name=line170 onclick='overload_click(this)' class="a_ln">170<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">/* If this bit is set, then \{ cannot be first in an bre or
</div></div></div><div class="div_line"  data-info=({id:10920,ln:171}) id=l171><div class="dl_wrapper"><a name=line171 onclick='overload_click(this)' class="a_ln">171<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   immediately after an alternation or begin-group operator.  */
</div></div></div><div class="div_line"  data-info=({id:10921,ln:172}) id=l172><div class="dl_wrapper"><a name=line172 onclick='overload_click(this)' class="a_ln">172<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents"># define <span class='ctd macdef'>RE_CONTEXT_INVALID_DUP</span> (<a href='ctags/gnu_regex/regex.h#line168' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>RE_CARET_ANCHORS_HERE</a> &lt;&lt; 1)
</div></div></div><div class="div_line"  data-info=({id:10922,ln:173}) id=l173><div class="dl_wrapper"><a name=line173 onclick='overload_click(this)' class="a_ln">173<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:10923,ln:174}) id=l174><div class="dl_wrapper"><a name=line174 onclick='overload_click(this)' class="a_ln">174<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">/* If this bit is set, then no_sub will be set to 1 during
</div></div></div><div class="div_line"  data-info=({id:10924,ln:175}) id=l175><div class="dl_wrapper"><a name=line175 onclick='overload_click(this)' class="a_ln">175<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   re_compile_pattern.  */
</div></div></div><div class="div_line"  data-info=({id:10925,ln:176}) id=l176><div class="dl_wrapper"><a name=line176 onclick='overload_click(this)' class="a_ln">176<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents"># define <span class='ctd macdef'>RE_NO_SUB</span> (<a href='ctags/gnu_regex/regex.h#line172' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>RE_CONTEXT_INVALID_DUP</a> &lt;&lt; 1)
</div></div></div><div class="div_line"  data-info=({id:10926,ln:177}) id=l177><div class="dl_wrapper"><a name=line177 onclick='overload_click(this)' class="a_ln">177<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">#endif
</div></div></div><div class="div_line"  data-info=({id:10927,ln:178}) id=l178><div class="dl_wrapper"><a name=line178 onclick='overload_click(this)' class="a_ln">178<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:10928,ln:179}) id=l179><div class="dl_wrapper"><a name=line179 onclick='overload_click(this)' class="a_ln">179<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">/* This global variable defines the particular regexp syntax to use (for
</div></div></div><div class="div_line"  data-info=({id:10929,ln:180}) id=l180><div class="dl_wrapper"><a name=line180 onclick='overload_click(this)' class="a_ln">180<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   some interfaces).  When a regexp is compiled, the syntax used is
</div></div></div><div class="div_line"  data-info=({id:10930,ln:181}) id=l181><div class="dl_wrapper"><a name=line181 onclick='overload_click(this)' class="a_ln">181<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   stored in the pattern buffer, so changing this does not affect
</div></div></div><div class="div_line"  data-info=({id:10931,ln:182}) id=l182><div class="dl_wrapper"><a name=line182 onclick='overload_click(this)' class="a_ln">182<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   already-compiled regexps.  */
</div></div></div><div class="div_line"  data-info=({id:10932,ln:183}) id=l183><div class="dl_wrapper"><a name=line183 onclick='overload_click(this)' class="a_ln">183<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">extern reg_syntax_t re_syntax_options;
</div></div></div><div class="div_line"  data-info=({id:10933,ln:184}) id=l184><div class="dl_wrapper"><a name=line184 onclick='overload_click(this)' class="a_ln">184<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:10934,ln:185}) id=l185><div class="dl_wrapper"><a name=line185 onclick='overload_click(this)' class="a_ln">185<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">#ifdef __USE_GNU
</div></div></div><div class="div_line"  data-info=({id:10935,ln:186}) id=l186><div class="dl_wrapper"><a name=line186 onclick='overload_click(this)' class="a_ln">186<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">/* Define combinations of the above bits for the standard possibilities.
</div></div></div><div class="div_line"  data-info=({id:10936,ln:187}) id=l187><div class="dl_wrapper"><a name=line187 onclick='overload_click(this)' class="a_ln">187<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   (The [[[ comments delimit what gets put into the Texinfo file, so
</div></div></div><div class="div_line"  data-info=({id:10937,ln:188}) id=l188><div class="dl_wrapper"><a name=line188 onclick='overload_click(this)' class="a_ln">188<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   don't delete them!)  */
</div></div></div><div class="div_line"  data-info=({id:10938,ln:189}) id=l189><div class="dl_wrapper"><a name=line189 onclick='overload_click(this)' class="a_ln">189<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">/* [[[begin syntaxes]]] */
</div></div></div><div class="div_line"  data-info=({id:10939,ln:190}) id=l190><div class="dl_wrapper"><a name=line190 onclick='overload_click(this)' class="a_ln">190<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">#define <span class='ctd macdef'>RE_SYNTAX_EMACS</span> 0
</div></div></div><div class="div_line"  data-info=({id:10940,ln:191}) id=l191><div class="dl_wrapper"><a name=line191 onclick='overload_click(this)' class="a_ln">191<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:10941,ln:192}) id=l192><div class="dl_wrapper"><a name=line192 onclick='overload_click(this)' class="a_ln">192<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">#define <span class='ctd macdef'>RE_SYNTAX_AWK</span>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;\
</div></div></div><div class="div_line"  data-info=({id:10942,ln:193}) id=l193><div class="dl_wrapper"><a name=line193 onclick='overload_click(this)' class="a_ln">193<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">  (<a href='ctags/gnu_regex/regex.h#line49' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>RE_BACKSLASH_ESCAPE_IN_LISTS</a>   | <a href='ctags/gnu_regex/regex.h#line94' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>RE_DOT_NOT_NULL</a>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;\
</div></div></div><div class="div_line"  data-info=({id:10943,ln:194}) id=l194><div class="dl_wrapper"><a name=line194 onclick='overload_click(this)' class="a_ln">194<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   | <a href='ctags/gnu_regex/regex.h#line120' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>RE_NO_BK_PARENS</a>              | <a href='ctags/gnu_regex/regex.h#line124' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>RE_NO_BK_REFS</a>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;\
</div></div></div><div class="div_line"  data-info=({id:10944,ln:195}) id=l195><div class="dl_wrapper"><a name=line195 onclick='overload_click(this)' class="a_ln">195<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   | <a href='ctags/gnu_regex/regex.h#line128' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>RE_NO_BK_VBAR</a>                | <a href='ctags/gnu_regex/regex.h#line134' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>RE_NO_EMPTY_RANGES</a>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;\
</div></div></div><div class="div_line"  data-info=({id:10945,ln:196}) id=l196><div class="dl_wrapper"><a name=line196 onclick='overload_click(this)' class="a_ln">196<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   | <a href='ctags/gnu_regex/regex.h#line90' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>RE_DOT_NEWLINE</a>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;  | <a href='ctags/gnu_regex/regex.h#line74' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>RE_CONTEXT_INDEP_ANCHORS</a>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;\
</div></div></div><div class="div_line"  data-info=({id:10946,ln:197}) id=l197><div class="dl_wrapper"><a name=line197 onclick='overload_click(this)' class="a_ln">197<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   | <a href='ctags/gnu_regex/regex.h#line138' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>RE_UNMATCHED_RIGHT_PAREN_ORD</a> | <a href='ctags/gnu_regex/regex.h#line146' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>RE_NO_GNU_OPS</a>)
</div></div></div><div class="div_line"  data-info=({id:10947,ln:198}) id=l198><div class="dl_wrapper"><a name=line198 onclick='overload_click(this)' class="a_ln">198<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:10948,ln:199}) id=l199><div class="dl_wrapper"><a name=line199 onclick='overload_click(this)' class="a_ln">199<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">#define <span class='ctd macdef'>RE_SYNTAX_GNU_AWK</span>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;\
</div></div></div><div class="div_line"  data-info=({id:10949,ln:200}) id=l200><div class="dl_wrapper"><a name=line200 onclick='overload_click(this)' class="a_ln">200<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">  ((<a href='ctags/gnu_regex/regex.h#line242' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>RE_SYNTAX_POSIX_EXTENDED</a> | <a href='ctags/gnu_regex/regex.h#line49' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>RE_BACKSLASH_ESCAPE_IN_LISTS</a> | <a href='ctags/gnu_regex/regex.h#line154' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>RE_DEBUG</a>)&#160;&#160;&#160;&#160;\
</div></div></div><div class="div_line"  data-info=({id:10950,ln:201}) id=l201><div class="dl_wrapper"><a name=line201 onclick='overload_click(this)' class="a_ln">201<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   & ~(<a href='ctags/gnu_regex/regex.h#line94' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>RE_DOT_NOT_NULL</a> | <a href='ctags/gnu_regex/regex.h#line103' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>RE_INTERVALS</a> | <a href='ctags/gnu_regex/regex.h#line82' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>RE_CONTEXT_INDEP_OPS</a>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;\
</div></div></div><div class="div_line"  data-info=({id:10951,ln:202}) id=l202><div class="dl_wrapper"><a name=line202 onclick='overload_click(this)' class="a_ln">202<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">       | <a href='ctags/gnu_regex/regex.h#line86' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>RE_CONTEXT_INVALID_OPS</a> ))
</div></div></div><div class="div_line"  data-info=({id:10952,ln:203}) id=l203><div class="dl_wrapper"><a name=line203 onclick='overload_click(this)' class="a_ln">203<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:10953,ln:204}) id=l204><div class="dl_wrapper"><a name=line204 onclick='overload_click(this)' class="a_ln">204<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">#define <span class='ctd macdef'>RE_SYNTAX_POSIX_AWK</span>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;\
</div></div></div><div class="div_line"  data-info=({id:10954,ln:205}) id=l205><div class="dl_wrapper"><a name=line205 onclick='overload_click(this)' class="a_ln">205<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">  (<a href='ctags/gnu_regex/regex.h#line242' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>RE_SYNTAX_POSIX_EXTENDED</a> | <a href='ctags/gnu_regex/regex.h#line49' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>RE_BACKSLASH_ESCAPE_IN_LISTS</a>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;\
</div></div></div><div class="div_line"  data-info=({id:10955,ln:206}) id=l206><div class="dl_wrapper"><a name=line206 onclick='overload_click(this)' class="a_ln">206<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   | <a href='ctags/gnu_regex/regex.h#line103' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>RE_INTERVALS</a>&#160;&#160;&#160;&#160;    | <a href='ctags/gnu_regex/regex.h#line146' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>RE_NO_GNU_OPS</a>)
</div></div></div><div class="div_line"  data-info=({id:10956,ln:207}) id=l207><div class="dl_wrapper"><a name=line207 onclick='overload_click(this)' class="a_ln">207<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:10957,ln:208}) id=l208><div class="dl_wrapper"><a name=line208 onclick='overload_click(this)' class="a_ln">208<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">#define <span class='ctd macdef'>RE_SYNTAX_GREP</span>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;\
</div></div></div><div class="div_line"  data-info=({id:10958,ln:209}) id=l209><div class="dl_wrapper"><a name=line209 onclick='overload_click(this)' class="a_ln">209<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">  (<a href='ctags/gnu_regex/regex.h#line54' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>RE_BK_PLUS_QM</a>              | <a href='ctags/gnu_regex/regex.h#line60' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>RE_CHAR_CLASSES</a>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;\
</div></div></div><div class="div_line"  data-info=({id:10959,ln:210}) id=l210><div class="dl_wrapper"><a name=line210 onclick='overload_click(this)' class="a_ln">210<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   | <a href='ctags/gnu_regex/regex.h#line98' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>RE_HAT_LISTS_NOT_NEWLINE</a> | <a href='ctags/gnu_regex/regex.h#line103' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>RE_INTERVALS</a>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;\
</div></div></div><div class="div_line"  data-info=({id:10960,ln:211}) id=l211><div class="dl_wrapper"><a name=line211 onclick='overload_click(this)' class="a_ln">211<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   | <a href='ctags/gnu_regex/regex.h#line111' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>RE_NEWLINE_ALT</a>)
</div></div></div><div class="div_line"  data-info=({id:10961,ln:212}) id=l212><div class="dl_wrapper"><a name=line212 onclick='overload_click(this)' class="a_ln">212<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:10962,ln:213}) id=l213><div class="dl_wrapper"><a name=line213 onclick='overload_click(this)' class="a_ln">213<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">#define <span class='ctd macdef'>RE_SYNTAX_EGREP</span>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;\
</div></div></div><div class="div_line"  data-info=({id:10963,ln:214}) id=l214><div class="dl_wrapper"><a name=line214 onclick='overload_click(this)' class="a_ln">214<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">  (<a href='ctags/gnu_regex/regex.h#line60' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>RE_CHAR_CLASSES</a>        | <a href='ctags/gnu_regex/regex.h#line74' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>RE_CONTEXT_INDEP_ANCHORS</a>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;\
</div></div></div><div class="div_line"  data-info=({id:10964,ln:215}) id=l215><div class="dl_wrapper"><a name=line215 onclick='overload_click(this)' class="a_ln">215<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   | <a href='ctags/gnu_regex/regex.h#line82' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>RE_CONTEXT_INDEP_OPS</a> | <a href='ctags/gnu_regex/regex.h#line98' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>RE_HAT_LISTS_NOT_NEWLINE</a>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;\
</div></div></div><div class="div_line"  data-info=({id:10965,ln:216}) id=l216><div class="dl_wrapper"><a name=line216 onclick='overload_click(this)' class="a_ln">216<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   | <a href='ctags/gnu_regex/regex.h#line111' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>RE_NEWLINE_ALT</a>       | <a href='ctags/gnu_regex/regex.h#line120' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>RE_NO_BK_PARENS</a>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;\
</div></div></div><div class="div_line"  data-info=({id:10966,ln:217}) id=l217><div class="dl_wrapper"><a name=line217 onclick='overload_click(this)' class="a_ln">217<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   | <a href='ctags/gnu_regex/regex.h#line128' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>RE_NO_BK_VBAR</a>)
</div></div></div><div class="div_line"  data-info=({id:10967,ln:218}) id=l218><div class="dl_wrapper"><a name=line218 onclick='overload_click(this)' class="a_ln">218<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:10968,ln:219}) id=l219><div class="dl_wrapper"><a name=line219 onclick='overload_click(this)' class="a_ln">219<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">#define <span class='ctd macdef'>RE_SYNTAX_POSIX_EGREP</span>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;\
</div></div></div><div class="div_line"  data-info=({id:10969,ln:220}) id=l220><div class="dl_wrapper"><a name=line220 onclick='overload_click(this)' class="a_ln">220<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">  (<a href='ctags/gnu_regex/regex.h#line213' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>RE_SYNTAX_EGREP</a> | <a href='ctags/gnu_regex/regex.h#line103' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>RE_INTERVALS</a> | <a href='ctags/gnu_regex/regex.h#line116' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>RE_NO_BK_BRACES</a>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;\
</div></div></div><div class="div_line"  data-info=({id:10970,ln:221}) id=l221><div class="dl_wrapper"><a name=line221 onclick='overload_click(this)' class="a_ln">221<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   | <a href='ctags/gnu_regex/regex.h#line159' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>RE_INVALID_INTERVAL_ORD</a>)
</div></div></div><div class="div_line"  data-info=({id:10971,ln:222}) id=l222><div class="dl_wrapper"><a name=line222 onclick='overload_click(this)' class="a_ln">222<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:10972,ln:223}) id=l223><div class="dl_wrapper"><a name=line223 onclick='overload_click(this)' class="a_ln">223<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">/* P1003.2/D11.2, section 4.20.7.1, lines 5078ff.  */
</div></div></div><div class="div_line"  data-info=({id:10973,ln:224}) id=l224><div class="dl_wrapper"><a name=line224 onclick='overload_click(this)' class="a_ln">224<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">#define <span class='ctd macdef'>RE_SYNTAX_ED</span> <a href='ctags/gnu_regex/regex.h#line233' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>RE_SYNTAX_POSIX_BASIC</a>
</div></div></div><div class="div_line"  data-info=({id:10974,ln:225}) id=l225><div class="dl_wrapper"><a name=line225 onclick='overload_click(this)' class="a_ln">225<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:10975,ln:226}) id=l226><div class="dl_wrapper"><a name=line226 onclick='overload_click(this)' class="a_ln">226<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">#define <span class='ctd macdef'>RE_SYNTAX_SED</span> <a href='ctags/gnu_regex/regex.h#line233' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>RE_SYNTAX_POSIX_BASIC</a>
</div></div></div><div class="div_line"  data-info=({id:10976,ln:227}) id=l227><div class="dl_wrapper"><a name=line227 onclick='overload_click(this)' class="a_ln">227<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:10977,ln:228}) id=l228><div class="dl_wrapper"><a name=line228 onclick='overload_click(this)' class="a_ln">228<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">/* Syntax bits common to both basic and extended POSIX regex syntax.  */
</div></div></div><div class="div_line"  data-info=({id:10978,ln:229}) id=l229><div class="dl_wrapper"><a name=line229 onclick='overload_click(this)' class="a_ln">229<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">#define <span class='ctd macdef'>_RE_SYNTAX_POSIX_COMMON</span>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;\
</div></div></div><div class="div_line"  data-info=({id:10979,ln:230}) id=l230><div class="dl_wrapper"><a name=line230 onclick='overload_click(this)' class="a_ln">230<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">  (<a href='ctags/gnu_regex/regex.h#line60' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>RE_CHAR_CLASSES</a> | <a href='ctags/gnu_regex/regex.h#line90' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>RE_DOT_NEWLINE</a>      | <a href='ctags/gnu_regex/regex.h#line94' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>RE_DOT_NOT_NULL</a>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;\
</div></div></div><div class="div_line"  data-info=({id:10980,ln:231}) id=l231><div class="dl_wrapper"><a name=line231 onclick='overload_click(this)' class="a_ln">231<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   | <a href='ctags/gnu_regex/regex.h#line103' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>RE_INTERVALS</a>  | <a href='ctags/gnu_regex/regex.h#line134' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>RE_NO_EMPTY_RANGES</a>)
</div></div></div><div class="div_line"  data-info=({id:10981,ln:232}) id=l232><div class="dl_wrapper"><a name=line232 onclick='overload_click(this)' class="a_ln">232<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:10982,ln:233}) id=l233><div class="dl_wrapper"><a name=line233 onclick='overload_click(this)' class="a_ln">233<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">#define <span class='ctd macdef'>RE_SYNTAX_POSIX_BASIC</span>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;\
</div></div></div><div class="div_line"  data-info=({id:10983,ln:234}) id=l234><div class="dl_wrapper"><a name=line234 onclick='overload_click(this)' class="a_ln">234<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">  (<a href='ctags/gnu_regex/regex.h#line229' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>_RE_SYNTAX_POSIX_COMMON</a> | <a href='ctags/gnu_regex/regex.h#line54' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>RE_BK_PLUS_QM</a> | <a href='ctags/gnu_regex/regex.h#line172' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>RE_CONTEXT_INVALID_DUP</a>)
</div></div></div><div class="div_line"  data-info=({id:10984,ln:235}) id=l235><div class="dl_wrapper"><a name=line235 onclick='overload_click(this)' class="a_ln">235<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:10985,ln:236}) id=l236><div class="dl_wrapper"><a name=line236 onclick='overload_click(this)' class="a_ln">236<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">/* Differs from ..._POSIX_BASIC only in that RE_BK_PLUS_QM becomes
</div></div></div><div class="div_line"  data-info=({id:10986,ln:237}) id=l237><div class="dl_wrapper"><a name=line237 onclick='overload_click(this)' class="a_ln">237<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   RE_LIMITED_OPS, i.e., \? \+ \| are not recognized.  Actually, this
</div></div></div><div class="div_line"  data-info=({id:10987,ln:238}) id=l238><div class="dl_wrapper"><a name=line238 onclick='overload_click(this)' class="a_ln">238<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   isn't minimal, since other operators, such as \`, aren't disabled.  */
</div></div></div><div class="div_line"  data-info=({id:10988,ln:239}) id=l239><div class="dl_wrapper"><a name=line239 onclick='overload_click(this)' class="a_ln">239<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">#define <span class='ctd macdef'>RE_SYNTAX_POSIX_MINIMAL_BASIC</span>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;\
</div></div></div><div class="div_line"  data-info=({id:10989,ln:240}) id=l240><div class="dl_wrapper"><a name=line240 onclick='overload_click(this)' class="a_ln">240<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">  (<a href='ctags/gnu_regex/regex.h#line229' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>_RE_SYNTAX_POSIX_COMMON</a> | <a href='ctags/gnu_regex/regex.h#line107' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>RE_LIMITED_OPS</a>)
</div></div></div><div class="div_line"  data-info=({id:10990,ln:241}) id=l241><div class="dl_wrapper"><a name=line241 onclick='overload_click(this)' class="a_ln">241<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:10991,ln:242}) id=l242><div class="dl_wrapper"><a name=line242 onclick='overload_click(this)' class="a_ln">242<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">#define <span class='ctd macdef'>RE_SYNTAX_POSIX_EXTENDED</span>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;\
</div></div></div><div class="div_line"  data-info=({id:10992,ln:243}) id=l243><div class="dl_wrapper"><a name=line243 onclick='overload_click(this)' class="a_ln">243<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">  (<a href='ctags/gnu_regex/regex.h#line229' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>_RE_SYNTAX_POSIX_COMMON</a>  | <a href='ctags/gnu_regex/regex.h#line74' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>RE_CONTEXT_INDEP_ANCHORS</a>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;\
</div></div></div><div class="div_line"  data-info=({id:10993,ln:244}) id=l244><div class="dl_wrapper"><a name=line244 onclick='overload_click(this)' class="a_ln">244<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   | <a href='ctags/gnu_regex/regex.h#line82' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>RE_CONTEXT_INDEP_OPS</a>   | <a href='ctags/gnu_regex/regex.h#line116' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>RE_NO_BK_BRACES</a>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;\
</div></div></div><div class="div_line"  data-info=({id:10994,ln:245}) id=l245><div class="dl_wrapper"><a name=line245 onclick='overload_click(this)' class="a_ln">245<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   | <a href='ctags/gnu_regex/regex.h#line120' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>RE_NO_BK_PARENS</a>        | <a href='ctags/gnu_regex/regex.h#line128' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>RE_NO_BK_VBAR</a>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;\
</div></div></div><div class="div_line"  data-info=({id:10995,ln:246}) id=l246><div class="dl_wrapper"><a name=line246 onclick='overload_click(this)' class="a_ln">246<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   | <a href='ctags/gnu_regex/regex.h#line86' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>RE_CONTEXT_INVALID_OPS</a> | <a href='ctags/gnu_regex/regex.h#line138' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>RE_UNMATCHED_RIGHT_PAREN_ORD</a>)
</div></div></div><div class="div_line"  data-info=({id:10996,ln:247}) id=l247><div class="dl_wrapper"><a name=line247 onclick='overload_click(this)' class="a_ln">247<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:10997,ln:248}) id=l248><div class="dl_wrapper"><a name=line248 onclick='overload_click(this)' class="a_ln">248<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">/* Differs from ..._POSIX_EXTENDED in that RE_CONTEXT_INDEP_OPS is
</div></div></div><div class="div_line"  data-info=({id:10998,ln:249}) id=l249><div class="dl_wrapper"><a name=line249 onclick='overload_click(this)' class="a_ln">249<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   removed and RE_NO_BK_REFS is added.  */
</div></div></div><div class="div_line"  data-info=({id:10999,ln:250}) id=l250><div class="dl_wrapper"><a name=line250 onclick='overload_click(this)' class="a_ln">250<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">#define <span class='ctd macdef'>RE_SYNTAX_POSIX_MINIMAL_EXTENDED</span>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;\
</div></div></div><div class="div_line"  data-info=({id:11000,ln:251}) id=l251><div class="dl_wrapper"><a name=line251 onclick='overload_click(this)' class="a_ln">251<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">  (<a href='ctags/gnu_regex/regex.h#line229' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>_RE_SYNTAX_POSIX_COMMON</a>  | <a href='ctags/gnu_regex/regex.h#line74' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>RE_CONTEXT_INDEP_ANCHORS</a>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;\
</div></div></div><div class="div_line"  data-info=({id:11001,ln:252}) id=l252><div class="dl_wrapper"><a name=line252 onclick='overload_click(this)' class="a_ln">252<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   | <a href='ctags/gnu_regex/regex.h#line86' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>RE_CONTEXT_INVALID_OPS</a> | <a href='ctags/gnu_regex/regex.h#line116' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>RE_NO_BK_BRACES</a>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;\
</div></div></div><div class="div_line"  data-info=({id:11002,ln:253}) id=l253><div class="dl_wrapper"><a name=line253 onclick='overload_click(this)' class="a_ln">253<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   | <a href='ctags/gnu_regex/regex.h#line120' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>RE_NO_BK_PARENS</a>        | <a href='ctags/gnu_regex/regex.h#line124' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>RE_NO_BK_REFS</a>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;\
</div></div></div><div class="div_line"  data-info=({id:11003,ln:254}) id=l254><div class="dl_wrapper"><a name=line254 onclick='overload_click(this)' class="a_ln">254<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   | <a href='ctags/gnu_regex/regex.h#line128' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>RE_NO_BK_VBAR</a>&#160;&#160;&#160;&#160;    | <a href='ctags/gnu_regex/regex.h#line138' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>RE_UNMATCHED_RIGHT_PAREN_ORD</a>)
</div></div></div><div class="div_line"  data-info=({id:11004,ln:255}) id=l255><div class="dl_wrapper"><a name=line255 onclick='overload_click(this)' class="a_ln">255<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">/* [[[end syntaxes]]] */
</div></div></div><div class="div_line"  data-info=({id:11005,ln:256}) id=l256><div class="dl_wrapper"><a name=line256 onclick='overload_click(this)' class="a_ln">256<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:11006,ln:257}) id=l257><div class="dl_wrapper"><a name=line257 onclick='overload_click(this)' class="a_ln">257<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">/* Maximum number of duplicates an interval can allow.  Some systems
</div></div></div><div class="div_line"  data-info=({id:11007,ln:258}) id=l258><div class="dl_wrapper"><a name=line258 onclick='overload_click(this)' class="a_ln">258<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   (erroneously) define this in other header files, but we want our
</div></div></div><div class="div_line"  data-info=({id:11008,ln:259}) id=l259><div class="dl_wrapper"><a name=line259 onclick='overload_click(this)' class="a_ln">259<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   value, so remove any previous define.  */
</div></div></div><div class="div_line"  data-info=({id:11009,ln:260}) id=l260><div class="dl_wrapper"><a name=line260 onclick='overload_click(this)' class="a_ln">260<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents"># ifdef <a href='ctags/gnu_regex/regex.h#line264' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>RE_DUP_MAX</a>
</div></div></div><div class="div_line"  data-info=({id:11010,ln:261}) id=l261><div class="dl_wrapper"><a name=line261 onclick='overload_click(this)' class="a_ln">261<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">#  undef <a href='ctags/gnu_regex/regex.h#line264' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>RE_DUP_MAX</a>
</div></div></div><div class="div_line"  data-info=({id:11011,ln:262}) id=l262><div class="dl_wrapper"><a name=line262 onclick='overload_click(this)' class="a_ln">262<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents"># endif
</div></div></div><div class="div_line"  data-info=({id:11012,ln:263}) id=l263><div class="dl_wrapper"><a name=line263 onclick='overload_click(this)' class="a_ln">263<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">/* If sizeof(int) == 2, then ((1 &lt;&lt; 15) - 1) overflows.  */
</div></div></div><div class="div_line"  data-info=({id:11013,ln:264}) id=l264><div class="dl_wrapper"><a name=line264 onclick='overload_click(this)' class="a_ln">264<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents"># define <span class='ctd macdef'>RE_DUP_MAX</span> (0x7fff)
</div></div></div><div class="div_line"  data-info=({id:11014,ln:265}) id=l265><div class="dl_wrapper"><a name=line265 onclick='overload_click(this)' class="a_ln">265<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">#endif
</div></div></div><div class="div_line"  data-info=({id:11015,ln:266}) id=l266><div class="dl_wrapper"><a name=line266 onclick='overload_click(this)' class="a_ln">266<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:11016,ln:267}) id=l267><div class="dl_wrapper"><a name=line267 onclick='overload_click(this)' class="a_ln">267<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:11017,ln:268}) id=l268><div class="dl_wrapper"><a name=line268 onclick='overload_click(this)' class="a_ln">268<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">/* POSIX `cflags' bits (i.e., information for `regcomp').  */
</div></div></div><div class="div_line"  data-info=({id:11018,ln:269}) id=l269><div class="dl_wrapper"><a name=line269 onclick='overload_click(this)' class="a_ln">269<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:11019,ln:270}) id=l270><div class="dl_wrapper"><a name=line270 onclick='overload_click(this)' class="a_ln">270<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">/* If this bit is set, then use extended regular expression syntax.
</div></div></div><div class="div_line"  data-info=({id:11020,ln:271}) id=l271><div class="dl_wrapper"><a name=line271 onclick='overload_click(this)' class="a_ln">271<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   If not set, then use basic regular expression syntax.  */
</div></div></div><div class="div_line"  data-info=({id:11021,ln:272}) id=l272><div class="dl_wrapper"><a name=line272 onclick='overload_click(this)' class="a_ln">272<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">#define <span class='ctd macdef'>REG_EXTENDED</span> 1
</div></div></div><div class="div_line"  data-info=({id:11022,ln:273}) id=l273><div class="dl_wrapper"><a name=line273 onclick='overload_click(this)' class="a_ln">273<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:11023,ln:274}) id=l274><div class="dl_wrapper"><a name=line274 onclick='overload_click(this)' class="a_ln">274<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">/* If this bit is set, then ignore case when matching.
</div></div></div><div class="div_line"  data-info=({id:11024,ln:275}) id=l275><div class="dl_wrapper"><a name=line275 onclick='overload_click(this)' class="a_ln">275<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   If not set, then case is significant.  */
</div></div></div><div class="div_line"  data-info=({id:11025,ln:276}) id=l276><div class="dl_wrapper"><a name=line276 onclick='overload_click(this)' class="a_ln">276<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">#define <span class='ctd macdef'>REG_ICASE</span> (<a href='ctags/gnu_regex/regex.h#line272' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>REG_EXTENDED</a> &lt;&lt; 1)
</div></div></div><div class="div_line"  data-info=({id:11026,ln:277}) id=l277><div class="dl_wrapper"><a name=line277 onclick='overload_click(this)' class="a_ln">277<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:11027,ln:278}) id=l278><div class="dl_wrapper"><a name=line278 onclick='overload_click(this)' class="a_ln">278<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">/* If this bit is set, then anchors do not match at newline
</div></div></div><div class="div_line"  data-info=({id:11028,ln:279}) id=l279><div class="dl_wrapper"><a name=line279 onclick='overload_click(this)' class="a_ln">279<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">     characters in the string.
</div></div></div><div class="div_line"  data-info=({id:11029,ln:280}) id=l280><div class="dl_wrapper"><a name=line280 onclick='overload_click(this)' class="a_ln">280<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   If not set, then anchors do match at newlines.  */
</div></div></div><div class="div_line"  data-info=({id:11030,ln:281}) id=l281><div class="dl_wrapper"><a name=line281 onclick='overload_click(this)' class="a_ln">281<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">#define <span class='ctd macdef'>REG_NEWLINE</span> (<a href='ctags/gnu_regex/regex.h#line276' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>REG_ICASE</a> &lt;&lt; 1)
</div></div></div><div class="div_line"  data-info=({id:11031,ln:282}) id=l282><div class="dl_wrapper"><a name=line282 onclick='overload_click(this)' class="a_ln">282<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:11032,ln:283}) id=l283><div class="dl_wrapper"><a name=line283 onclick='overload_click(this)' class="a_ln">283<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">/* If this bit is set, then report only success or fail in regexec.
</div></div></div><div class="div_line"  data-info=({id:11033,ln:284}) id=l284><div class="dl_wrapper"><a name=line284 onclick='overload_click(this)' class="a_ln">284<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   If not set, then returns differ between not matching and errors.  */
</div></div></div><div class="div_line"  data-info=({id:11034,ln:285}) id=l285><div class="dl_wrapper"><a name=line285 onclick='overload_click(this)' class="a_ln">285<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">#define <span class='ctd macdef'>REG_NOSUB</span> (<a href='ctags/gnu_regex/regex.h#line281' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>REG_NEWLINE</a> &lt;&lt; 1)
</div></div></div><div class="div_line"  data-info=({id:11035,ln:286}) id=l286><div class="dl_wrapper"><a name=line286 onclick='overload_click(this)' class="a_ln">286<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:11036,ln:287}) id=l287><div class="dl_wrapper"><a name=line287 onclick='overload_click(this)' class="a_ln">287<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:11037,ln:288}) id=l288><div class="dl_wrapper"><a name=line288 onclick='overload_click(this)' class="a_ln">288<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">/* POSIX `eflags' bits (i.e., information for regexec).  */
</div></div></div><div class="div_line"  data-info=({id:11038,ln:289}) id=l289><div class="dl_wrapper"><a name=line289 onclick='overload_click(this)' class="a_ln">289<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:11039,ln:290}) id=l290><div class="dl_wrapper"><a name=line290 onclick='overload_click(this)' class="a_ln">290<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">/* If this bit is set, then the beginning-of-line operator doesn't match
</div></div></div><div class="div_line"  data-info=({id:11040,ln:291}) id=l291><div class="dl_wrapper"><a name=line291 onclick='overload_click(this)' class="a_ln">291<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">     the beginning of the string (presumably because it's not the
</div></div></div><div class="div_line"  data-info=({id:11041,ln:292}) id=l292><div class="dl_wrapper"><a name=line292 onclick='overload_click(this)' class="a_ln">292<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">     beginning of a line).
</div></div></div><div class="div_line"  data-info=({id:11042,ln:293}) id=l293><div class="dl_wrapper"><a name=line293 onclick='overload_click(this)' class="a_ln">293<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   If not set, then the beginning-of-line operator does match the
</div></div></div><div class="div_line"  data-info=({id:11043,ln:294}) id=l294><div class="dl_wrapper"><a name=line294 onclick='overload_click(this)' class="a_ln">294<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">     beginning of the string.  */
</div></div></div><div class="div_line"  data-info=({id:11044,ln:295}) id=l295><div class="dl_wrapper"><a name=line295 onclick='overload_click(this)' class="a_ln">295<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">#define <span class='ctd macdef'>REG_NOTBOL</span> 1
</div></div></div><div class="div_line"  data-info=({id:11045,ln:296}) id=l296><div class="dl_wrapper"><a name=line296 onclick='overload_click(this)' class="a_ln">296<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:11046,ln:297}) id=l297><div class="dl_wrapper"><a name=line297 onclick='overload_click(this)' class="a_ln">297<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">/* Like REG_NOTBOL, except for the end-of-line.  */
</div></div></div><div class="div_line"  data-info=({id:11047,ln:298}) id=l298><div class="dl_wrapper"><a name=line298 onclick='overload_click(this)' class="a_ln">298<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">#define <span class='ctd macdef'>REG_NOTEOL</span> (1 &lt;&lt; 1)
</div></div></div><div class="div_line"  data-info=({id:11048,ln:299}) id=l299><div class="dl_wrapper"><a name=line299 onclick='overload_click(this)' class="a_ln">299<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:11049,ln:300}) id=l300><div class="dl_wrapper"><a name=line300 onclick='overload_click(this)' class="a_ln">300<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">/* Use PMATCH[0] to delimit the start and end of the search in the
</div></div></div><div class="div_line"  data-info=({id:11050,ln:301}) id=l301><div class="dl_wrapper"><a name=line301 onclick='overload_click(this)' class="a_ln">301<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   buffer.  */
</div></div></div><div class="div_line"  data-info=({id:11051,ln:302}) id=l302><div class="dl_wrapper"><a name=line302 onclick='overload_click(this)' class="a_ln">302<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">#define <span class='ctd macdef'>REG_STARTEND</span> (1 &lt;&lt; 2)
</div></div></div><div class="div_line"  data-info=({id:11052,ln:303}) id=l303><div class="dl_wrapper"><a name=line303 onclick='overload_click(this)' class="a_ln">303<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:11053,ln:304}) id=l304><div class="dl_wrapper"><a name=line304 onclick='overload_click(this)' class="a_ln">304<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:11054,ln:305}) id=l305><div class="dl_wrapper"><a name=line305 onclick='overload_click(this)' class="a_ln">305<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">/* If any error codes are removed, changed, or added, update the
</div></div></div><div class="div_line"  data-info=({id:11055,ln:306}) id=l306><div class="dl_wrapper"><a name=line306 onclick='overload_click(this)' class="a_ln">306<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   `re_error_msg' table in regex.c.  */
</div></div></div><div class="div_line"  data-info=({id:11056,ln:307}) id=l307><div class="dl_wrapper"><a name=line307 onclick='overload_click(this)' class="a_ln">307<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">typedef enum
</div></div></div><div class="div_line"  data-info=({id:11057,ln:308}) id=l308><div class="dl_wrapper"><a name=line308 onclick='overload_click(this)' class="a_ln">308<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">{
</div></div></div><div class="div_line"  data-info=({id:11058,ln:309}) id=l309><div class="dl_wrapper"><a name=line309 onclick='overload_click(this)' class="a_ln">309<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">#if defined _XOPEN_SOURCE || defined __USE_XOPEN2K
</div></div></div><div class="div_line"  data-info=({id:11059,ln:310}) id=l310><div class="dl_wrapper"><a name=line310 onclick='overload_click(this)' class="a_ln">310<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">  <span class='ctd gvdef'>REG_ENOSYS</span> = -1,&#160;&#160;&#160;&#160;/* This will never happen for this implementation.  */
</div></div></div><div class="div_line"  data-info=({id:11060,ln:311}) id=l311><div class="dl_wrapper"><a name=line311 onclick='overload_click(this)' class="a_ln">311<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">#endif
</div></div></div><div class="div_line"  data-info=({id:11061,ln:312}) id=l312><div class="dl_wrapper"><a name=line312 onclick='overload_click(this)' class="a_ln">312<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:11062,ln:313}) id=l313><div class="dl_wrapper"><a name=line313 onclick='overload_click(this)' class="a_ln">313<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">  <span class='ctd gvdef'>REG_NOERROR</span> = 0,&#160;&#160;&#160;&#160;/* Success.  */
</div></div></div><div class="div_line"  data-info=({id:11063,ln:314}) id=l314><div class="dl_wrapper"><a name=line314 onclick='overload_click(this)' class="a_ln">314<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">  <span class='ctd gvdef'>REG_NOMATCH</span>,&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* Didn't find a match (for regexec).  */
</div></div></div><div class="div_line"  data-info=({id:11064,ln:315}) id=l315><div class="dl_wrapper"><a name=line315 onclick='overload_click(this)' class="a_ln">315<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:11065,ln:316}) id=l316><div class="dl_wrapper"><a name=line316 onclick='overload_click(this)' class="a_ln">316<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">  /* POSIX regcomp return error codes.  (In the order listed in the
</div></div></div><div class="div_line"  data-info=({id:11066,ln:317}) id=l317><div class="dl_wrapper"><a name=line317 onclick='overload_click(this)' class="a_ln">317<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">     standard.)  */
</div></div></div><div class="div_line"  data-info=({id:11067,ln:318}) id=l318><div class="dl_wrapper"><a name=line318 onclick='overload_click(this)' class="a_ln">318<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">  <span class='ctd gvdef'>REG_BADPAT</span>,&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* Invalid pattern.  */
</div></div></div><div class="div_line"  data-info=({id:11068,ln:319}) id=l319><div class="dl_wrapper"><a name=line319 onclick='overload_click(this)' class="a_ln">319<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">  <span class='ctd gvdef'>REG_ECOLLATE</span>,&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* Inalid collating element.  */
</div></div></div><div class="div_line"  data-info=({id:11069,ln:320}) id=l320><div class="dl_wrapper"><a name=line320 onclick='overload_click(this)' class="a_ln">320<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">  <span class='ctd gvdef'>REG_ECTYPE</span>,&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* Invalid character class name.  */
</div></div></div><div class="div_line"  data-info=({id:11070,ln:321}) id=l321><div class="dl_wrapper"><a name=line321 onclick='overload_click(this)' class="a_ln">321<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">  <span class='ctd gvdef'>REG_EESCAPE</span>,&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* Trailing backslash.  */
</div></div></div><div class="div_line"  data-info=({id:11071,ln:322}) id=l322><div class="dl_wrapper"><a name=line322 onclick='overload_click(this)' class="a_ln">322<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">  <span class='ctd gvdef'>REG_ESUBREG</span>,&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* Invalid back reference.  */
</div></div></div><div class="div_line"  data-info=({id:11072,ln:323}) id=l323><div class="dl_wrapper"><a name=line323 onclick='overload_click(this)' class="a_ln">323<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">  <span class='ctd gvdef'>REG_EBRACK</span>,&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* Unmatched left bracket.  */
</div></div></div><div class="div_line"  data-info=({id:11073,ln:324}) id=l324><div class="dl_wrapper"><a name=line324 onclick='overload_click(this)' class="a_ln">324<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">  <span class='ctd gvdef'>REG_EPAREN</span>,&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* Parenthesis imbalance.  */
</div></div></div><div class="div_line"  data-info=({id:11074,ln:325}) id=l325><div class="dl_wrapper"><a name=line325 onclick='overload_click(this)' class="a_ln">325<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">  <span class='ctd gvdef'>REG_EBRACE</span>,&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* Unmatched \{.  */
</div></div></div><div class="div_line"  data-info=({id:11075,ln:326}) id=l326><div class="dl_wrapper"><a name=line326 onclick='overload_click(this)' class="a_ln">326<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">  <span class='ctd gvdef'>REG_BADBR</span>,&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* Invalid contents of \{\}.  */
</div></div></div><div class="div_line"  data-info=({id:11076,ln:327}) id=l327><div class="dl_wrapper"><a name=line327 onclick='overload_click(this)' class="a_ln">327<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">  <span class='ctd gvdef'>REG_ERANGE</span>,&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* Invalid range end.  */
</div></div></div><div class="div_line"  data-info=({id:11077,ln:328}) id=l328><div class="dl_wrapper"><a name=line328 onclick='overload_click(this)' class="a_ln">328<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">  <span class='ctd gvdef'>REG_ESPACE</span>,&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* Ran out of memory.  */
</div></div></div><div class="div_line"  data-info=({id:11078,ln:329}) id=l329><div class="dl_wrapper"><a name=line329 onclick='overload_click(this)' class="a_ln">329<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">  <span class='ctd gvdef'>REG_BADRPT</span>,&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* No preceding re for repetition op.  */
</div></div></div><div class="div_line"  data-info=({id:11079,ln:330}) id=l330><div class="dl_wrapper"><a name=line330 onclick='overload_click(this)' class="a_ln">330<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:11080,ln:331}) id=l331><div class="dl_wrapper"><a name=line331 onclick='overload_click(this)' class="a_ln">331<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">  /* Error codes we've added.  */
</div></div></div><div class="div_line"  data-info=({id:11081,ln:332}) id=l332><div class="dl_wrapper"><a name=line332 onclick='overload_click(this)' class="a_ln">332<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">  <span class='ctd gvdef'>REG_EEND</span>,&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* Premature end.  */
</div></div></div><div class="div_line"  data-info=({id:11082,ln:333}) id=l333><div class="dl_wrapper"><a name=line333 onclick='overload_click(this)' class="a_ln">333<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">  <span class='ctd gvdef'>REG_ESIZE</span>,&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* Compiled pattern bigger than 2^16 bytes.  */
</div></div></div><div class="div_line"  data-info=({id:11083,ln:334}) id=l334><div class="dl_wrapper"><a name=line334 onclick='overload_click(this)' class="a_ln">334<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">  <span class='ctd gvdef'>REG_ERPAREN</span>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* Unmatched ) or \); not returned from regcomp.  */
</div></div></div><div class="div_line"  data-info=({id:11084,ln:335}) id=l335><div class="dl_wrapper"><a name=line335 onclick='overload_click(this)' class="a_ln">335<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">} <span class='ctd typedef'>reg_errcode_t</span>;
</div></div></div><div class="div_line"  data-info=({id:11085,ln:336}) id=l336><div class="dl_wrapper"><a name=line336 onclick='overload_click(this)' class="a_ln">336<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:11086,ln:337}) id=l337><div class="dl_wrapper"><a name=line337 onclick='overload_click(this)' class="a_ln">337<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">/* This data structure represents a compiled pattern.  Before calling
</div></div></div><div class="div_line"  data-info=({id:11087,ln:338}) id=l338><div class="dl_wrapper"><a name=line338 onclick='overload_click(this)' class="a_ln">338<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   the pattern compiler, the fields `buffer', `allocated', `fastmap',
</div></div></div><div class="div_line"  data-info=({id:11088,ln:339}) id=l339><div class="dl_wrapper"><a name=line339 onclick='overload_click(this)' class="a_ln">339<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   `translate', and `no_sub' can be set.  After the pattern has been
</div></div></div><div class="div_line"  data-info=({id:11089,ln:340}) id=l340><div class="dl_wrapper"><a name=line340 onclick='overload_click(this)' class="a_ln">340<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   compiled, the `re_nsub' field is available.  All other fields are
</div></div></div><div class="div_line"  data-info=({id:11090,ln:341}) id=l341><div class="dl_wrapper"><a name=line341 onclick='overload_click(this)' class="a_ln">341<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   private to the regex routines.  */
</div></div></div><div class="div_line"  data-info=({id:11091,ln:342}) id=l342><div class="dl_wrapper"><a name=line342 onclick='overload_click(this)' class="a_ln">342<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:11092,ln:343}) id=l343><div class="dl_wrapper"><a name=line343 onclick='overload_click(this)' class="a_ln">343<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">#ifndef <a href='ctags/gnu_regex/regex.h#line346' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>RE_TRANSLATE_TYPE</a>
</div></div></div><div class="div_line"  data-info=({id:11093,ln:344}) id=l344><div class="dl_wrapper"><a name=line344 onclick='overload_click(this)' class="a_ln">344<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents"># define <span class='ctd macdef'>__RE_TRANSLATE_TYPE</span> unsigned char *
</div></div></div><div class="div_line"  data-info=({id:11094,ln:345}) id=l345><div class="dl_wrapper"><a name=line345 onclick='overload_click(this)' class="a_ln">345<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents"># ifdef __USE_GNU
</div></div></div><div class="div_line"  data-info=({id:11095,ln:346}) id=l346><div class="dl_wrapper"><a name=line346 onclick='overload_click(this)' class="a_ln">346<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">#  define <span class='ctd macdef'>RE_TRANSLATE_TYPE</span> <a href='ctags/gnu_regex/regex.h#line344' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>__RE_TRANSLATE_TYPE</a>
</div></div></div><div class="div_line"  data-info=({id:11096,ln:347}) id=l347><div class="dl_wrapper"><a name=line347 onclick='overload_click(this)' class="a_ln">347<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents"># endif
</div></div></div><div class="div_line"  data-info=({id:11097,ln:348}) id=l348><div class="dl_wrapper"><a name=line348 onclick='overload_click(this)' class="a_ln">348<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">#endif
</div></div></div><div class="div_line"  data-info=({id:11098,ln:349}) id=l349><div class="dl_wrapper"><a name=line349 onclick='overload_click(this)' class="a_ln">349<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:11099,ln:350}) id=l350><div class="dl_wrapper"><a name=line350 onclick='overload_click(this)' class="a_ln">350<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">#ifdef __USE_GNU
</div></div></div><div class="div_line"  data-info=({id:11100,ln:351}) id=l351><div class="dl_wrapper"><a name=line351 onclick='overload_click(this)' class="a_ln">351<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents"># define <span class='ctd macdef'>__REPB_PREFIX</span>(name) name
</div></div></div><div class="div_line"  data-info=({id:11101,ln:352}) id=l352><div class="dl_wrapper"><a name=line352 onclick='overload_click(this)' class="a_ln">352<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">#else
</div></div></div><div class="div_line"  data-info=({id:11102,ln:353}) id=l353><div class="dl_wrapper"><a name=line353 onclick='overload_click(this)' class="a_ln">353<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents"># define <span class='ctd macdef'>__REPB_PREFIX</span>(name) __##name
</div></div></div><div class="div_line"  data-info=({id:11103,ln:354}) id=l354><div class="dl_wrapper"><a name=line354 onclick='overload_click(this)' class="a_ln">354<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">#endif
</div></div></div><div class="div_line"  data-info=({id:11104,ln:355}) id=l355><div class="dl_wrapper"><a name=line355 onclick='overload_click(this)' class="a_ln">355<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:11105,ln:356}) id=l356><div class="dl_wrapper"><a name=line356 onclick='overload_click(this)' class="a_ln">356<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">struct <span class='ctd strdef'>re_pattern_buffer</span>
</div></div></div><div class="div_line"  data-info=({id:11106,ln:357}) id=l357><div class="dl_wrapper"><a name=line357 onclick='overload_click(this)' class="a_ln">357<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">{
</div></div></div><div class="div_line"  data-info=({id:11107,ln:358}) id=l358><div class="dl_wrapper"><a name=line358 onclick='overload_click(this)' class="a_ln">358<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">  /* Space that holds the compiled pattern.  It is declared as
</div></div></div><div class="div_line"  data-info=({id:11108,ln:359}) id=l359><div class="dl_wrapper"><a name=line359 onclick='overload_click(this)' class="a_ln">359<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">     `unsigned char *' because its elements are sometimes used as
</div></div></div><div class="div_line"  data-info=({id:11109,ln:360}) id=l360><div class="dl_wrapper"><a name=line360 onclick='overload_click(this)' class="a_ln">360<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">     array indexes.  */
</div></div></div><div class="div_line"  data-info=({id:11110,ln:361}) id=l361><div class="dl_wrapper"><a name=line361 onclick='overload_click(this)' class="a_ln">361<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">  unsigned char *<a href='ctags/gnu_regex/regex.h#line351' class='a_code_tag multi_def' data-info='({type:"glref",tagreg:2})'>__REPB_PREFIX</a>(buffer);
</div></div></div><div class="div_line"  data-info=({id:11111,ln:362}) id=l362><div class="dl_wrapper"><a name=line362 onclick='overload_click(this)' class="a_ln">362<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:11112,ln:363}) id=l363><div class="dl_wrapper"><a name=line363 onclick='overload_click(this)' class="a_ln">363<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">  /* Number of bytes to which `buffer' points.  */
</div></div></div><div class="div_line"  data-info=({id:11113,ln:364}) id=l364><div class="dl_wrapper"><a name=line364 onclick='overload_click(this)' class="a_ln">364<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">  unsigned long int <a href='ctags/gnu_regex/regex.h#line351' class='a_code_tag multi_def' data-info='({type:"glref",tagreg:2})'>__REPB_PREFIX</a>(allocated);
</div></div></div><div class="div_line"  data-info=({id:11114,ln:365}) id=l365><div class="dl_wrapper"><a name=line365 onclick='overload_click(this)' class="a_ln">365<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:11115,ln:366}) id=l366><div class="dl_wrapper"><a name=line366 onclick='overload_click(this)' class="a_ln">366<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">  /* Number of bytes actually used in `buffer'.  */
</div></div></div><div class="div_line"  data-info=({id:11116,ln:367}) id=l367><div class="dl_wrapper"><a name=line367 onclick='overload_click(this)' class="a_ln">367<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">  unsigned long int <a href='ctags/gnu_regex/regex.h#line351' class='a_code_tag multi_def' data-info='({type:"glref",tagreg:2})'>__REPB_PREFIX</a>(used);
</div></div></div><div class="div_line"  data-info=({id:11117,ln:368}) id=l368><div class="dl_wrapper"><a name=line368 onclick='overload_click(this)' class="a_ln">368<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:11118,ln:369}) id=l369><div class="dl_wrapper"><a name=line369 onclick='overload_click(this)' class="a_ln">369<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">  /* Syntax setting with which the pattern was compiled.  */
</div></div></div><div class="div_line"  data-info=({id:11119,ln:370}) id=l370><div class="dl_wrapper"><a name=line370 onclick='overload_click(this)' class="a_ln">370<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">  reg_syntax_t <a href='ctags/gnu_regex/regex.h#line351' class='a_code_tag multi_def' data-info='({type:"glref",tagreg:2})'>__REPB_PREFIX</a>(syntax);
</div></div></div><div class="div_line"  data-info=({id:11120,ln:371}) id=l371><div class="dl_wrapper"><a name=line371 onclick='overload_click(this)' class="a_ln">371<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:11121,ln:372}) id=l372><div class="dl_wrapper"><a name=line372 onclick='overload_click(this)' class="a_ln">372<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">  /* Pointer to a fastmap, if any, otherwise zero.  re_search uses the
</div></div></div><div class="div_line"  data-info=({id:11122,ln:373}) id=l373><div class="dl_wrapper"><a name=line373 onclick='overload_click(this)' class="a_ln">373<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">     fastmap, if there is one, to skip over impossible starting points
</div></div></div><div class="div_line"  data-info=({id:11123,ln:374}) id=l374><div class="dl_wrapper"><a name=line374 onclick='overload_click(this)' class="a_ln">374<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">     for matches.  */
</div></div></div><div class="div_line"  data-info=({id:11124,ln:375}) id=l375><div class="dl_wrapper"><a name=line375 onclick='overload_click(this)' class="a_ln">375<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">  char *<a href='ctags/gnu_regex/regex.h#line351' class='a_code_tag multi_def' data-info='({type:"glref",tagreg:2})'>__REPB_PREFIX</a>(fastmap);
</div></div></div><div class="div_line"  data-info=({id:11125,ln:376}) id=l376><div class="dl_wrapper"><a name=line376 onclick='overload_click(this)' class="a_ln">376<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:11126,ln:377}) id=l377><div class="dl_wrapper"><a name=line377 onclick='overload_click(this)' class="a_ln">377<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">  /* Either a translate table to apply to all characters before
</div></div></div><div class="div_line"  data-info=({id:11127,ln:378}) id=l378><div class="dl_wrapper"><a name=line378 onclick='overload_click(this)' class="a_ln">378<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">     comparing them, or zero for no translation.  The translation is
</div></div></div><div class="div_line"  data-info=({id:11128,ln:379}) id=l379><div class="dl_wrapper"><a name=line379 onclick='overload_click(this)' class="a_ln">379<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">     applied to a pattern when it is compiled and to a string when it
</div></div></div><div class="div_line"  data-info=({id:11129,ln:380}) id=l380><div class="dl_wrapper"><a name=line380 onclick='overload_click(this)' class="a_ln">380<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">     is matched.  */
</div></div></div><div class="div_line"  data-info=({id:11130,ln:381}) id=l381><div class="dl_wrapper"><a name=line381 onclick='overload_click(this)' class="a_ln">381<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">  <a href='ctags/gnu_regex/regex.h#line344' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>__RE_TRANSLATE_TYPE</a> <a href='ctags/gnu_regex/regex.h#line351' class='a_code_tag multi_def' data-info='({type:"glref",tagreg:2})'>__REPB_PREFIX</a>(translate);
</div></div></div><div class="div_line"  data-info=({id:11131,ln:382}) id=l382><div class="dl_wrapper"><a name=line382 onclick='overload_click(this)' class="a_ln">382<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:11132,ln:383}) id=l383><div class="dl_wrapper"><a name=line383 onclick='overload_click(this)' class="a_ln">383<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">  /* Number of subexpressions found by the compiler.  */
</div></div></div><div class="div_line"  data-info=({id:11133,ln:384}) id=l384><div class="dl_wrapper"><a name=line384 onclick='overload_click(this)' class="a_ln">384<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">  size_t <span class='ctd gvdef'>re_nsub</span>;
</div></div></div><div class="div_line"  data-info=({id:11134,ln:385}) id=l385><div class="dl_wrapper"><a name=line385 onclick='overload_click(this)' class="a_ln">385<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:11135,ln:386}) id=l386><div class="dl_wrapper"><a name=line386 onclick='overload_click(this)' class="a_ln">386<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">  /* Zero if this pattern cannot match the empty string, one else.
</div></div></div><div class="div_line"  data-info=({id:11136,ln:387}) id=l387><div class="dl_wrapper"><a name=line387 onclick='overload_click(this)' class="a_ln">387<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">     Well, in truth it's used only in `re_search_2', to see whether or
</div></div></div><div class="div_line"  data-info=({id:11137,ln:388}) id=l388><div class="dl_wrapper"><a name=line388 onclick='overload_click(this)' class="a_ln">388<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">     not we should use the fastmap, so we don't set this absolutely
</div></div></div><div class="div_line"  data-info=({id:11138,ln:389}) id=l389><div class="dl_wrapper"><a name=line389 onclick='overload_click(this)' class="a_ln">389<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">     perfectly; see `re_compile_fastmap' (the `duplicate' case).  */
</div></div></div><div class="div_line"  data-info=({id:11139,ln:390}) id=l390><div class="dl_wrapper"><a name=line390 onclick='overload_click(this)' class="a_ln">390<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">  unsigned <a href='ctags/gnu_regex/regex.h#line351' class='a_code_tag multi_def' data-info='({type:"glref",tagreg:2})'>__REPB_PREFIX</a>(can_be_null) : 1;
</div></div></div><div class="div_line"  data-info=({id:11140,ln:391}) id=l391><div class="dl_wrapper"><a name=line391 onclick='overload_click(this)' class="a_ln">391<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:11141,ln:392}) id=l392><div class="dl_wrapper"><a name=line392 onclick='overload_click(this)' class="a_ln">392<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">  /* If REGS_UNALLOCATED, allocate space in the `regs' structure
</div></div></div><div class="div_line"  data-info=({id:11142,ln:393}) id=l393><div class="dl_wrapper"><a name=line393 onclick='overload_click(this)' class="a_ln">393<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">     for `max (RE_NREGS, re_nsub + 1)' groups.
</div></div></div><div class="div_line"  data-info=({id:11143,ln:394}) id=l394><div class="dl_wrapper"><a name=line394 onclick='overload_click(this)' class="a_ln">394<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">     If REGS_REALLOCATE, reallocate space if necessary.
</div></div></div><div class="div_line"  data-info=({id:11144,ln:395}) id=l395><div class="dl_wrapper"><a name=line395 onclick='overload_click(this)' class="a_ln">395<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">     If REGS_FIXED, use what's there.  */
</div></div></div><div class="div_line"  data-info=({id:11145,ln:396}) id=l396><div class="dl_wrapper"><a name=line396 onclick='overload_click(this)' class="a_ln">396<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">#ifdef __USE_GNU
</div></div></div><div class="div_line"  data-info=({id:11146,ln:397}) id=l397><div class="dl_wrapper"><a name=line397 onclick='overload_click(this)' class="a_ln">397<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents"># define <span class='ctd macdef'>REGS_UNALLOCATED</span> 0
</div></div></div><div class="div_line"  data-info=({id:11147,ln:398}) id=l398><div class="dl_wrapper"><a name=line398 onclick='overload_click(this)' class="a_ln">398<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents"># define <span class='ctd macdef'>REGS_REALLOCATE</span> 1
</div></div></div><div class="div_line"  data-info=({id:11148,ln:399}) id=l399><div class="dl_wrapper"><a name=line399 onclick='overload_click(this)' class="a_ln">399<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents"># define <span class='ctd macdef'>REGS_FIXED</span> 2
</div></div></div><div class="div_line"  data-info=({id:11149,ln:400}) id=l400><div class="dl_wrapper"><a name=line400 onclick='overload_click(this)' class="a_ln">400<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">#endif
</div></div></div><div class="div_line"  data-info=({id:11150,ln:401}) id=l401><div class="dl_wrapper"><a name=line401 onclick='overload_click(this)' class="a_ln">401<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">  unsigned <a href='ctags/gnu_regex/regex.h#line351' class='a_code_tag multi_def' data-info='({type:"glref",tagreg:2})'>__REPB_PREFIX</a>(regs_allocated) : 2;
</div></div></div><div class="div_line"  data-info=({id:11151,ln:402}) id=l402><div class="dl_wrapper"><a name=line402 onclick='overload_click(this)' class="a_ln">402<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:11152,ln:403}) id=l403><div class="dl_wrapper"><a name=line403 onclick='overload_click(this)' class="a_ln">403<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">  /* Set to zero when `regex_compile' compiles a pattern; set to one
</div></div></div><div class="div_line"  data-info=({id:11153,ln:404}) id=l404><div class="dl_wrapper"><a name=line404 onclick='overload_click(this)' class="a_ln">404<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">     by `re_compile_fastmap' if it updates the fastmap.  */
</div></div></div><div class="div_line"  data-info=({id:11154,ln:405}) id=l405><div class="dl_wrapper"><a name=line405 onclick='overload_click(this)' class="a_ln">405<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">  unsigned <a href='ctags/gnu_regex/regex.h#line351' class='a_code_tag multi_def' data-info='({type:"glref",tagreg:2})'>__REPB_PREFIX</a>(fastmap_accurate) : 1;
</div></div></div><div class="div_line"  data-info=({id:11155,ln:406}) id=l406><div class="dl_wrapper"><a name=line406 onclick='overload_click(this)' class="a_ln">406<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:11156,ln:407}) id=l407><div class="dl_wrapper"><a name=line407 onclick='overload_click(this)' class="a_ln">407<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">  /* If set, `re_match_2' does not return information about
</div></div></div><div class="div_line"  data-info=({id:11157,ln:408}) id=l408><div class="dl_wrapper"><a name=line408 onclick='overload_click(this)' class="a_ln">408<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">     subexpressions.  */
</div></div></div><div class="div_line"  data-info=({id:11158,ln:409}) id=l409><div class="dl_wrapper"><a name=line409 onclick='overload_click(this)' class="a_ln">409<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">  unsigned <a href='ctags/gnu_regex/regex.h#line351' class='a_code_tag multi_def' data-info='({type:"glref",tagreg:2})'>__REPB_PREFIX</a>(no_sub) : 1;
</div></div></div><div class="div_line"  data-info=({id:11159,ln:410}) id=l410><div class="dl_wrapper"><a name=line410 onclick='overload_click(this)' class="a_ln">410<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:11160,ln:411}) id=l411><div class="dl_wrapper"><a name=line411 onclick='overload_click(this)' class="a_ln">411<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">  /* If set, a beginning-of-line anchor doesn't match at the beginning
</div></div></div><div class="div_line"  data-info=({id:11161,ln:412}) id=l412><div class="dl_wrapper"><a name=line412 onclick='overload_click(this)' class="a_ln">412<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">     of the string.  */
</div></div></div><div class="div_line"  data-info=({id:11162,ln:413}) id=l413><div class="dl_wrapper"><a name=line413 onclick='overload_click(this)' class="a_ln">413<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">  unsigned <a href='ctags/gnu_regex/regex.h#line351' class='a_code_tag multi_def' data-info='({type:"glref",tagreg:2})'>__REPB_PREFIX</a>(not_bol) : 1;
</div></div></div><div class="div_line"  data-info=({id:11163,ln:414}) id=l414><div class="dl_wrapper"><a name=line414 onclick='overload_click(this)' class="a_ln">414<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:11164,ln:415}) id=l415><div class="dl_wrapper"><a name=line415 onclick='overload_click(this)' class="a_ln">415<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">  /* Similarly for an end-of-line anchor.  */
</div></div></div><div class="div_line"  data-info=({id:11165,ln:416}) id=l416><div class="dl_wrapper"><a name=line416 onclick='overload_click(this)' class="a_ln">416<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">  unsigned <a href='ctags/gnu_regex/regex.h#line351' class='a_code_tag multi_def' data-info='({type:"glref",tagreg:2})'>__REPB_PREFIX</a>(not_eol) : 1;
</div></div></div><div class="div_line"  data-info=({id:11166,ln:417}) id=l417><div class="dl_wrapper"><a name=line417 onclick='overload_click(this)' class="a_ln">417<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:11167,ln:418}) id=l418><div class="dl_wrapper"><a name=line418 onclick='overload_click(this)' class="a_ln">418<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">  /* If true, an anchor at a newline matches.  */
</div></div></div><div class="div_line"  data-info=({id:11168,ln:419}) id=l419><div class="dl_wrapper"><a name=line419 onclick='overload_click(this)' class="a_ln">419<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">  unsigned <a href='ctags/gnu_regex/regex.h#line351' class='a_code_tag multi_def' data-info='({type:"glref",tagreg:2})'>__REPB_PREFIX</a>(newline_anchor) : 1;
</div></div></div><div class="div_line"  data-info=({id:11169,ln:420}) id=l420><div class="dl_wrapper"><a name=line420 onclick='overload_click(this)' class="a_ln">420<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">};
</div></div></div><div class="div_line"  data-info=({id:11170,ln:421}) id=l421><div class="dl_wrapper"><a name=line421 onclick='overload_click(this)' class="a_ln">421<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:11171,ln:422}) id=l422><div class="dl_wrapper"><a name=line422 onclick='overload_click(this)' class="a_ln">422<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">typedef struct <a href='ctags/gnu_regex/regex.h#line356' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>re_pattern_buffer</a> <span class='ctd typedef'>regex_t</span>;
</div></div></div><div class="div_line"  data-info=({id:11172,ln:423}) id=l423><div class="dl_wrapper"><a name=line423 onclick='overload_click(this)' class="a_ln">423<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:11173,ln:424}) id=l424><div class="dl_wrapper"><a name=line424 onclick='overload_click(this)' class="a_ln">424<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">/* Type for byte offsets within the string.  POSIX mandates this.  */
</div></div></div><div class="div_line"  data-info=({id:11174,ln:425}) id=l425><div class="dl_wrapper"><a name=line425 onclick='overload_click(this)' class="a_ln">425<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">typedef int <span class='ctd typedef'>regoff_t</span>;
</div></div></div><div class="div_line"  data-info=({id:11175,ln:426}) id=l426><div class="dl_wrapper"><a name=line426 onclick='overload_click(this)' class="a_ln">426<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:11176,ln:427}) id=l427><div class="dl_wrapper"><a name=line427 onclick='overload_click(this)' class="a_ln">427<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:11177,ln:428}) id=l428><div class="dl_wrapper"><a name=line428 onclick='overload_click(this)' class="a_ln">428<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">#ifdef __USE_GNU
</div></div></div><div class="div_line"  data-info=({id:11178,ln:429}) id=l429><div class="dl_wrapper"><a name=line429 onclick='overload_click(this)' class="a_ln">429<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">/* This is the structure we store register match data in.  See
</div></div></div><div class="div_line"  data-info=({id:11179,ln:430}) id=l430><div class="dl_wrapper"><a name=line430 onclick='overload_click(this)' class="a_ln">430<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   regex.texinfo for a full description of what registers match.  */
</div></div></div><div class="div_line"  data-info=({id:11180,ln:431}) id=l431><div class="dl_wrapper"><a name=line431 onclick='overload_click(this)' class="a_ln">431<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">struct <span class='ctd strdef'>re_registers</span>
</div></div></div><div class="div_line"  data-info=({id:11181,ln:432}) id=l432><div class="dl_wrapper"><a name=line432 onclick='overload_click(this)' class="a_ln">432<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">{
</div></div></div><div class="div_line"  data-info=({id:11182,ln:433}) id=l433><div class="dl_wrapper"><a name=line433 onclick='overload_click(this)' class="a_ln">433<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">  unsigned <span class='ctd gvdef'>num_regs</span>;
</div></div></div><div class="div_line"  data-info=({id:11183,ln:434}) id=l434><div class="dl_wrapper"><a name=line434 onclick='overload_click(this)' class="a_ln">434<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">  regoff_t *<span class='ctd gvdef'>start</span>;
</div></div></div><div class="div_line"  data-info=({id:11184,ln:435}) id=l435><div class="dl_wrapper"><a name=line435 onclick='overload_click(this)' class="a_ln">435<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">  regoff_t *<span class='ctd gvdef'>end</span>;
</div></div></div><div class="div_line"  data-info=({id:11185,ln:436}) id=l436><div class="dl_wrapper"><a name=line436 onclick='overload_click(this)' class="a_ln">436<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">};
</div></div></div><div class="div_line"  data-info=({id:11186,ln:437}) id=l437><div class="dl_wrapper"><a name=line437 onclick='overload_click(this)' class="a_ln">437<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:11187,ln:438}) id=l438><div class="dl_wrapper"><a name=line438 onclick='overload_click(this)' class="a_ln">438<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:11188,ln:439}) id=l439><div class="dl_wrapper"><a name=line439 onclick='overload_click(this)' class="a_ln">439<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">/* If `regs_allocated' is REGS_UNALLOCATED in the pattern buffer,
</div></div></div><div class="div_line"  data-info=({id:11189,ln:440}) id=l440><div class="dl_wrapper"><a name=line440 onclick='overload_click(this)' class="a_ln">440<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   `re_match_2' returns information about at least this many registers
</div></div></div><div class="div_line"  data-info=({id:11190,ln:441}) id=l441><div class="dl_wrapper"><a name=line441 onclick='overload_click(this)' class="a_ln">441<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   the first time a `regs' structure is passed.  */
</div></div></div><div class="div_line"  data-info=({id:11191,ln:442}) id=l442><div class="dl_wrapper"><a name=line442 onclick='overload_click(this)' class="a_ln">442<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents"># ifndef <a href='ctags/gnu_regex/regex.h#line443' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>RE_NREGS</a>
</div></div></div><div class="div_line"  data-info=({id:11192,ln:443}) id=l443><div class="dl_wrapper"><a name=line443 onclick='overload_click(this)' class="a_ln">443<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">#  define <span class='ctd macdef'>RE_NREGS</span> 30
</div></div></div><div class="div_line"  data-info=({id:11193,ln:444}) id=l444><div class="dl_wrapper"><a name=line444 onclick='overload_click(this)' class="a_ln">444<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents"># endif
</div></div></div><div class="div_line"  data-info=({id:11194,ln:445}) id=l445><div class="dl_wrapper"><a name=line445 onclick='overload_click(this)' class="a_ln">445<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">#endif
</div></div></div><div class="div_line"  data-info=({id:11195,ln:446}) id=l446><div class="dl_wrapper"><a name=line446 onclick='overload_click(this)' class="a_ln">446<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:11196,ln:447}) id=l447><div class="dl_wrapper"><a name=line447 onclick='overload_click(this)' class="a_ln">447<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:11197,ln:448}) id=l448><div class="dl_wrapper"><a name=line448 onclick='overload_click(this)' class="a_ln">448<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">/* POSIX specification for registers.  Aside from the different names than
</div></div></div><div class="div_line"  data-info=({id:11198,ln:449}) id=l449><div class="dl_wrapper"><a name=line449 onclick='overload_click(this)' class="a_ln">449<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   `re_registers', POSIX uses an array of structures, instead of a
</div></div></div><div class="div_line"  data-info=({id:11199,ln:450}) id=l450><div class="dl_wrapper"><a name=line450 onclick='overload_click(this)' class="a_ln">450<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   structure of arrays.  */
</div></div></div><div class="div_line"  data-info=({id:11200,ln:451}) id=l451><div class="dl_wrapper"><a name=line451 onclick='overload_click(this)' class="a_ln">451<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">typedef struct
</div></div></div><div class="div_line"  data-info=({id:11201,ln:452}) id=l452><div class="dl_wrapper"><a name=line452 onclick='overload_click(this)' class="a_ln">452<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">{
</div></div></div><div class="div_line"  data-info=({id:11202,ln:453}) id=l453><div class="dl_wrapper"><a name=line453 onclick='overload_click(this)' class="a_ln">453<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">  regoff_t <span class='ctd gvdef'>rm_so</span>;  /* Byte offset from string's start to substring's start.  */
</div></div></div><div class="div_line"  data-info=({id:11203,ln:454}) id=l454><div class="dl_wrapper"><a name=line454 onclick='overload_click(this)' class="a_ln">454<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">  regoff_t <span class='ctd gvdef'>rm_eo</span>;  /* Byte offset from string's start to substring's end.  */
</div></div></div><div class="div_line"  data-info=({id:11204,ln:455}) id=l455><div class="dl_wrapper"><a name=line455 onclick='overload_click(this)' class="a_ln">455<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">} <span class='ctd typedef'>regmatch_t</span>;
</div></div></div><div class="div_line"  data-info=({id:11205,ln:456}) id=l456><div class="dl_wrapper"><a name=line456 onclick='overload_click(this)' class="a_ln">456<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:11206,ln:457}) id=l457><div class="dl_wrapper"><a name=line457 onclick='overload_click(this)' class="a_ln">457<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">/* Declarations for routines.  */
</div></div></div><div class="div_line"  data-info=({id:11207,ln:458}) id=l458><div class="dl_wrapper"><a name=line458 onclick='overload_click(this)' class="a_ln">458<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:11208,ln:459}) id=l459><div class="dl_wrapper"><a name=line459 onclick='overload_click(this)' class="a_ln">459<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">#ifdef __USE_GNU
</div></div></div><div class="div_line"  data-info=({id:11209,ln:460}) id=l460><div class="dl_wrapper"><a name=line460 onclick='overload_click(this)' class="a_ln">460<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">/* Sets the current default syntax to SYNTAX, and return the old syntax.
</div></div></div><div class="div_line"  data-info=({id:11210,ln:461}) id=l461><div class="dl_wrapper"><a name=line461 onclick='overload_click(this)' class="a_ln">461<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   You can also simply assign to the `re_syntax_options' variable.  */
</div></div></div><div class="div_line"  data-info=({id:11211,ln:462}) id=l462><div class="dl_wrapper"><a name=line462 onclick='overload_click(this)' class="a_ln">462<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">extern reg_syntax_t <a href='ctags/gnu_regex/regex.c#line47' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>re_set_syntax</a> (reg_syntax_t __syntax);
</div></div></div><div class="div_line"  data-info=({id:11212,ln:463}) id=l463><div class="dl_wrapper"><a name=line463 onclick='overload_click(this)' class="a_ln">463<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:11213,ln:464}) id=l464><div class="dl_wrapper"><a name=line464 onclick='overload_click(this)' class="a_ln">464<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">/* Compile the regular expression PATTERN, with length LENGTH
</div></div></div><div class="div_line"  data-info=({id:11214,ln:465}) id=l465><div class="dl_wrapper"><a name=line465 onclick='overload_click(this)' class="a_ln">465<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   and syntax given by the global `re_syntax_options', into the buffer
</div></div></div><div class="div_line"  data-info=({id:11215,ln:466}) id=l466><div class="dl_wrapper"><a name=line466 onclick='overload_click(this)' class="a_ln">466<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   BUFFER.  Return NULL if successful, and an error string if not.  */
</div></div></div><div class="div_line"  data-info=({id:11216,ln:467}) id=l467><div class="dl_wrapper"><a name=line467 onclick='overload_click(this)' class="a_ln">467<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">extern const char *<a href='ctags/gnu_regex/regex.c#line45' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>re_compile_pattern</a> (const char *__pattern, size_t __length,
</div></div></div><div class="div_line"  data-info=({id:11217,ln:468}) id=l468><div class="dl_wrapper"><a name=line468 onclick='overload_click(this)' class="a_ln">468<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;       struct <a href='ctags/gnu_regex/regex.h#line356' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>re_pattern_buffer</a> *__buffer);
</div></div></div><div class="div_line"  data-info=({id:11218,ln:469}) id=l469><div class="dl_wrapper"><a name=line469 onclick='overload_click(this)' class="a_ln">469<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:11219,ln:470}) id=l470><div class="dl_wrapper"><a name=line470 onclick='overload_click(this)' class="a_ln">470<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:11220,ln:471}) id=l471><div class="dl_wrapper"><a name=line471 onclick='overload_click(this)' class="a_ln">471<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">/* Compile a fastmap for the compiled pattern in BUFFER; used to
</div></div></div><div class="div_line"  data-info=({id:11221,ln:472}) id=l472><div class="dl_wrapper"><a name=line472 onclick='overload_click(this)' class="a_ln">472<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   accelerate searches.  Return 0 if successful and -2 if was an
</div></div></div><div class="div_line"  data-info=({id:11222,ln:473}) id=l473><div class="dl_wrapper"><a name=line473 onclick='overload_click(this)' class="a_ln">473<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   internal error.  */
</div></div></div><div class="div_line"  data-info=({id:11223,ln:474}) id=l474><div class="dl_wrapper"><a name=line474 onclick='overload_click(this)' class="a_ln">474<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">extern int <a href='ctags/gnu_regex/regex.c#line50' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>re_compile_fastmap</a> (struct <a href='ctags/gnu_regex/regex.h#line356' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>re_pattern_buffer</a> *__buffer);
</div></div></div><div class="div_line"  data-info=({id:11224,ln:475}) id=l475><div class="dl_wrapper"><a name=line475 onclick='overload_click(this)' class="a_ln">475<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:11225,ln:476}) id=l476><div class="dl_wrapper"><a name=line476 onclick='overload_click(this)' class="a_ln">476<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:11226,ln:477}) id=l477><div class="dl_wrapper"><a name=line477 onclick='overload_click(this)' class="a_ln">477<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">/* Search in the string STRING (with length LENGTH) for the pattern
</div></div></div><div class="div_line"  data-info=({id:11227,ln:478}) id=l478><div class="dl_wrapper"><a name=line478 onclick='overload_click(this)' class="a_ln">478<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   compiled into BUFFER.  Start searching at position START, for RANGE
</div></div></div><div class="div_line"  data-info=({id:11228,ln:479}) id=l479><div class="dl_wrapper"><a name=line479 onclick='overload_click(this)' class="a_ln">479<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   characters.  Return the starting position of the match, -1 for no
</div></div></div><div class="div_line"  data-info=({id:11229,ln:480}) id=l480><div class="dl_wrapper"><a name=line480 onclick='overload_click(this)' class="a_ln">480<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   match, or -2 for an internal error.  Also return register
</div></div></div><div class="div_line"  data-info=({id:11230,ln:481}) id=l481><div class="dl_wrapper"><a name=line481 onclick='overload_click(this)' class="a_ln">481<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   information in REGS (if REGS and BUFFER-&gt;no_sub are nonzero).  */
</div></div></div><div class="div_line"  data-info=({id:11231,ln:482}) id=l482><div class="dl_wrapper"><a name=line482 onclick='overload_click(this)' class="a_ln">482<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">extern int <a href='ctags/gnu_regex/regex.c#line43' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>re_search</a> (struct <a href='ctags/gnu_regex/regex.h#line356' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>re_pattern_buffer</a> *__buffer, const char *__string,
</div></div></div><div class="div_line"  data-info=({id:11232,ln:483}) id=l483><div class="dl_wrapper"><a name=line483 onclick='overload_click(this)' class="a_ln">483<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;      int __length, int __start, int __range,
</div></div></div><div class="div_line"  data-info=({id:11233,ln:484}) id=l484><div class="dl_wrapper"><a name=line484 onclick='overload_click(this)' class="a_ln">484<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;      struct <a href='ctags/gnu_regex/regex.h#line431' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>re_registers</a> *__regs);
</div></div></div><div class="div_line"  data-info=({id:11234,ln:485}) id=l485><div class="dl_wrapper"><a name=line485 onclick='overload_click(this)' class="a_ln">485<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:11235,ln:486}) id=l486><div class="dl_wrapper"><a name=line486 onclick='overload_click(this)' class="a_ln">486<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:11236,ln:487}) id=l487><div class="dl_wrapper"><a name=line487 onclick='overload_click(this)' class="a_ln">487<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">/* Like `re_search', but search in the concatenation of STRING1 and
</div></div></div><div class="div_line"  data-info=({id:11237,ln:488}) id=l488><div class="dl_wrapper"><a name=line488 onclick='overload_click(this)' class="a_ln">488<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   STRING2.  Also, stop searching at index START + STOP.  */
</div></div></div><div class="div_line"  data-info=({id:11238,ln:489}) id=l489><div class="dl_wrapper"><a name=line489 onclick='overload_click(this)' class="a_ln">489<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">extern int <a href='ctags/gnu_regex/regex.c#line48' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>re_search_2</a> (struct <a href='ctags/gnu_regex/regex.h#line356' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>re_pattern_buffer</a> *__buffer,
</div></div></div><div class="div_line"  data-info=({id:11239,ln:490}) id=l490><div class="dl_wrapper"><a name=line490 onclick='overload_click(this)' class="a_ln">490<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;const char *__string1, int __length1,
</div></div></div><div class="div_line"  data-info=({id:11240,ln:491}) id=l491><div class="dl_wrapper"><a name=line491 onclick='overload_click(this)' class="a_ln">491<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;const char *__string2, int __length2, int __start,
</div></div></div><div class="div_line"  data-info=({id:11241,ln:492}) id=l492><div class="dl_wrapper"><a name=line492 onclick='overload_click(this)' class="a_ln">492<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;int __range, struct <a href='ctags/gnu_regex/regex.h#line431' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>re_registers</a> *__regs, int __stop);
</div></div></div><div class="div_line"  data-info=({id:11242,ln:493}) id=l493><div class="dl_wrapper"><a name=line493 onclick='overload_click(this)' class="a_ln">493<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:11243,ln:494}) id=l494><div class="dl_wrapper"><a name=line494 onclick='overload_click(this)' class="a_ln">494<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:11244,ln:495}) id=l495><div class="dl_wrapper"><a name=line495 onclick='overload_click(this)' class="a_ln">495<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">/* Like `re_search', but return how many characters in STRING the regexp
</div></div></div><div class="div_line"  data-info=({id:11245,ln:496}) id=l496><div class="dl_wrapper"><a name=line496 onclick='overload_click(this)' class="a_ln">496<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   in BUFFER matched, starting at position START.  */
</div></div></div><div class="div_line"  data-info=({id:11246,ln:497}) id=l497><div class="dl_wrapper"><a name=line497 onclick='overload_click(this)' class="a_ln">497<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">extern int <a href='ctags/gnu_regex/regex.c#line41' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>re_match</a> (struct <a href='ctags/gnu_regex/regex.h#line356' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>re_pattern_buffer</a> *__buffer, const char *__string,
</div></div></div><div class="div_line"  data-info=({id:11247,ln:498}) id=l498><div class="dl_wrapper"><a name=line498 onclick='overload_click(this)' class="a_ln">498<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;     int __length, int __start, struct <a href='ctags/gnu_regex/regex.h#line431' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>re_registers</a> *__regs);
</div></div></div><div class="div_line"  data-info=({id:11248,ln:499}) id=l499><div class="dl_wrapper"><a name=line499 onclick='overload_click(this)' class="a_ln">499<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:11249,ln:500}) id=l500><div class="dl_wrapper"><a name=line500 onclick='overload_click(this)' class="a_ln">500<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:11250,ln:501}) id=l501><div class="dl_wrapper"><a name=line501 onclick='overload_click(this)' class="a_ln">501<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">/* Relates to `re_match' as `re_search_2' relates to `re_search'.  */
</div></div></div><div class="div_line"  data-info=({id:11251,ln:502}) id=l502><div class="dl_wrapper"><a name=line502 onclick='overload_click(this)' class="a_ln">502<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">extern int <a href='ctags/gnu_regex/regex.c#line39' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>re_match_2</a> (struct <a href='ctags/gnu_regex/regex.h#line356' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>re_pattern_buffer</a> *__buffer,
</div></div></div><div class="div_line"  data-info=({id:11252,ln:503}) id=l503><div class="dl_wrapper"><a name=line503 onclick='overload_click(this)' class="a_ln">503<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;       const char *__string1, int __length1,
</div></div></div><div class="div_line"  data-info=({id:11253,ln:504}) id=l504><div class="dl_wrapper"><a name=line504 onclick='overload_click(this)' class="a_ln">504<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;       const char *__string2, int __length2, int __start,
</div></div></div><div class="div_line"  data-info=({id:11254,ln:505}) id=l505><div class="dl_wrapper"><a name=line505 onclick='overload_click(this)' class="a_ln">505<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;       struct <a href='ctags/gnu_regex/regex.h#line431' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>re_registers</a> *__regs, int __stop);
</div></div></div><div class="div_line"  data-info=({id:11255,ln:506}) id=l506><div class="dl_wrapper"><a name=line506 onclick='overload_click(this)' class="a_ln">506<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:11256,ln:507}) id=l507><div class="dl_wrapper"><a name=line507 onclick='overload_click(this)' class="a_ln">507<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:11257,ln:508}) id=l508><div class="dl_wrapper"><a name=line508 onclick='overload_click(this)' class="a_ln">508<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">/* Set REGS to hold NUM_REGS registers, storing them in STARTS and
</div></div></div><div class="div_line"  data-info=({id:11258,ln:509}) id=l509><div class="dl_wrapper"><a name=line509 onclick='overload_click(this)' class="a_ln">509<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   ENDS.  Subsequent matches using BUFFER and REGS will use this memory
</div></div></div><div class="div_line"  data-info=({id:11259,ln:510}) id=l510><div class="dl_wrapper"><a name=line510 onclick='overload_click(this)' class="a_ln">510<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   for recording register information.  STARTS and ENDS must be
</div></div></div><div class="div_line"  data-info=({id:11260,ln:511}) id=l511><div class="dl_wrapper"><a name=line511 onclick='overload_click(this)' class="a_ln">511<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   allocated with malloc, and must each be at least `NUM_REGS * sizeof
</div></div></div><div class="div_line"  data-info=({id:11261,ln:512}) id=l512><div class="dl_wrapper"><a name=line512 onclick='overload_click(this)' class="a_ln">512<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   (regoff_t)' bytes long.
</div></div></div><div class="div_line"  data-info=({id:11262,ln:513}) id=l513><div class="dl_wrapper"><a name=line513 onclick='overload_click(this)' class="a_ln">513<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:11263,ln:514}) id=l514><div class="dl_wrapper"><a name=line514 onclick='overload_click(this)' class="a_ln">514<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   If NUM_REGS == 0, then subsequent matches should allocate their own
</div></div></div><div class="div_line"  data-info=({id:11264,ln:515}) id=l515><div class="dl_wrapper"><a name=line515 onclick='overload_click(this)' class="a_ln">515<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   register data.
</div></div></div><div class="div_line"  data-info=({id:11265,ln:516}) id=l516><div class="dl_wrapper"><a name=line516 onclick='overload_click(this)' class="a_ln">516<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:11266,ln:517}) id=l517><div class="dl_wrapper"><a name=line517 onclick='overload_click(this)' class="a_ln">517<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   Unless this function is called, the first search or match using
</div></div></div><div class="div_line"  data-info=({id:11267,ln:518}) id=l518><div class="dl_wrapper"><a name=line518 onclick='overload_click(this)' class="a_ln">518<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   PATTERN_BUFFER will allocate its own register data, without
</div></div></div><div class="div_line"  data-info=({id:11268,ln:519}) id=l519><div class="dl_wrapper"><a name=line519 onclick='overload_click(this)' class="a_ln">519<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   freeing the old data.  */
</div></div></div><div class="div_line"  data-info=({id:11269,ln:520}) id=l520><div class="dl_wrapper"><a name=line520 onclick='overload_click(this)' class="a_ln">520<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">extern void <a href='ctags/gnu_regex/regex.c#line37' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>re_set_registers</a> (struct <a href='ctags/gnu_regex/regex.h#line356' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>re_pattern_buffer</a> *__buffer,
</div></div></div><div class="div_line"  data-info=({id:11270,ln:521}) id=l521><div class="dl_wrapper"><a name=line521 onclick='overload_click(this)' class="a_ln">521<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;      struct <a href='ctags/gnu_regex/regex.h#line431' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>re_registers</a> *__regs,
</div></div></div><div class="div_line"  data-info=({id:11271,ln:522}) id=l522><div class="dl_wrapper"><a name=line522 onclick='overload_click(this)' class="a_ln">522<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;      unsigned int __num_regs,
</div></div></div><div class="div_line"  data-info=({id:11272,ln:523}) id=l523><div class="dl_wrapper"><a name=line523 onclick='overload_click(this)' class="a_ln">523<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;      regoff_t *__starts, regoff_t *__ends);
</div></div></div><div class="div_line"  data-info=({id:11273,ln:524}) id=l524><div class="dl_wrapper"><a name=line524 onclick='overload_click(this)' class="a_ln">524<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">#endif&#160;&#160;&#160;&#160;/* Use GNU */
</div></div></div><div class="div_line"  data-info=({id:11274,ln:525}) id=l525><div class="dl_wrapper"><a name=line525 onclick='overload_click(this)' class="a_ln">525<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:11275,ln:526}) id=l526><div class="dl_wrapper"><a name=line526 onclick='overload_click(this)' class="a_ln">526<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">#if defined _REGEX_RE_COMP || (defined _LIBC && defined __USE_BSD)
</div></div></div><div class="div_line"  data-info=({id:11276,ln:527}) id=l527><div class="dl_wrapper"><a name=line527 onclick='overload_click(this)' class="a_ln">527<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents"># ifndef _CRAY
</div></div></div><div class="div_line"  data-info=({id:11277,ln:528}) id=l528><div class="dl_wrapper"><a name=line528 onclick='overload_click(this)' class="a_ln">528<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">/* 4.2 bsd compatibility.  */
</div></div></div><div class="div_line"  data-info=({id:11278,ln:529}) id=l529><div class="dl_wrapper"><a name=line529 onclick='overload_click(this)' class="a_ln">529<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">extern char *re_comp (const char *);
</div></div></div><div class="div_line"  data-info=({id:11279,ln:530}) id=l530><div class="dl_wrapper"><a name=line530 onclick='overload_click(this)' class="a_ln">530<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">extern int re_exec (const char *);
</div></div></div><div class="div_line"  data-info=({id:11280,ln:531}) id=l531><div class="dl_wrapper"><a name=line531 onclick='overload_click(this)' class="a_ln">531<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents"># endif
</div></div></div><div class="div_line"  data-info=({id:11281,ln:532}) id=l532><div class="dl_wrapper"><a name=line532 onclick='overload_click(this)' class="a_ln">532<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">#endif
</div></div></div><div class="div_line"  data-info=({id:11282,ln:533}) id=l533><div class="dl_wrapper"><a name=line533 onclick='overload_click(this)' class="a_ln">533<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:11283,ln:534}) id=l534><div class="dl_wrapper"><a name=line534 onclick='overload_click(this)' class="a_ln">534<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">/* GCC 2.95 and later have "__restrict"; C99 compilers have
</div></div></div><div class="div_line"  data-info=({id:11284,ln:535}) id=l535><div class="dl_wrapper"><a name=line535 onclick='overload_click(this)' class="a_ln">535<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">   "restrict", and "configure" may have defined "restrict".  */
</div></div></div><div class="div_line"  data-info=({id:11285,ln:536}) id=l536><div class="dl_wrapper"><a name=line536 onclick='overload_click(this)' class="a_ln">536<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">#ifndef <a href='ctags/gnu_regex/regex.h#line539' class='a_code_tag multi_def' data-info='({type:"glref",tagreg:2})'>__restrict</a>
</div></div></div><div class="div_line"  data-info=({id:11286,ln:537}) id=l537><div class="dl_wrapper"><a name=line537 onclick='overload_click(this)' class="a_ln">537<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents"># if ! (2 &lt; __GNUC__ || (2 == __GNUC__ && 95 &lt;= __GNUC_MINOR__))
</div></div></div><div class="div_line"  data-info=({id:11287,ln:538}) id=l538><div class="dl_wrapper"><a name=line538 onclick='overload_click(this)' class="a_ln">538<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">#  if defined restrict || 199901L &lt;= __STDC_VERSION__
</div></div></div><div class="div_line"  data-info=({id:11288,ln:539}) id=l539><div class="dl_wrapper"><a name=line539 onclick='overload_click(this)' class="a_ln">539<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">#   define <span class='ctd macdef'>__restrict</span> restrict
</div></div></div><div class="div_line"  data-info=({id:11289,ln:540}) id=l540><div class="dl_wrapper"><a name=line540 onclick='overload_click(this)' class="a_ln">540<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">#  else
</div></div></div><div class="div_line"  data-info=({id:11290,ln:541}) id=l541><div class="dl_wrapper"><a name=line541 onclick='overload_click(this)' class="a_ln">541<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">#   define <span class='ctd macdef'>__restrict</span>
</div></div></div><div class="div_line"  data-info=({id:11291,ln:542}) id=l542><div class="dl_wrapper"><a name=line542 onclick='overload_click(this)' class="a_ln">542<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">#  endif
</div></div></div><div class="div_line"  data-info=({id:11292,ln:543}) id=l543><div class="dl_wrapper"><a name=line543 onclick='overload_click(this)' class="a_ln">543<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents"># endif
</div></div></div><div class="div_line"  data-info=({id:11293,ln:544}) id=l544><div class="dl_wrapper"><a name=line544 onclick='overload_click(this)' class="a_ln">544<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">#endif
</div></div></div><div class="div_line"  data-info=({id:11294,ln:545}) id=l545><div class="dl_wrapper"><a name=line545 onclick='overload_click(this)' class="a_ln">545<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">/* gcc 3.1 and up support the [restrict] syntax.  */
</div></div></div><div class="div_line"  data-info=({id:11295,ln:546}) id=l546><div class="dl_wrapper"><a name=line546 onclick='overload_click(this)' class="a_ln">546<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">#ifndef <a href='ctags/gnu_regex/regex.h#line549' class='a_code_tag multi_def' data-info='({type:"glref",tagreg:2})'>__restrict_arr</a>
</div></div></div><div class="div_line"  data-info=({id:11296,ln:547}) id=l547><div class="dl_wrapper"><a name=line547 onclick='overload_click(this)' class="a_ln">547<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents"># if (__GNUC__ &gt; 3 || (__GNUC__ == 3 && __GNUC_MINOR__ &gt;= 1)) \
</div></div></div><div class="div_line"  data-info=({id:11297,ln:548}) id=l548><div class="dl_wrapper"><a name=line548 onclick='overload_click(this)' class="a_ln">548<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">     && !defined <span class='ctd gvdef'>__GNUG__</span>
</div></div></div><div class="div_line"  data-info=({id:11298,ln:549}) id=l549><div class="dl_wrapper"><a name=line549 onclick='overload_click(this)' class="a_ln">549<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">#  define <span class='ctd macdef'>__restrict_arr</span> <a href='ctags/gnu_regex/regex.h#line539' class='a_code_tag multi_def' data-info='({type:"glref",tagreg:2})'>__restrict</a>
</div></div></div><div class="div_line"  data-info=({id:11299,ln:550}) id=l550><div class="dl_wrapper"><a name=line550 onclick='overload_click(this)' class="a_ln">550<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents"># else
</div></div></div><div class="div_line"  data-info=({id:11300,ln:551}) id=l551><div class="dl_wrapper"><a name=line551 onclick='overload_click(this)' class="a_ln">551<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">#  define <span class='ctd macdef'>__restrict_arr</span>
</div></div></div><div class="div_line"  data-info=({id:11301,ln:552}) id=l552><div class="dl_wrapper"><a name=line552 onclick='overload_click(this)' class="a_ln">552<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents"># endif
</div></div></div><div class="div_line"  data-info=({id:11302,ln:553}) id=l553><div class="dl_wrapper"><a name=line553 onclick='overload_click(this)' class="a_ln">553<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">#endif
</div></div></div><div class="div_line"  data-info=({id:11303,ln:554}) id=l554><div class="dl_wrapper"><a name=line554 onclick='overload_click(this)' class="a_ln">554<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:11304,ln:555}) id=l555><div class="dl_wrapper"><a name=line555 onclick='overload_click(this)' class="a_ln">555<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">/* POSIX compatibility.  */
</div></div></div><div class="div_line"  data-info=({id:11305,ln:556}) id=l556><div class="dl_wrapper"><a name=line556 onclick='overload_click(this)' class="a_ln">556<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">extern int <a href='ctags/gnu_regex/regex.c#line34' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>regcomp</a> (regex_t *<a href='ctags/gnu_regex/regex.h#line539' class='a_code_tag multi_def' data-info='({type:"glref",tagreg:2})'>__restrict</a> __preg,
</div></div></div><div class="div_line"  data-info=({id:11306,ln:557}) id=l557><div class="dl_wrapper"><a name=line557 onclick='overload_click(this)' class="a_ln">557<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;    const char *<a href='ctags/gnu_regex/regex.h#line539' class='a_code_tag multi_def' data-info='({type:"glref",tagreg:2})'>__restrict</a> __pattern,
</div></div></div><div class="div_line"  data-info=({id:11307,ln:558}) id=l558><div class="dl_wrapper"><a name=line558 onclick='overload_click(this)' class="a_ln">558<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;    int __cflags);
</div></div></div><div class="div_line"  data-info=({id:11308,ln:559}) id=l559><div class="dl_wrapper"><a name=line559 onclick='overload_click(this)' class="a_ln">559<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:11309,ln:560}) id=l560><div class="dl_wrapper"><a name=line560 onclick='overload_click(this)' class="a_ln">560<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">extern int <a href='ctags/gnu_regex/regex.c#line33' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>regexec</a> (const regex_t *<a href='ctags/gnu_regex/regex.h#line539' class='a_code_tag multi_def' data-info='({type:"glref",tagreg:2})'>__restrict</a> __preg,
</div></div></div><div class="div_line"  data-info=({id:11310,ln:561}) id=l561><div class="dl_wrapper"><a name=line561 onclick='overload_click(this)' class="a_ln">561<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;    const char *<a href='ctags/gnu_regex/regex.h#line539' class='a_code_tag multi_def' data-info='({type:"glref",tagreg:2})'>__restrict</a> __string, size_t __nmatch,
</div></div></div><div class="div_line"  data-info=({id:11311,ln:562}) id=l562><div class="dl_wrapper"><a name=line562 onclick='overload_click(this)' class="a_ln">562<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;    regmatch_t __pmatch[<a href='ctags/gnu_regex/regex.h#line549' class='a_code_tag multi_def' data-info='({type:"glref",tagreg:2})'>__restrict_arr</a>],
</div></div></div><div class="div_line"  data-info=({id:11312,ln:563}) id=l563><div class="dl_wrapper"><a name=line563 onclick='overload_click(this)' class="a_ln">563<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;    int __eflags);
</div></div></div><div class="div_line"  data-info=({id:11313,ln:564}) id=l564><div class="dl_wrapper"><a name=line564 onclick='overload_click(this)' class="a_ln">564<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:11314,ln:565}) id=l565><div class="dl_wrapper"><a name=line565 onclick='overload_click(this)' class="a_ln">565<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">extern size_t <a href='ctags/gnu_regex/regex.c#line35' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>regerror</a> (int __errcode, const regex_t *<a href='ctags/gnu_regex/regex.h#line539' class='a_code_tag multi_def' data-info='({type:"glref",tagreg:2})'>__restrict</a> __preg,
</div></div></div><div class="div_line"  data-info=({id:11315,ln:566}) id=l566><div class="dl_wrapper"><a name=line566 onclick='overload_click(this)' class="a_ln">566<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;char *<a href='ctags/gnu_regex/regex.h#line539' class='a_code_tag multi_def' data-info='({type:"glref",tagreg:2})'>__restrict</a> __errbuf, size_t __errbuf_size);
</div></div></div><div class="div_line"  data-info=({id:11316,ln:567}) id=l567><div class="dl_wrapper"><a name=line567 onclick='overload_click(this)' class="a_ln">567<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:11317,ln:568}) id=l568><div class="dl_wrapper"><a name=line568 onclick='overload_click(this)' class="a_ln">568<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">extern void <a href='ctags/gnu_regex/regex.c#line32' class='a_code_tag ' data-info='({type:"glref",tagreg:1})'>regfree</a> (regex_t *__preg);
</div></div></div><div class="div_line"  data-info=({id:11318,ln:569}) id=l569><div class="dl_wrapper"><a name=line569 onclick='overload_click(this)' class="a_ln">569<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:11319,ln:570}) id=l570><div class="dl_wrapper"><a name=line570 onclick='overload_click(this)' class="a_ln">570<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:11320,ln:571}) id=l571><div class="dl_wrapper"><a name=line571 onclick='overload_click(this)' class="a_ln">571<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">#ifdef __cplusplus
</div></div></div><div class="div_line"  data-info=({id:11321,ln:572}) id=l572><div class="dl_wrapper"><a name=line572 onclick='overload_click(this)' class="a_ln">572<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">}
</div></div></div><div class="div_line"  data-info=({id:11322,ln:573}) id=l573><div class="dl_wrapper"><a name=line573 onclick='overload_click(this)' class="a_ln">573<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">#endif&#160;&#160;&#160;&#160;/* C++ */
</div></div></div><div class="div_line"  data-info=({id:11323,ln:574}) id=l574><div class="dl_wrapper"><a name=line574 onclick='overload_click(this)' class="a_ln">574<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:11324,ln:575}) id=l575><div class="dl_wrapper"><a name=line575 onclick='overload_click(this)' class="a_ln">575<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">#endif /* regex.h */
</div></div></div><script>var local_symbol_set='([{name:"REGS_FIXED",ln:399},{name:"REGS_REALLOCATE",ln:398},{name:"REGS_UNALLOCATED",ln:397},{name:"REG_BADBR",ln:326},{name:"REG_BADPAT",ln:318},{name:"REG_BADRPT",ln:329},{name:"REG_EBRACE",ln:325},{name:"REG_EBRACK",ln:323},{name:"REG_ECOLLATE",ln:319},{name:"REG_ECTYPE",ln:320},{name:"REG_EEND",ln:332},{name:"REG_EESCAPE",ln:321},{name:"REG_ENOSYS",ln:310},{name:"REG_EPAREN",ln:324},{name:"REG_ERANGE",ln:327},{name:"REG_ERPAREN",ln:334},{name:"REG_ESIZE",ln:333},{name:"REG_ESPACE",ln:328},{name:"REG_ESUBREG",ln:322},{name:"REG_EXTENDED",ln:272},{name:"REG_ICASE",ln:276},{name:"REG_NEWLINE",ln:281},{name:"REG_NOERROR",ln:313},{name:"REG_NOMATCH",ln:314},{name:"REG_NOSUB",ln:285},{name:"REG_NOTBOL",ln:295},{name:"REG_NOTEOL",ln:298},{name:"REG_STARTEND",ln:302},{name:"RE_BACKSLASH_ESCAPE_IN_LISTS",ln:49},{name:"RE_BK_PLUS_QM",ln:54},{name:"RE_CARET_ANCHORS_HERE",ln:168},{name:"RE_CHAR_CLASSES",ln:60},{name:"RE_CONTEXT_INDEP_ANCHORS",ln:74},{name:"RE_CONTEXT_INDEP_OPS",ln:82},{name:"RE_CONTEXT_INVALID_DUP",ln:172},{name:"RE_CONTEXT_INVALID_OPS",ln:86},{name:"RE_DEBUG",ln:154},{name:"RE_DOT_NEWLINE",ln:90},{name:"RE_DOT_NOT_NULL",ln:94},{name:"RE_DUP_MAX",ln:261},{name:"RE_DUP_MAX",ln:264},{name:"RE_HAT_LISTS_NOT_NEWLINE",ln:98},{name:"RE_ICASE",ln:163},{name:"RE_INTERVALS",ln:103},{name:"RE_INVALID_INTERVAL_ORD",ln:159},{name:"RE_LIMITED_OPS",ln:107},{name:"RE_NEWLINE_ALT",ln:111},{name:"RE_NO_BK_BRACES",ln:116},{name:"RE_NO_BK_PARENS",ln:120},{name:"RE_NO_BK_REFS",ln:124},{name:"RE_NO_BK_VBAR",ln:128},{name:"RE_NO_EMPTY_RANGES",ln:134},{name:"RE_NO_GNU_OPS",ln:146},{name:"RE_NO_POSIX_BACKTRACKING",ln:142},{name:"RE_NO_SUB",ln:176},{name:"RE_NREGS",ln:443},{name:"RE_SYNTAX_AWK",ln:192},{name:"RE_SYNTAX_ED",ln:224},{name:"RE_SYNTAX_EGREP",ln:213},{name:"RE_SYNTAX_EMACS",ln:190},{name:"RE_SYNTAX_GNU_AWK",ln:199},{name:"RE_SYNTAX_GREP",ln:208},{name:"RE_SYNTAX_POSIX_AWK",ln:204},{name:"RE_SYNTAX_POSIX_BASIC",ln:233},{name:"RE_SYNTAX_POSIX_EGREP",ln:219},{name:"RE_SYNTAX_POSIX_EXTENDED",ln:242},{name:"RE_SYNTAX_POSIX_MINIMAL_BASIC",ln:239},{name:"RE_SYNTAX_POSIX_MINIMAL_EXTENDED",ln:250},{name:"RE_SYNTAX_SED",ln:226},{name:"RE_TRANSLATE_TYPE",ln:346},{name:"RE_UNMATCHED_RIGHT_PAREN_ORD",ln:138},{name:"_REGEX_H",ln:23},{name:"_RE_SYNTAX_POSIX_COMMON",ln:229},{name:"__REPB_PREFIX",ln:351},{name:"__REPB_PREFIX",ln:353},{name:"__RE_TRANSLATE_TYPE",ln:344},{name:"__restrict",ln:539},{name:"__restrict",ln:541},{name:"__restrict_arr",ln:549},{name:"__restrict_arr",ln:551},{name:"active_reg_t",ln:37},{name:"end",ln:435},{name:"num_regs",ln:433},{name:"re_nsub",ln:384},{name:"re_pattern_buffer",ln:356},{name:"re_registers",ln:431},{name:"reg_errcode_t",ln:335},{name:"reg_syntax_t",ln:44},{name:"regex_t",ln:422},{name:"regmatch_t",ln:455},{name:"regoff_t",ln:425},{name:"rm_eo",ln:454},{name:"rm_so",ln:453},{name:"s_reg_t",ln:36},{name:"start",ln:434},])';
var file_info = '({folder:0,project:"ctags5_8", table:"comments", topdir:"ctags_5_8", path:"ctags/gnu_regex/regex.h"})';
</script>