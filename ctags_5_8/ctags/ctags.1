<div class="div_line"  data-info=({id:20638,ln:1}) id=l1><div class="dl_wrapper"><a name=line1 onclick='overload_click(this)' class="a_ln">1<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.TH CTAGS 1 "Version 5.8" "Darren Hiebert" "Exuberant Ctags"
</div></div></div><div class="div_line"  data-info=({id:20639,ln:2}) id=l2><div class="dl_wrapper"><a name=line2 onclick='overload_click(this)' class="a_ln">2<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:20640,ln:3}) id=l3><div class="dl_wrapper"><a name=line3 onclick='overload_click(this)' class="a_ln">3<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:20641,ln:4}) id=l4><div class="dl_wrapper"><a name=line4 onclick='overload_click(this)' class="a_ln">4<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.SH "NAME"
</div></div></div><div class="div_line"  data-info=({id:20642,ln:5}) id=l5><div class="dl_wrapper"><a name=line5 onclick='overload_click(this)' class="a_ln">5<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">ctags \- Generate tag files for source code
</div></div></div><div class="div_line"  data-info=({id:20643,ln:6}) id=l6><div class="dl_wrapper"><a name=line6 onclick='overload_click(this)' class="a_ln">6<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:20644,ln:7}) id=l7><div class="dl_wrapper"><a name=line7 onclick='overload_click(this)' class="a_ln">7<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:20645,ln:8}) id=l8><div class="dl_wrapper"><a name=line8 onclick='overload_click(this)' class="a_ln">8<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.SH SYNOPSIS
</div></div></div><div class="div_line"  data-info=({id:20646,ln:9}) id=l9><div class="dl_wrapper"><a name=line9 onclick='overload_click(this)' class="a_ln">9<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.TP 6
</div></div></div><div class="div_line"  data-info=({id:20647,ln:10}) id=l10><div class="dl_wrapper"><a name=line10 onclick='overload_click(this)' class="a_ln">10<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">\fBctags\fP [\fBoptions\fP] [\fIfile(s)\fP]
</div></div></div><div class="div_line"  data-info=({id:20648,ln:11}) id=l11><div class="dl_wrapper"><a name=line11 onclick='overload_click(this)' class="a_ln">11<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.TP 6
</div></div></div><div class="div_line"  data-info=({id:20649,ln:12}) id=l12><div class="dl_wrapper"><a name=line12 onclick='overload_click(this)' class="a_ln">12<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">\fBetags\fP [\fBoptions\fP] [\fIfile(s)\fP]
</div></div></div><div class="div_line"  data-info=({id:20650,ln:13}) id=l13><div class="dl_wrapper"><a name=line13 onclick='overload_click(this)' class="a_ln">13<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:20651,ln:14}) id=l14><div class="dl_wrapper"><a name=line14 onclick='overload_click(this)' class="a_ln">14<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:20652,ln:15}) id=l15><div class="dl_wrapper"><a name=line15 onclick='overload_click(this)' class="a_ln">15<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.SH "DESCRIPTION"
</div></div></div><div class="div_line"  data-info=({id:20653,ln:16}) id=l16><div class="dl_wrapper"><a name=line16 onclick='overload_click(this)' class="a_ln">16<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">The \fBctags\fP and \fBetags\fP programs (hereinafter collectively referred to
</div></div></div><div class="div_line"  data-info=({id:20654,ln:17}) id=l17><div class="dl_wrapper"><a name=line17 onclick='overload_click(this)' class="a_ln">17<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">as \fBctags\fP, except where distinguished) generate an index (or "tag") file
</div></div></div><div class="div_line"  data-info=({id:20655,ln:18}) id=l18><div class="dl_wrapper"><a name=line18 onclick='overload_click(this)' class="a_ln">18<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">for a variety of language objects found in \fIfile(s)\fP.
</div></div></div><div class="div_line"  data-info=({id:20656,ln:19}) id=l19><div class="dl_wrapper"><a name=line19 onclick='overload_click(this)' class="a_ln">19<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">This tag file allows these items to be quickly and easily located by a text
</div></div></div><div class="div_line"  data-info=({id:20657,ln:20}) id=l20><div class="dl_wrapper"><a name=line20 onclick='overload_click(this)' class="a_ln">20<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">editor or other utility. A "tag" signifies a language object for which an
</div></div></div><div class="div_line"  data-info=({id:20658,ln:21}) id=l21><div class="dl_wrapper"><a name=line21 onclick='overload_click(this)' class="a_ln">21<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">index entry is available (or, alternatively, the index entry created for that
</div></div></div><div class="div_line"  data-info=({id:20659,ln:22}) id=l22><div class="dl_wrapper"><a name=line22 onclick='overload_click(this)' class="a_ln">22<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">object).
</div></div></div><div class="div_line"  data-info=({id:20660,ln:23}) id=l23><div class="dl_wrapper"><a name=line23 onclick='overload_click(this)' class="a_ln">23<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:20661,ln:24}) id=l24><div class="dl_wrapper"><a name=line24 onclick='overload_click(this)' class="a_ln">24<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">Alternatively, \fBctags\fP can generate a cross reference file which lists, in
</div></div></div><div class="div_line"  data-info=({id:20662,ln:25}) id=l25><div class="dl_wrapper"><a name=line25 onclick='overload_click(this)' class="a_ln">25<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">human readable form, information about the various source objects found in a
</div></div></div><div class="div_line"  data-info=({id:20663,ln:26}) id=l26><div class="dl_wrapper"><a name=line26 onclick='overload_click(this)' class="a_ln">26<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">set of language files.
</div></div></div><div class="div_line"  data-info=({id:20664,ln:27}) id=l27><div class="dl_wrapper"><a name=line27 onclick='overload_click(this)' class="a_ln">27<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:20665,ln:28}) id=l28><div class="dl_wrapper"><a name=line28 onclick='overload_click(this)' class="a_ln">28<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">Tag index files are supported by numerous editors, which allow the user to
</div></div></div><div class="div_line"  data-info=({id:20666,ln:29}) id=l29><div class="dl_wrapper"><a name=line29 onclick='overload_click(this)' class="a_ln">29<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">locate the object associated with a name appearing in a source file and jump
</div></div></div><div class="div_line"  data-info=({id:20667,ln:30}) id=l30><div class="dl_wrapper"><a name=line30 onclick='overload_click(this)' class="a_ln">30<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">to the file and line which defines the name. Those known about at the time of
</div></div></div><div class="div_line"  data-info=({id:20668,ln:31}) id=l31><div class="dl_wrapper"><a name=line31 onclick='overload_click(this)' class="a_ln">31<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">this release are:
</div></div></div><div class="div_line"  data-info=({id:20669,ln:32}) id=l32><div class="dl_wrapper"><a name=line32 onclick='overload_click(this)' class="a_ln">32<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:20670,ln:33}) id=l33><div class="dl_wrapper"><a name=line33 onclick='overload_click(this)' class="a_ln">33<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.RS 4
</div></div></div><div class="div_line"  data-info=({id:20671,ln:34}) id=l34><div class="dl_wrapper"><a name=line34 onclick='overload_click(this)' class="a_ln">34<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">\fBVi\fP(1) and its derivatives (e.g. Elvis, Vim, Vile, Lemmy),
</div></div></div><div class="div_line"  data-info=({id:20672,ln:35}) id=l35><div class="dl_wrapper"><a name=line35 onclick='overload_click(this)' class="a_ln">35<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">\fBCRiSP\fP,
</div></div></div><div class="div_line"  data-info=({id:20673,ln:36}) id=l36><div class="dl_wrapper"><a name=line36 onclick='overload_click(this)' class="a_ln">36<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">\fBEmacs\fP,
</div></div></div><div class="div_line"  data-info=({id:20674,ln:37}) id=l37><div class="dl_wrapper"><a name=line37 onclick='overload_click(this)' class="a_ln">37<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">\fBFTE\fP (Folding Text Editor),
</div></div></div><div class="div_line"  data-info=({id:20675,ln:38}) id=l38><div class="dl_wrapper"><a name=line38 onclick='overload_click(this)' class="a_ln">38<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">\fBJED\fP,
</div></div></div><div class="div_line"  data-info=({id:20676,ln:39}) id=l39><div class="dl_wrapper"><a name=line39 onclick='overload_click(this)' class="a_ln">39<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">\fBjEdit\fP,
</div></div></div><div class="div_line"  data-info=({id:20677,ln:40}) id=l40><div class="dl_wrapper"><a name=line40 onclick='overload_click(this)' class="a_ln">40<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">\fBMined\fP,
</div></div></div><div class="div_line"  data-info=({id:20678,ln:41}) id=l41><div class="dl_wrapper"><a name=line41 onclick='overload_click(this)' class="a_ln">41<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">\fBNEdit\fP (Nirvana Edit),
</div></div></div><div class="div_line"  data-info=({id:20679,ln:42}) id=l42><div class="dl_wrapper"><a name=line42 onclick='overload_click(this)' class="a_ln">42<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">\fBTSE\fP (The SemWare Editor),
</div></div></div><div class="div_line"  data-info=({id:20680,ln:43}) id=l43><div class="dl_wrapper"><a name=line43 onclick='overload_click(this)' class="a_ln">43<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">\fBUltraEdit\fP,
</div></div></div><div class="div_line"  data-info=({id:20681,ln:44}) id=l44><div class="dl_wrapper"><a name=line44 onclick='overload_click(this)' class="a_ln">44<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">\fBWorkSpace\fP,
</div></div></div><div class="div_line"  data-info=({id:20682,ln:45}) id=l45><div class="dl_wrapper"><a name=line45 onclick='overload_click(this)' class="a_ln">45<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">\fBX2\fP,
</div></div></div><div class="div_line"  data-info=({id:20683,ln:46}) id=l46><div class="dl_wrapper"><a name=line46 onclick='overload_click(this)' class="a_ln">46<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">\fBZeus\fP
</div></div></div><div class="div_line"  data-info=({id:20684,ln:47}) id=l47><div class="dl_wrapper"><a name=line47 onclick='overload_click(this)' class="a_ln">47<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.RE
</div></div></div><div class="div_line"  data-info=({id:20685,ln:48}) id=l48><div class="dl_wrapper"><a name=line48 onclick='overload_click(this)' class="a_ln">48<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:20686,ln:49}) id=l49><div class="dl_wrapper"><a name=line49 onclick='overload_click(this)' class="a_ln">49<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">\fBCtags\fP is capable of generating different kinds of tags for each of many
</div></div></div><div class="div_line"  data-info=({id:20687,ln:50}) id=l50><div class="dl_wrapper"><a name=line50 onclick='overload_click(this)' class="a_ln">50<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">different languages. For a complete list of supported languages, the names
</div></div></div><div class="div_line"  data-info=({id:20688,ln:51}) id=l51><div class="dl_wrapper"><a name=line51 onclick='overload_click(this)' class="a_ln">51<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">by which they are recognized, and the kinds of tags which are generated for
</div></div></div><div class="div_line"  data-info=({id:20689,ln:52}) id=l52><div class="dl_wrapper"><a name=line52 onclick='overload_click(this)' class="a_ln">52<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">each, see the \fB\-\-list\-languages\fP and \fB\-\-list\-kinds\fP options.
</div></div></div><div class="div_line"  data-info=({id:20690,ln:53}) id=l53><div class="dl_wrapper"><a name=line53 onclick='overload_click(this)' class="a_ln">53<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:20691,ln:54}) id=l54><div class="dl_wrapper"><a name=line54 onclick='overload_click(this)' class="a_ln">54<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:20692,ln:55}) id=l55><div class="dl_wrapper"><a name=line55 onclick='overload_click(this)' class="a_ln">55<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.SH "SOURCE FILES"
</div></div></div><div class="div_line"  data-info=({id:20693,ln:56}) id=l56><div class="dl_wrapper"><a name=line56 onclick='overload_click(this)' class="a_ln">56<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:20694,ln:57}) id=l57><div class="dl_wrapper"><a name=line57 onclick='overload_click(this)' class="a_ln">57<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">Unless the \fB\-\-language\-force\fP option is specified, the language of each
</div></div></div><div class="div_line"  data-info=({id:20695,ln:58}) id=l58><div class="dl_wrapper"><a name=line58 onclick='overload_click(this)' class="a_ln">58<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">source file is automatically selected based upon a mapping of file names to
</div></div></div><div class="div_line"  data-info=({id:20696,ln:59}) id=l59><div class="dl_wrapper"><a name=line59 onclick='overload_click(this)' class="a_ln">59<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">languages. The mappings in effect for each language may be display using the
</div></div></div><div class="div_line"  data-info=({id:20697,ln:60}) id=l60><div class="dl_wrapper"><a name=line60 onclick='overload_click(this)' class="a_ln">60<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">\fB\-\-list\-maps\fP option and may be changed using the \fB\-\-langmap\fP option.
</div></div></div><div class="div_line"  data-info=({id:20698,ln:61}) id=l61><div class="dl_wrapper"><a name=line61 onclick='overload_click(this)' class="a_ln">61<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">On platforms which support it, if the name of a file is not mapped
</div></div></div><div class="div_line"  data-info=({id:20699,ln:62}) id=l62><div class="dl_wrapper"><a name=line62 onclick='overload_click(this)' class="a_ln">62<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">to a language and the file is executable, the first line of the file is
</div></div></div><div class="div_line"  data-info=({id:20700,ln:63}) id=l63><div class="dl_wrapper"><a name=line63 onclick='overload_click(this)' class="a_ln">63<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">checked to see if the file is a "#!" script for a recognized language.
</div></div></div><div class="div_line"  data-info=({id:20701,ln:64}) id=l64><div class="dl_wrapper"><a name=line64 onclick='overload_click(this)' class="a_ln">64<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:20702,ln:65}) id=l65><div class="dl_wrapper"><a name=line65 onclick='overload_click(this)' class="a_ln">65<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">By default, all other files names are ignored. This permits running
</div></div></div><div class="div_line"  data-info=({id:20703,ln:66}) id=l66><div class="dl_wrapper"><a name=line66 onclick='overload_click(this)' class="a_ln">66<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">\fBctags\fP on all files in either a single directory (e.g. "ctags *"), or on
</div></div></div><div class="div_line"  data-info=({id:20704,ln:67}) id=l67><div class="dl_wrapper"><a name=line67 onclick='overload_click(this)' class="a_ln">67<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">all files in an entire source directory tree (e.g. "ctags \-R"), since only
</div></div></div><div class="div_line"  data-info=({id:20705,ln:68}) id=l68><div class="dl_wrapper"><a name=line68 onclick='overload_click(this)' class="a_ln">68<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">those files whose names are mapped to languages will be scanned.
</div></div></div><div class="div_line"  data-info=({id:20706,ln:69}) id=l69><div class="dl_wrapper"><a name=line69 onclick='overload_click(this)' class="a_ln">69<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:20707,ln:70}) id=l70><div class="dl_wrapper"><a name=line70 onclick='overload_click(this)' class="a_ln">70<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">[The reason that .h extensions are mapped to C++ files rather than C files
</div></div></div><div class="div_line"  data-info=({id:20708,ln:71}) id=l71><div class="dl_wrapper"><a name=line71 onclick='overload_click(this)' class="a_ln">71<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">is because it is common to use .h extensions in C++, and no harm results in
</div></div></div><div class="div_line"  data-info=({id:20709,ln:72}) id=l72><div class="dl_wrapper"><a name=line72 onclick='overload_click(this)' class="a_ln">72<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">treating them as C++ files.]
</div></div></div><div class="div_line"  data-info=({id:20710,ln:73}) id=l73><div class="dl_wrapper"><a name=line73 onclick='overload_click(this)' class="a_ln">73<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:20711,ln:74}) id=l74><div class="dl_wrapper"><a name=line74 onclick='overload_click(this)' class="a_ln">74<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:20712,ln:75}) id=l75><div class="dl_wrapper"><a name=line75 onclick='overload_click(this)' class="a_ln">75<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.SH "OPTIONS"
</div></div></div><div class="div_line"  data-info=({id:20713,ln:76}) id=l76><div class="dl_wrapper"><a name=line76 onclick='overload_click(this)' class="a_ln">76<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:20714,ln:77}) id=l77><div class="dl_wrapper"><a name=line77 onclick='overload_click(this)' class="a_ln">77<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">Despite the wealth of available options, defaults are set so that \fBctags\fP
</div></div></div><div class="div_line"  data-info=({id:20715,ln:78}) id=l78><div class="dl_wrapper"><a name=line78 onclick='overload_click(this)' class="a_ln">78<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">is most commonly executed without any options (e.g. "ctags *", or "ctags \-R"),
</div></div></div><div class="div_line"  data-info=({id:20716,ln:79}) id=l79><div class="dl_wrapper"><a name=line79 onclick='overload_click(this)' class="a_ln">79<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">which will create a tag file in the current directory for all recognized
</div></div></div><div class="div_line"  data-info=({id:20717,ln:80}) id=l80><div class="dl_wrapper"><a name=line80 onclick='overload_click(this)' class="a_ln">80<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">source files. The options described below are provided merely to allow custom
</div></div></div><div class="div_line"  data-info=({id:20718,ln:81}) id=l81><div class="dl_wrapper"><a name=line81 onclick='overload_click(this)' class="a_ln">81<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">tailoring to meet special needs.
</div></div></div><div class="div_line"  data-info=({id:20719,ln:82}) id=l82><div class="dl_wrapper"><a name=line82 onclick='overload_click(this)' class="a_ln">82<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:20720,ln:83}) id=l83><div class="dl_wrapper"><a name=line83 onclick='overload_click(this)' class="a_ln">83<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">Note that spaces separating the single-letter options from their parameters
</div></div></div><div class="div_line"  data-info=({id:20721,ln:84}) id=l84><div class="dl_wrapper"><a name=line84 onclick='overload_click(this)' class="a_ln">84<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">are optional.
</div></div></div><div class="div_line"  data-info=({id:20722,ln:85}) id=l85><div class="dl_wrapper"><a name=line85 onclick='overload_click(this)' class="a_ln">85<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:20723,ln:86}) id=l86><div class="dl_wrapper"><a name=line86 onclick='overload_click(this)' class="a_ln">86<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">Note also that the boolean parameters to the long form options (those
</div></div></div><div class="div_line"  data-info=({id:20724,ln:87}) id=l87><div class="dl_wrapper"><a name=line87 onclick='overload_click(this)' class="a_ln">87<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">beginning with "\-\-" and that take a "\fI[=yes\fP|\fIno]\fP" parameter) may
</div></div></div><div class="div_line"  data-info=({id:20725,ln:88}) id=l88><div class="dl_wrapper"><a name=line88 onclick='overload_click(this)' class="a_ln">88<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">be omitted, in which case "\fB=\fP\fIyes\fP" is implied. (e.g. \fB\-\-sort\fP
</div></div></div><div class="div_line"  data-info=({id:20726,ln:89}) id=l89><div class="dl_wrapper"><a name=line89 onclick='overload_click(this)' class="a_ln">89<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">is equivalent to \fB\-\-sort\fP=\fIyes\fP). Note further that "=\fI1\fP" and
</div></div></div><div class="div_line"  data-info=({id:20727,ln:90}) id=l90><div class="dl_wrapper"><a name=line90 onclick='overload_click(this)' class="a_ln">90<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">"=\fIon\fP" are considered synonyms for "=\fIyes\fP", and that "=\fI0\fP"
</div></div></div><div class="div_line"  data-info=({id:20728,ln:91}) id=l91><div class="dl_wrapper"><a name=line91 onclick='overload_click(this)' class="a_ln">91<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">and "=\fIoff\fP" are considered synonyms for "=\fIno\fP".
</div></div></div><div class="div_line"  data-info=({id:20729,ln:92}) id=l92><div class="dl_wrapper"><a name=line92 onclick='overload_click(this)' class="a_ln">92<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:20730,ln:93}) id=l93><div class="dl_wrapper"><a name=line93 onclick='overload_click(this)' class="a_ln">93<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">Some options are either ignored or useful only when used while running in
</div></div></div><div class="div_line"  data-info=({id:20731,ln:94}) id=l94><div class="dl_wrapper"><a name=line94 onclick='overload_click(this)' class="a_ln">94<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">etags mode (see \fB\-e\fP option). Such options will be noted.
</div></div></div><div class="div_line"  data-info=({id:20732,ln:95}) id=l95><div class="dl_wrapper"><a name=line95 onclick='overload_click(this)' class="a_ln">95<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:20733,ln:96}) id=l96><div class="dl_wrapper"><a name=line96 onclick='overload_click(this)' class="a_ln">96<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">Most options may appear anywhere on the command line, affecting only those
</div></div></div><div class="div_line"  data-info=({id:20734,ln:97}) id=l97><div class="dl_wrapper"><a name=line97 onclick='overload_click(this)' class="a_ln">97<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">files which follow the option. A few options, however, must appear before the
</div></div></div><div class="div_line"  data-info=({id:20735,ln:98}) id=l98><div class="dl_wrapper"><a name=line98 onclick='overload_click(this)' class="a_ln">98<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">first file name and will be noted as such.
</div></div></div><div class="div_line"  data-info=({id:20736,ln:99}) id=l99><div class="dl_wrapper"><a name=line99 onclick='overload_click(this)' class="a_ln">99<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:20737,ln:100}) id=l100><div class="dl_wrapper"><a name=line100 onclick='overload_click(this)' class="a_ln">100<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">Options taking language names will accept those names in either upper or lower
</div></div></div><div class="div_line"  data-info=({id:20738,ln:101}) id=l101><div class="dl_wrapper"><a name=line101 onclick='overload_click(this)' class="a_ln">101<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">case. See the \fB\-\-list\-languages\fP option for a complete list of the
</div></div></div><div class="div_line"  data-info=({id:20739,ln:102}) id=l102><div class="dl_wrapper"><a name=line102 onclick='overload_click(this)' class="a_ln">102<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">built-in language names.
</div></div></div><div class="div_line"  data-info=({id:20740,ln:103}) id=l103><div class="dl_wrapper"><a name=line103 onclick='overload_click(this)' class="a_ln">103<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:20741,ln:104}) id=l104><div class="dl_wrapper"><a name=line104 onclick='overload_click(this)' class="a_ln">104<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.TP 5
</div></div></div><div class="div_line"  data-info=({id:20742,ln:105}) id=l105><div class="dl_wrapper"><a name=line105 onclick='overload_click(this)' class="a_ln">105<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.B \-a
</div></div></div><div class="div_line"  data-info=({id:20743,ln:106}) id=l106><div class="dl_wrapper"><a name=line106 onclick='overload_click(this)' class="a_ln">106<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">Equivalent to \fB\-\-append\fP.
</div></div></div><div class="div_line"  data-info=({id:20744,ln:107}) id=l107><div class="dl_wrapper"><a name=line107 onclick='overload_click(this)' class="a_ln">107<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:20745,ln:108}) id=l108><div class="dl_wrapper"><a name=line108 onclick='overload_click(this)' class="a_ln">108<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.TP 5
</div></div></div><div class="div_line"  data-info=({id:20746,ln:109}) id=l109><div class="dl_wrapper"><a name=line109 onclick='overload_click(this)' class="a_ln">109<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.B \-B
</div></div></div><div class="div_line"  data-info=({id:20747,ln:110}) id=l110><div class="dl_wrapper"><a name=line110 onclick='overload_click(this)' class="a_ln">110<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">Use backward searching patterns (e.g. ?pattern?). [Ignored in etags mode]
</div></div></div><div class="div_line"  data-info=({id:20748,ln:111}) id=l111><div class="dl_wrapper"><a name=line111 onclick='overload_click(this)' class="a_ln">111<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:20749,ln:112}) id=l112><div class="dl_wrapper"><a name=line112 onclick='overload_click(this)' class="a_ln">112<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.TP 5
</div></div></div><div class="div_line"  data-info=({id:20750,ln:113}) id=l113><div class="dl_wrapper"><a name=line113 onclick='overload_click(this)' class="a_ln">113<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.B \-e
</div></div></div><div class="div_line"  data-info=({id:20751,ln:114}) id=l114><div class="dl_wrapper"><a name=line114 onclick='overload_click(this)' class="a_ln">114<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">Enable etags mode, which will create a tag file for use with the Emacs editor.
</div></div></div><div class="div_line"  data-info=({id:20752,ln:115}) id=l115><div class="dl_wrapper"><a name=line115 onclick='overload_click(this)' class="a_ln">115<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">Alternatively, if \fBctags\fP is invoked by a name containing the string
</div></div></div><div class="div_line"  data-info=({id:20753,ln:116}) id=l116><div class="dl_wrapper"><a name=line116 onclick='overload_click(this)' class="a_ln">116<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">"etags" (either by renaming, or creating a link to, the executable), etags
</div></div></div><div class="div_line"  data-info=({id:20754,ln:117}) id=l117><div class="dl_wrapper"><a name=line117 onclick='overload_click(this)' class="a_ln">117<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">mode will be enabled. This option must appear before the first file name.
</div></div></div><div class="div_line"  data-info=({id:20755,ln:118}) id=l118><div class="dl_wrapper"><a name=line118 onclick='overload_click(this)' class="a_ln">118<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:20756,ln:119}) id=l119><div class="dl_wrapper"><a name=line119 onclick='overload_click(this)' class="a_ln">119<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.TP 5
</div></div></div><div class="div_line"  data-info=({id:20757,ln:120}) id=l120><div class="dl_wrapper"><a name=line120 onclick='overload_click(this)' class="a_ln">120<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.BI \-f " tagfile"
</div></div></div><div class="div_line"  data-info=({id:20758,ln:121}) id=l121><div class="dl_wrapper"><a name=line121 onclick='overload_click(this)' class="a_ln">121<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">Use the name specified by \fItagfile\fP for the tag file (default is "tags",
</div></div></div><div class="div_line"  data-info=({id:20759,ln:122}) id=l122><div class="dl_wrapper"><a name=line122 onclick='overload_click(this)' class="a_ln">122<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">or "TAGS" when running in etags mode). If \fItagfile\fP is specified as
</div></div></div><div class="div_line"  data-info=({id:20760,ln:123}) id=l123><div class="dl_wrapper"><a name=line123 onclick='overload_click(this)' class="a_ln">123<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">"\-", then the tag file is written to standard output instead. \fBCtags\fP
</div></div></div><div class="div_line"  data-info=({id:20761,ln:124}) id=l124><div class="dl_wrapper"><a name=line124 onclick='overload_click(this)' class="a_ln">124<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">will stubbornly refuse to take orders if \fItagfile\fP exists and its first
</div></div></div><div class="div_line"  data-info=({id:20762,ln:125}) id=l125><div class="dl_wrapper"><a name=line125 onclick='overload_click(this)' class="a_ln">125<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">line contains something other than a valid tags line. This will save your neck
</div></div></div><div class="div_line"  data-info=({id:20763,ln:126}) id=l126><div class="dl_wrapper"><a name=line126 onclick='overload_click(this)' class="a_ln">126<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">if you mistakenly type "ctags \-f *.c", which would otherwise overwrite your
</div></div></div><div class="div_line"  data-info=({id:20764,ln:127}) id=l127><div class="dl_wrapper"><a name=line127 onclick='overload_click(this)' class="a_ln">127<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">first C file with the tags generated by the rest! It will also refuse to
</div></div></div><div class="div_line"  data-info=({id:20765,ln:128}) id=l128><div class="dl_wrapper"><a name=line128 onclick='overload_click(this)' class="a_ln">128<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">accept a multi-character file name which begins with a '\-' (dash) character,
</div></div></div><div class="div_line"  data-info=({id:20766,ln:129}) id=l129><div class="dl_wrapper"><a name=line129 onclick='overload_click(this)' class="a_ln">129<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">since this most likely means that you left out the tag file name and this
</div></div></div><div class="div_line"  data-info=({id:20767,ln:130}) id=l130><div class="dl_wrapper"><a name=line130 onclick='overload_click(this)' class="a_ln">130<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">option tried to grab the next option as the file name. If you really want to
</div></div></div><div class="div_line"  data-info=({id:20768,ln:131}) id=l131><div class="dl_wrapper"><a name=line131 onclick='overload_click(this)' class="a_ln">131<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">name your output tag file "\-ugly", specify it as "./\-ugly". This option must
</div></div></div><div class="div_line"  data-info=({id:20769,ln:132}) id=l132><div class="dl_wrapper"><a name=line132 onclick='overload_click(this)' class="a_ln">132<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">appear before the first file name. If this option is specified more than once,
</div></div></div><div class="div_line"  data-info=({id:20770,ln:133}) id=l133><div class="dl_wrapper"><a name=line133 onclick='overload_click(this)' class="a_ln">133<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">only the last will apply.
</div></div></div><div class="div_line"  data-info=({id:20771,ln:134}) id=l134><div class="dl_wrapper"><a name=line134 onclick='overload_click(this)' class="a_ln">134<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:20772,ln:135}) id=l135><div class="dl_wrapper"><a name=line135 onclick='overload_click(this)' class="a_ln">135<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.TP 5
</div></div></div><div class="div_line"  data-info=({id:20773,ln:136}) id=l136><div class="dl_wrapper"><a name=line136 onclick='overload_click(this)' class="a_ln">136<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.B \-F
</div></div></div><div class="div_line"  data-info=({id:20774,ln:137}) id=l137><div class="dl_wrapper"><a name=line137 onclick='overload_click(this)' class="a_ln">137<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">Use forward searching patterns (e.g. /pattern/) (default).
</div></div></div><div class="div_line"  data-info=({id:20775,ln:138}) id=l138><div class="dl_wrapper"><a name=line138 onclick='overload_click(this)' class="a_ln">138<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">[Ignored in etags mode]
</div></div></div><div class="div_line"  data-info=({id:20776,ln:139}) id=l139><div class="dl_wrapper"><a name=line139 onclick='overload_click(this)' class="a_ln">139<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:20777,ln:140}) id=l140><div class="dl_wrapper"><a name=line140 onclick='overload_click(this)' class="a_ln">140<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.TP 5
</div></div></div><div class="div_line"  data-info=({id:20778,ln:141}) id=l141><div class="dl_wrapper"><a name=line141 onclick='overload_click(this)' class="a_ln">141<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.BI \-h  " list"
</div></div></div><div class="div_line"  data-info=({id:20779,ln:142}) id=l142><div class="dl_wrapper"><a name=line142 onclick='overload_click(this)' class="a_ln">142<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">Specifies a list of file extensions, separated by periods, which are to be
</div></div></div><div class="div_line"  data-info=({id:20780,ln:143}) id=l143><div class="dl_wrapper"><a name=line143 onclick='overload_click(this)' class="a_ln">143<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">interpreted as include (or header) files. To indicate files having no
</div></div></div><div class="div_line"  data-info=({id:20781,ln:144}) id=l144><div class="dl_wrapper"><a name=line144 onclick='overload_click(this)' class="a_ln">144<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">extension, use a period not followed by a non-period character (e.g. ".",
</div></div></div><div class="div_line"  data-info=({id:20782,ln:145}) id=l145><div class="dl_wrapper"><a name=line145 onclick='overload_click(this)' class="a_ln">145<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">"..x", ".x."). This option only affects how the scoping of a particular kinds
</div></div></div><div class="div_line"  data-info=({id:20783,ln:146}) id=l146><div class="dl_wrapper"><a name=line146 onclick='overload_click(this)' class="a_ln">146<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">of tags is interpreted (i.e. whether or not they are considered as globally
</div></div></div><div class="div_line"  data-info=({id:20784,ln:147}) id=l147><div class="dl_wrapper"><a name=line147 onclick='overload_click(this)' class="a_ln">147<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">visible or visible only within the file in which they are defined); it does
</div></div></div><div class="div_line"  data-info=({id:20785,ln:148}) id=l148><div class="dl_wrapper"><a name=line148 onclick='overload_click(this)' class="a_ln">148<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">not map the extension to any particular language. Any tag which is located in
</div></div></div><div class="div_line"  data-info=({id:20786,ln:149}) id=l149><div class="dl_wrapper"><a name=line149 onclick='overload_click(this)' class="a_ln">149<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">a non-include file and cannot be seen (e.g. linked to) from another file is
</div></div></div><div class="div_line"  data-info=({id:20787,ln:150}) id=l150><div class="dl_wrapper"><a name=line150 onclick='overload_click(this)' class="a_ln">150<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">considered to have file-limited (e.g. static) scope. No kind of tag appearing
</div></div></div><div class="div_line"  data-info=({id:20788,ln:151}) id=l151><div class="dl_wrapper"><a name=line151 onclick='overload_click(this)' class="a_ln">151<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">in an include file will be considered to have file-limited scope. If the first
</div></div></div><div class="div_line"  data-info=({id:20789,ln:152}) id=l152><div class="dl_wrapper"><a name=line152 onclick='overload_click(this)' class="a_ln">152<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">character in the list is a plus sign, then the extensions in the list will be
</div></div></div><div class="div_line"  data-info=({id:20790,ln:153}) id=l153><div class="dl_wrapper"><a name=line153 onclick='overload_click(this)' class="a_ln">153<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">appended to the current list; otherwise, the list will replace the current
</div></div></div><div class="div_line"  data-info=({id:20791,ln:154}) id=l154><div class="dl_wrapper"><a name=line154 onclick='overload_click(this)' class="a_ln">154<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">list. See, also, the \fB\-\-file\-scope\fP option. The default list is
</div></div></div><div class="div_line"  data-info=({id:20792,ln:155}) id=l155><div class="dl_wrapper"><a name=line155 onclick='overload_click(this)' class="a_ln">155<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">".h.H.hh.hpp.hxx.h++.inc.def". To restore the default list, specify \fB\-h\fP
</div></div></div><div class="div_line"  data-info=({id:20793,ln:156}) id=l156><div class="dl_wrapper"><a name=line156 onclick='overload_click(this)' class="a_ln">156<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">\fIdefault\fP. Note that if an extension supplied to this option is not
</div></div></div><div class="div_line"  data-info=({id:20794,ln:157}) id=l157><div class="dl_wrapper"><a name=line157 onclick='overload_click(this)' class="a_ln">157<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">already mapped to a particular language (see \fBSOURCE FILES\fP, above), you
</div></div></div><div class="div_line"  data-info=({id:20795,ln:158}) id=l158><div class="dl_wrapper"><a name=line158 onclick='overload_click(this)' class="a_ln">158<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">will also need to use either the \fB\-\-langmap\fP or \fB\-\-language\-force\fP
</div></div></div><div class="div_line"  data-info=({id:20796,ln:159}) id=l159><div class="dl_wrapper"><a name=line159 onclick='overload_click(this)' class="a_ln">159<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">option.
</div></div></div><div class="div_line"  data-info=({id:20797,ln:160}) id=l160><div class="dl_wrapper"><a name=line160 onclick='overload_click(this)' class="a_ln">160<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:20798,ln:161}) id=l161><div class="dl_wrapper"><a name=line161 onclick='overload_click(this)' class="a_ln">161<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.TP 5
</div></div></div><div class="div_line"  data-info=({id:20799,ln:162}) id=l162><div class="dl_wrapper"><a name=line162 onclick='overload_click(this)' class="a_ln">162<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.BI \-I " identifier\-list"
</div></div></div><div class="div_line"  data-info=({id:20800,ln:163}) id=l163><div class="dl_wrapper"><a name=line163 onclick='overload_click(this)' class="a_ln">163<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">Specifies a list of identifiers which are to be specially handled while
</div></div></div><div class="div_line"  data-info=({id:20801,ln:164}) id=l164><div class="dl_wrapper"><a name=line164 onclick='overload_click(this)' class="a_ln">164<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">parsing C and C++ source files. This option is specifically provided to handle
</div></div></div><div class="div_line"  data-info=({id:20802,ln:165}) id=l165><div class="dl_wrapper"><a name=line165 onclick='overload_click(this)' class="a_ln">165<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">special cases arising through the use of preprocessor macros. When the
</div></div></div><div class="div_line"  data-info=({id:20803,ln:166}) id=l166><div class="dl_wrapper"><a name=line166 onclick='overload_click(this)' class="a_ln">166<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">identifiers listed are simple identifiers, these identifiers will be ignored
</div></div></div><div class="div_line"  data-info=({id:20804,ln:167}) id=l167><div class="dl_wrapper"><a name=line167 onclick='overload_click(this)' class="a_ln">167<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">during parsing of the source files. If an identifier is suffixed with a '+'
</div></div></div><div class="div_line"  data-info=({id:20805,ln:168}) id=l168><div class="dl_wrapper"><a name=line168 onclick='overload_click(this)' class="a_ln">168<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">character, \fBctags\fP will also ignore any parenthesis-enclosed argument list
</div></div></div><div class="div_line"  data-info=({id:20806,ln:169}) id=l169><div class="dl_wrapper"><a name=line169 onclick='overload_click(this)' class="a_ln">169<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">which may immediately follow the identifier in the source files. If two
</div></div></div><div class="div_line"  data-info=({id:20807,ln:170}) id=l170><div class="dl_wrapper"><a name=line170 onclick='overload_click(this)' class="a_ln">170<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">identifiers are separated with the '=' character, the first identifiers is
</div></div></div><div class="div_line"  data-info=({id:20808,ln:171}) id=l171><div class="dl_wrapper"><a name=line171 onclick='overload_click(this)' class="a_ln">171<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">replaced by the second identifiers for parsing purposes. The list of
</div></div></div><div class="div_line"  data-info=({id:20809,ln:172}) id=l172><div class="dl_wrapper"><a name=line172 onclick='overload_click(this)' class="a_ln">172<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">identifiers may be supplied directly on the command line or read in from a
</div></div></div><div class="div_line"  data-info=({id:20810,ln:173}) id=l173><div class="dl_wrapper"><a name=line173 onclick='overload_click(this)' class="a_ln">173<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">separate file. If the first character of \fIidentifier\-list\fP is '@', '.' or
</div></div></div><div class="div_line"  data-info=({id:20811,ln:174}) id=l174><div class="dl_wrapper"><a name=line174 onclick='overload_click(this)' class="a_ln">174<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">a pathname separator ('/' or '\\'), or the first two characters specify a
</div></div></div><div class="div_line"  data-info=({id:20812,ln:175}) id=l175><div class="dl_wrapper"><a name=line175 onclick='overload_click(this)' class="a_ln">175<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">drive letter (e.g. "C:"), the parameter \fIidentifier\-list\fP will be
</div></div></div><div class="div_line"  data-info=({id:20813,ln:176}) id=l176><div class="dl_wrapper"><a name=line176 onclick='overload_click(this)' class="a_ln">176<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">interpreted as a filename from which to read a list of identifiers, one per
</div></div></div><div class="div_line"  data-info=({id:20814,ln:177}) id=l177><div class="dl_wrapper"><a name=line177 onclick='overload_click(this)' class="a_ln">177<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">input line. Otherwise, \fIidentifier\-list\fP is a list of identifiers (or
</div></div></div><div class="div_line"  data-info=({id:20815,ln:178}) id=l178><div class="dl_wrapper"><a name=line178 onclick='overload_click(this)' class="a_ln">178<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">identifier pairs) to be specially handled, each delimited by a either a comma
</div></div></div><div class="div_line"  data-info=({id:20816,ln:179}) id=l179><div class="dl_wrapper"><a name=line179 onclick='overload_click(this)' class="a_ln">179<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">or by white space (in which case the list should be quoted to keep the entire
</div></div></div><div class="div_line"  data-info=({id:20817,ln:180}) id=l180><div class="dl_wrapper"><a name=line180 onclick='overload_click(this)' class="a_ln">180<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">list as one command line argument). Multiple \fB\-I\fP options may be supplied.
</div></div></div><div class="div_line"  data-info=({id:20818,ln:181}) id=l181><div class="dl_wrapper"><a name=line181 onclick='overload_click(this)' class="a_ln">181<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">To clear the list of ignore identifiers, supply a single dash ("\-") for
</div></div></div><div class="div_line"  data-info=({id:20819,ln:182}) id=l182><div class="dl_wrapper"><a name=line182 onclick='overload_click(this)' class="a_ln">182<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">\fIidentifier\-list\fP.
</div></div></div><div class="div_line"  data-info=({id:20820,ln:183}) id=l183><div class="dl_wrapper"><a name=line183 onclick='overload_click(this)' class="a_ln">183<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:20821,ln:184}) id=l184><div class="dl_wrapper"><a name=line184 onclick='overload_click(this)' class="a_ln">184<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">This feature is useful when preprocessor macros are used in such a way that
</div></div></div><div class="div_line"  data-info=({id:20822,ln:185}) id=l185><div class="dl_wrapper"><a name=line185 onclick='overload_click(this)' class="a_ln">185<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">they cause syntactic confusion due to their presence. Indeed, this is the best
</div></div></div><div class="div_line"  data-info=({id:20823,ln:186}) id=l186><div class="dl_wrapper"><a name=line186 onclick='overload_click(this)' class="a_ln">186<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">way of working around a number of problems caused by the presence of
</div></div></div><div class="div_line"  data-info=({id:20824,ln:187}) id=l187><div class="dl_wrapper"><a name=line187 onclick='overload_click(this)' class="a_ln">187<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">syntax-busting macros in source files (see \fBCAVEATS\fP, below). Some
</div></div></div><div class="div_line"  data-info=({id:20825,ln:188}) id=l188><div class="dl_wrapper"><a name=line188 onclick='overload_click(this)' class="a_ln">188<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">examples will illustrate this point.
</div></div></div><div class="div_line"  data-info=({id:20826,ln:189}) id=l189><div class="dl_wrapper"><a name=line189 onclick='overload_click(this)' class="a_ln">189<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:20827,ln:190}) id=l190><div class="dl_wrapper"><a name=line190 onclick='overload_click(this)' class="a_ln">190<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.RS 8
</div></div></div><div class="div_line"  data-info=({id:20828,ln:191}) id=l191><div class="dl_wrapper"><a name=line191 onclick='overload_click(this)' class="a_ln">191<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">int foo ARGDECL4(void *, ptr, long int, nbytes)
</div></div></div><div class="div_line"  data-info=({id:20829,ln:192}) id=l192><div class="dl_wrapper"><a name=line192 onclick='overload_click(this)' class="a_ln">192<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.RE
</div></div></div><div class="div_line"  data-info=({id:20830,ln:193}) id=l193><div class="dl_wrapper"><a name=line193 onclick='overload_click(this)' class="a_ln">193<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:20831,ln:194}) id=l194><div class="dl_wrapper"><a name=line194 onclick='overload_click(this)' class="a_ln">194<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.IP
</div></div></div><div class="div_line"  data-info=({id:20832,ln:195}) id=l195><div class="dl_wrapper"><a name=line195 onclick='overload_click(this)' class="a_ln">195<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">In the above example, the macro "ARGDECL4" would be mistakenly interpreted to
</div></div></div><div class="div_line"  data-info=({id:20833,ln:196}) id=l196><div class="dl_wrapper"><a name=line196 onclick='overload_click(this)' class="a_ln">196<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">be the name of the function instead of the correct name of "foo". Specifying
</div></div></div><div class="div_line"  data-info=({id:20834,ln:197}) id=l197><div class="dl_wrapper"><a name=line197 onclick='overload_click(this)' class="a_ln">197<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">\fB\-I\fP \fIARGDECL4\fP results in the correct behavior.
</div></div></div><div class="div_line"  data-info=({id:20835,ln:198}) id=l198><div class="dl_wrapper"><a name=line198 onclick='overload_click(this)' class="a_ln">198<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:20836,ln:199}) id=l199><div class="dl_wrapper"><a name=line199 onclick='overload_click(this)' class="a_ln">199<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.RS 8
</div></div></div><div class="div_line"  data-info=({id:20837,ln:200}) id=l200><div class="dl_wrapper"><a name=line200 onclick='overload_click(this)' class="a_ln">200<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">/* creates an RCS version string in module */
</div></div></div><div class="div_line"  data-info=({id:20838,ln:201}) id=l201><div class="dl_wrapper"><a name=line201 onclick='overload_click(this)' class="a_ln">201<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.br
</div></div></div><div class="div_line"  data-info=({id:20839,ln:202}) id=l202><div class="dl_wrapper"><a name=line202 onclick='overload_click(this)' class="a_ln">202<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">MODULE_VERSION("$Revision: 690 $")
</div></div></div><div class="div_line"  data-info=({id:20840,ln:203}) id=l203><div class="dl_wrapper"><a name=line203 onclick='overload_click(this)' class="a_ln">203<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.RE
</div></div></div><div class="div_line"  data-info=({id:20841,ln:204}) id=l204><div class="dl_wrapper"><a name=line204 onclick='overload_click(this)' class="a_ln">204<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:20842,ln:205}) id=l205><div class="dl_wrapper"><a name=line205 onclick='overload_click(this)' class="a_ln">205<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.IP
</div></div></div><div class="div_line"  data-info=({id:20843,ln:206}) id=l206><div class="dl_wrapper"><a name=line206 onclick='overload_click(this)' class="a_ln">206<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">In the above example the macro invocation looks too much like a function
</div></div></div><div class="div_line"  data-info=({id:20844,ln:207}) id=l207><div class="dl_wrapper"><a name=line207 onclick='overload_click(this)' class="a_ln">207<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">definition because it is not followed by a semicolon (indeed, it could even be
</div></div></div><div class="div_line"  data-info=({id:20845,ln:208}) id=l208><div class="dl_wrapper"><a name=line208 onclick='overload_click(this)' class="a_ln">208<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">followed by a global variable definition that would look much like a K&R style
</div></div></div><div class="div_line"  data-info=({id:20846,ln:209}) id=l209><div class="dl_wrapper"><a name=line209 onclick='overload_click(this)' class="a_ln">209<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">function parameter declaration). In fact, this seeming function definition
</div></div></div><div class="div_line"  data-info=({id:20847,ln:210}) id=l210><div class="dl_wrapper"><a name=line210 onclick='overload_click(this)' class="a_ln">210<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">could possibly even cause the rest of the file to be skipped over while trying
</div></div></div><div class="div_line"  data-info=({id:20848,ln:211}) id=l211><div class="dl_wrapper"><a name=line211 onclick='overload_click(this)' class="a_ln">211<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">to complete the definition. Specifying \fB\-I\fP \fIMODULE_VERSION+\fP would
</div></div></div><div class="div_line"  data-info=({id:20849,ln:212}) id=l212><div class="dl_wrapper"><a name=line212 onclick='overload_click(this)' class="a_ln">212<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">avoid such a problem.
</div></div></div><div class="div_line"  data-info=({id:20850,ln:213}) id=l213><div class="dl_wrapper"><a name=line213 onclick='overload_click(this)' class="a_ln">213<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:20851,ln:214}) id=l214><div class="dl_wrapper"><a name=line214 onclick='overload_click(this)' class="a_ln">214<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.RS 8
</div></div></div><div class="div_line"  data-info=({id:20852,ln:215}) id=l215><div class="dl_wrapper"><a name=line215 onclick='overload_click(this)' class="a_ln">215<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">CLASS Example {
</div></div></div><div class="div_line"  data-info=({id:20853,ln:216}) id=l216><div class="dl_wrapper"><a name=line216 onclick='overload_click(this)' class="a_ln">216<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.br
</div></div></div><div class="div_line"  data-info=({id:20854,ln:217}) id=l217><div class="dl_wrapper"><a name=line217 onclick='overload_click(this)' class="a_ln">217<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">    // your content here
</div></div></div><div class="div_line"  data-info=({id:20855,ln:218}) id=l218><div class="dl_wrapper"><a name=line218 onclick='overload_click(this)' class="a_ln">218<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.br
</div></div></div><div class="div_line"  data-info=({id:20856,ln:219}) id=l219><div class="dl_wrapper"><a name=line219 onclick='overload_click(this)' class="a_ln">219<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">};
</div></div></div><div class="div_line"  data-info=({id:20857,ln:220}) id=l220><div class="dl_wrapper"><a name=line220 onclick='overload_click(this)' class="a_ln">220<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.RE
</div></div></div><div class="div_line"  data-info=({id:20858,ln:221}) id=l221><div class="dl_wrapper"><a name=line221 onclick='overload_click(this)' class="a_ln">221<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:20859,ln:222}) id=l222><div class="dl_wrapper"><a name=line222 onclick='overload_click(this)' class="a_ln">222<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.IP
</div></div></div><div class="div_line"  data-info=({id:20860,ln:223}) id=l223><div class="dl_wrapper"><a name=line223 onclick='overload_click(this)' class="a_ln">223<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">The example above uses "CLASS" as a preprocessor macro which expands to
</div></div></div><div class="div_line"  data-info=({id:20861,ln:224}) id=l224><div class="dl_wrapper"><a name=line224 onclick='overload_click(this)' class="a_ln">224<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">something different for each platform. For instance CLASS may be defined as
</div></div></div><div class="div_line"  data-info=({id:20862,ln:225}) id=l225><div class="dl_wrapper"><a name=line225 onclick='overload_click(this)' class="a_ln">225<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">"class __declspec(dllexport)" on Win32 platforms and simply "class" on UNIX.
</div></div></div><div class="div_line"  data-info=({id:20863,ln:226}) id=l226><div class="dl_wrapper"><a name=line226 onclick='overload_click(this)' class="a_ln">226<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">Normally, the absence of the C++ keyword "class" would cause the source file
</div></div></div><div class="div_line"  data-info=({id:20864,ln:227}) id=l227><div class="dl_wrapper"><a name=line227 onclick='overload_click(this)' class="a_ln">227<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">to be incorrectly parsed. Correct behavior can be restored by specifying
</div></div></div><div class="div_line"  data-info=({id:20865,ln:228}) id=l228><div class="dl_wrapper"><a name=line228 onclick='overload_click(this)' class="a_ln">228<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">\fB\-I\fP \fICLASS=class\fP.
</div></div></div><div class="div_line"  data-info=({id:20866,ln:229}) id=l229><div class="dl_wrapper"><a name=line229 onclick='overload_click(this)' class="a_ln">229<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:20867,ln:230}) id=l230><div class="dl_wrapper"><a name=line230 onclick='overload_click(this)' class="a_ln">230<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.TP 5
</div></div></div><div class="div_line"  data-info=({id:20868,ln:231}) id=l231><div class="dl_wrapper"><a name=line231 onclick='overload_click(this)' class="a_ln">231<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.BI \-L " file"
</div></div></div><div class="div_line"  data-info=({id:20869,ln:232}) id=l232><div class="dl_wrapper"><a name=line232 onclick='overload_click(this)' class="a_ln">232<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">Read from \fIfile\fP a list of file names for which tags should be generated.
</div></div></div><div class="div_line"  data-info=({id:20870,ln:233}) id=l233><div class="dl_wrapper"><a name=line233 onclick='overload_click(this)' class="a_ln">233<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">If \fIfile\fP is specified as "\-", then file names are read from standard
</div></div></div><div class="div_line"  data-info=({id:20871,ln:234}) id=l234><div class="dl_wrapper"><a name=line234 onclick='overload_click(this)' class="a_ln">234<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">input. File names read using this option are processed following file names
</div></div></div><div class="div_line"  data-info=({id:20872,ln:235}) id=l235><div class="dl_wrapper"><a name=line235 onclick='overload_click(this)' class="a_ln">235<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">appearing on the command line. Options are also accepted in this input. If
</div></div></div><div class="div_line"  data-info=({id:20873,ln:236}) id=l236><div class="dl_wrapper"><a name=line236 onclick='overload_click(this)' class="a_ln">236<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">this option is specified more than once, only the last will apply. \fBNote:\fP
</div></div></div><div class="div_line"  data-info=({id:20874,ln:237}) id=l237><div class="dl_wrapper"><a name=line237 onclick='overload_click(this)' class="a_ln">237<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">\fIfile\fP is read in line-oriented mode, where a new line is the only
</div></div></div><div class="div_line"  data-info=({id:20875,ln:238}) id=l238><div class="dl_wrapper"><a name=line238 onclick='overload_click(this)' class="a_ln">238<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">delimiter and non-trailing white space is considered significant, in order
</div></div></div><div class="div_line"  data-info=({id:20876,ln:239}) id=l239><div class="dl_wrapper"><a name=line239 onclick='overload_click(this)' class="a_ln">239<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">that file names containing spaces may be supplied (however, trailing white
</div></div></div><div class="div_line"  data-info=({id:20877,ln:240}) id=l240><div class="dl_wrapper"><a name=line240 onclick='overload_click(this)' class="a_ln">240<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">space is stripped from lines); this can affect how options are parsed if
</div></div></div><div class="div_line"  data-info=({id:20878,ln:241}) id=l241><div class="dl_wrapper"><a name=line241 onclick='overload_click(this)' class="a_ln">241<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">included in the input.
</div></div></div><div class="div_line"  data-info=({id:20879,ln:242}) id=l242><div class="dl_wrapper"><a name=line242 onclick='overload_click(this)' class="a_ln">242<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:20880,ln:243}) id=l243><div class="dl_wrapper"><a name=line243 onclick='overload_click(this)' class="a_ln">243<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.TP 5
</div></div></div><div class="div_line"  data-info=({id:20881,ln:244}) id=l244><div class="dl_wrapper"><a name=line244 onclick='overload_click(this)' class="a_ln">244<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.B \-n
</div></div></div><div class="div_line"  data-info=({id:20882,ln:245}) id=l245><div class="dl_wrapper"><a name=line245 onclick='overload_click(this)' class="a_ln">245<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">Equivalent to \fB\-\-excmd\fP=\fInumber\fP.
</div></div></div><div class="div_line"  data-info=({id:20883,ln:246}) id=l246><div class="dl_wrapper"><a name=line246 onclick='overload_click(this)' class="a_ln">246<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:20884,ln:247}) id=l247><div class="dl_wrapper"><a name=line247 onclick='overload_click(this)' class="a_ln">247<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.TP 5
</div></div></div><div class="div_line"  data-info=({id:20885,ln:248}) id=l248><div class="dl_wrapper"><a name=line248 onclick='overload_click(this)' class="a_ln">248<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.B \-N
</div></div></div><div class="div_line"  data-info=({id:20886,ln:249}) id=l249><div class="dl_wrapper"><a name=line249 onclick='overload_click(this)' class="a_ln">249<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">Equivalent to \fB\-\-excmd\fP=\fIpattern\fP.
</div></div></div><div class="div_line"  data-info=({id:20887,ln:250}) id=l250><div class="dl_wrapper"><a name=line250 onclick='overload_click(this)' class="a_ln">250<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:20888,ln:251}) id=l251><div class="dl_wrapper"><a name=line251 onclick='overload_click(this)' class="a_ln">251<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.TP 5
</div></div></div><div class="div_line"  data-info=({id:20889,ln:252}) id=l252><div class="dl_wrapper"><a name=line252 onclick='overload_click(this)' class="a_ln">252<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.BI \-o " tagfile"
</div></div></div><div class="div_line"  data-info=({id:20890,ln:253}) id=l253><div class="dl_wrapper"><a name=line253 onclick='overload_click(this)' class="a_ln">253<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">Equivalent to \fB\-f\fP \fItagfile\fP.
</div></div></div><div class="div_line"  data-info=({id:20891,ln:254}) id=l254><div class="dl_wrapper"><a name=line254 onclick='overload_click(this)' class="a_ln">254<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:20892,ln:255}) id=l255><div class="dl_wrapper"><a name=line255 onclick='overload_click(this)' class="a_ln">255<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.TP 5
</div></div></div><div class="div_line"  data-info=({id:20893,ln:256}) id=l256><div class="dl_wrapper"><a name=line256 onclick='overload_click(this)' class="a_ln">256<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.B \-R
</div></div></div><div class="div_line"  data-info=({id:20894,ln:257}) id=l257><div class="dl_wrapper"><a name=line257 onclick='overload_click(this)' class="a_ln">257<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">Equivalent to \fB\-\-recurse\fP.
</div></div></div><div class="div_line"  data-info=({id:20895,ln:258}) id=l258><div class="dl_wrapper"><a name=line258 onclick='overload_click(this)' class="a_ln">258<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:20896,ln:259}) id=l259><div class="dl_wrapper"><a name=line259 onclick='overload_click(this)' class="a_ln">259<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.TP 5
</div></div></div><div class="div_line"  data-info=({id:20897,ln:260}) id=l260><div class="dl_wrapper"><a name=line260 onclick='overload_click(this)' class="a_ln">260<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.B \-u
</div></div></div><div class="div_line"  data-info=({id:20898,ln:261}) id=l261><div class="dl_wrapper"><a name=line261 onclick='overload_click(this)' class="a_ln">261<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">Equivalent to \fB\-\-sort\fP=\fIno\fP (i.e. "unsorted").
</div></div></div><div class="div_line"  data-info=({id:20899,ln:262}) id=l262><div class="dl_wrapper"><a name=line262 onclick='overload_click(this)' class="a_ln">262<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:20900,ln:263}) id=l263><div class="dl_wrapper"><a name=line263 onclick='overload_click(this)' class="a_ln">263<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.TP 5
</div></div></div><div class="div_line"  data-info=({id:20901,ln:264}) id=l264><div class="dl_wrapper"><a name=line264 onclick='overload_click(this)' class="a_ln">264<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.B \-V
</div></div></div><div class="div_line"  data-info=({id:20902,ln:265}) id=l265><div class="dl_wrapper"><a name=line265 onclick='overload_click(this)' class="a_ln">265<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">Equivalent to \fB\-\-verbose\fP.
</div></div></div><div class="div_line"  data-info=({id:20903,ln:266}) id=l266><div class="dl_wrapper"><a name=line266 onclick='overload_click(this)' class="a_ln">266<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:20904,ln:267}) id=l267><div class="dl_wrapper"><a name=line267 onclick='overload_click(this)' class="a_ln">267<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.TP 5
</div></div></div><div class="div_line"  data-info=({id:20905,ln:268}) id=l268><div class="dl_wrapper"><a name=line268 onclick='overload_click(this)' class="a_ln">268<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.B \-w
</div></div></div><div class="div_line"  data-info=({id:20906,ln:269}) id=l269><div class="dl_wrapper"><a name=line269 onclick='overload_click(this)' class="a_ln">269<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">This option is silently ignored for backward-compatibility with the ctags
</div></div></div><div class="div_line"  data-info=({id:20907,ln:270}) id=l270><div class="dl_wrapper"><a name=line270 onclick='overload_click(this)' class="a_ln">270<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">of SVR4 Unix.
</div></div></div><div class="div_line"  data-info=({id:20908,ln:271}) id=l271><div class="dl_wrapper"><a name=line271 onclick='overload_click(this)' class="a_ln">271<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:20909,ln:272}) id=l272><div class="dl_wrapper"><a name=line272 onclick='overload_click(this)' class="a_ln">272<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.TP 5
</div></div></div><div class="div_line"  data-info=({id:20910,ln:273}) id=l273><div class="dl_wrapper"><a name=line273 onclick='overload_click(this)' class="a_ln">273<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.B \-x
</div></div></div><div class="div_line"  data-info=({id:20911,ln:274}) id=l274><div class="dl_wrapper"><a name=line274 onclick='overload_click(this)' class="a_ln">274<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">Print a tabular, human-readable cross reference (xref) file to standard output
</div></div></div><div class="div_line"  data-info=({id:20912,ln:275}) id=l275><div class="dl_wrapper"><a name=line275 onclick='overload_click(this)' class="a_ln">275<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">instead of generating a tag file. The information contained in the output
</div></div></div><div class="div_line"  data-info=({id:20913,ln:276}) id=l276><div class="dl_wrapper"><a name=line276 onclick='overload_click(this)' class="a_ln">276<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">includes: the tag name; the kind of tag; the line number, file name, and
</div></div></div><div class="div_line"  data-info=({id:20914,ln:277}) id=l277><div class="dl_wrapper"><a name=line277 onclick='overload_click(this)' class="a_ln">277<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">source line (with extra white space condensed) of the file which defines the
</div></div></div><div class="div_line"  data-info=({id:20915,ln:278}) id=l278><div class="dl_wrapper"><a name=line278 onclick='overload_click(this)' class="a_ln">278<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">tag. No tag file is written and all options affecting tag file output will be
</div></div></div><div class="div_line"  data-info=({id:20916,ln:279}) id=l279><div class="dl_wrapper"><a name=line279 onclick='overload_click(this)' class="a_ln">279<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">ignored. Example applications for this feature are generating a listing of all
</div></div></div><div class="div_line"  data-info=({id:20917,ln:280}) id=l280><div class="dl_wrapper"><a name=line280 onclick='overload_click(this)' class="a_ln">280<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">functions located in a source file (e.g. \fBctags \-x \-\-c\-kinds\fP=\fIf\fP
</div></div></div><div class="div_line"  data-info=({id:20918,ln:281}) id=l281><div class="dl_wrapper"><a name=line281 onclick='overload_click(this)' class="a_ln">281<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">\fIfile\fP), or generating a list of all externally visible global variables
</div></div></div><div class="div_line"  data-info=({id:20919,ln:282}) id=l282><div class="dl_wrapper"><a name=line282 onclick='overload_click(this)' class="a_ln">282<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">located in a source file (e.g. \fBctags \-x \-\-c\-kinds\fP=\fIv\fP
</div></div></div><div class="div_line"  data-info=({id:20920,ln:283}) id=l283><div class="dl_wrapper"><a name=line283 onclick='overload_click(this)' class="a_ln">283<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">\fB\-\-file\-scope\fP=\fIno file\fP). This option must appear before the first
</div></div></div><div class="div_line"  data-info=({id:20921,ln:284}) id=l284><div class="dl_wrapper"><a name=line284 onclick='overload_click(this)' class="a_ln">284<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">file name.
</div></div></div><div class="div_line"  data-info=({id:20922,ln:285}) id=l285><div class="dl_wrapper"><a name=line285 onclick='overload_click(this)' class="a_ln">285<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:20923,ln:286}) id=l286><div class="dl_wrapper"><a name=line286 onclick='overload_click(this)' class="a_ln">286<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.TP 5
</div></div></div><div class="div_line"  data-info=({id:20924,ln:287}) id=l287><div class="dl_wrapper"><a name=line287 onclick='overload_click(this)' class="a_ln">287<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">\fB\-\-append\fP[=\fIyes\fP|\fIno\fP]
</div></div></div><div class="div_line"  data-info=({id:20925,ln:288}) id=l288><div class="dl_wrapper"><a name=line288 onclick='overload_click(this)' class="a_ln">288<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">Indicates whether tags generated from the specified files should be appended
</div></div></div><div class="div_line"  data-info=({id:20926,ln:289}) id=l289><div class="dl_wrapper"><a name=line289 onclick='overload_click(this)' class="a_ln">289<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">to those already present in the tag file or should replace them. This option
</div></div></div><div class="div_line"  data-info=({id:20927,ln:290}) id=l290><div class="dl_wrapper"><a name=line290 onclick='overload_click(this)' class="a_ln">290<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">is off by default. This option must appear before the first file name.
</div></div></div><div class="div_line"  data-info=({id:20928,ln:291}) id=l291><div class="dl_wrapper"><a name=line291 onclick='overload_click(this)' class="a_ln">291<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:20929,ln:292}) id=l292><div class="dl_wrapper"><a name=line292 onclick='overload_click(this)' class="a_ln">292<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.TP 5
</div></div></div><div class="div_line"  data-info=({id:20930,ln:293}) id=l293><div class="dl_wrapper"><a name=line293 onclick='overload_click(this)' class="a_ln">293<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">\fB\-\-etags\-include\fP=\fIfile\fP
</div></div></div><div class="div_line"  data-info=({id:20931,ln:294}) id=l294><div class="dl_wrapper"><a name=line294 onclick='overload_click(this)' class="a_ln">294<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">Include a reference to \fIfile\fP in the tag file. This option may be
</div></div></div><div class="div_line"  data-info=({id:20932,ln:295}) id=l295><div class="dl_wrapper"><a name=line295 onclick='overload_click(this)' class="a_ln">295<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">specified as many times as desired. This supports Emacs' capability to use a
</div></div></div><div class="div_line"  data-info=({id:20933,ln:296}) id=l296><div class="dl_wrapper"><a name=line296 onclick='overload_click(this)' class="a_ln">296<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">tag file which "includes" other tag files. [Available only in etags mode]
</div></div></div><div class="div_line"  data-info=({id:20934,ln:297}) id=l297><div class="dl_wrapper"><a name=line297 onclick='overload_click(this)' class="a_ln">297<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:20935,ln:298}) id=l298><div class="dl_wrapper"><a name=line298 onclick='overload_click(this)' class="a_ln">298<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.TP 5
</div></div></div><div class="div_line"  data-info=({id:20936,ln:299}) id=l299><div class="dl_wrapper"><a name=line299 onclick='overload_click(this)' class="a_ln">299<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">\fB\-\-exclude\fP=[\fIpattern\fP]
</div></div></div><div class="div_line"  data-info=({id:20937,ln:300}) id=l300><div class="dl_wrapper"><a name=line300 onclick='overload_click(this)' class="a_ln">300<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">Add \fIpattern\fP to a list of excluded files and directories. This option
</div></div></div><div class="div_line"  data-info=({id:20938,ln:301}) id=l301><div class="dl_wrapper"><a name=line301 onclick='overload_click(this)' class="a_ln">301<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">may be specified as many times as desired. For each file name considered by
</div></div></div><div class="div_line"  data-info=({id:20939,ln:302}) id=l302><div class="dl_wrapper"><a name=line302 onclick='overload_click(this)' class="a_ln">302<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">\fBctags\fP, each \fIpattern\fP specified using this option will be compared
</div></div></div><div class="div_line"  data-info=({id:20940,ln:303}) id=l303><div class="dl_wrapper"><a name=line303 onclick='overload_click(this)' class="a_ln">303<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">against both the complete path (e.g. some/path/base.ext) and the base name
</div></div></div><div class="div_line"  data-info=({id:20941,ln:304}) id=l304><div class="dl_wrapper"><a name=line304 onclick='overload_click(this)' class="a_ln">304<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">(e.g. base.ext) of the file, thus allowing patterns which match a given file
</div></div></div><div class="div_line"  data-info=({id:20942,ln:305}) id=l305><div class="dl_wrapper"><a name=line305 onclick='overload_click(this)' class="a_ln">305<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">name irrespective of its path, or match only a specific path. If appropriate
</div></div></div><div class="div_line"  data-info=({id:20943,ln:306}) id=l306><div class="dl_wrapper"><a name=line306 onclick='overload_click(this)' class="a_ln">306<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">support is available from the runtime library of your C compiler, then
</div></div></div><div class="div_line"  data-info=({id:20944,ln:307}) id=l307><div class="dl_wrapper"><a name=line307 onclick='overload_click(this)' class="a_ln">307<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">\fIpattern\fP may contain the usual shell wildcards (not regular expressions)
</div></div></div><div class="div_line"  data-info=({id:20945,ln:308}) id=l308><div class="dl_wrapper"><a name=line308 onclick='overload_click(this)' class="a_ln">308<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">common on Unix (be sure to quote the option parameter to protect the wildcards
</div></div></div><div class="div_line"  data-info=({id:20946,ln:309}) id=l309><div class="dl_wrapper"><a name=line309 onclick='overload_click(this)' class="a_ln">309<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">from being expanded by the shell before being passed to \fBctags\fP; also be
</div></div></div><div class="div_line"  data-info=({id:20947,ln:310}) id=l310><div class="dl_wrapper"><a name=line310 onclick='overload_click(this)' class="a_ln">310<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">aware that wildcards can match the slash character, '/'). You can determine if
</div></div></div><div class="div_line"  data-info=({id:20948,ln:311}) id=l311><div class="dl_wrapper"><a name=line311 onclick='overload_click(this)' class="a_ln">311<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">shell wildcards are available on your platform by examining the output of the
</div></div></div><div class="div_line"  data-info=({id:20949,ln:312}) id=l312><div class="dl_wrapper"><a name=line312 onclick='overload_click(this)' class="a_ln">312<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">\fB\-\-version\fP option, which will include "+wildcards" in the compiled
</div></div></div><div class="div_line"  data-info=({id:20950,ln:313}) id=l313><div class="dl_wrapper"><a name=line313 onclick='overload_click(this)' class="a_ln">313<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">feature list; otherwise, \fIpattern\fP is matched against file names using a
</div></div></div><div class="div_line"  data-info=({id:20951,ln:314}) id=l314><div class="dl_wrapper"><a name=line314 onclick='overload_click(this)' class="a_ln">314<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">simple textual comparison.
</div></div></div><div class="div_line"  data-info=({id:20952,ln:315}) id=l315><div class="dl_wrapper"><a name=line315 onclick='overload_click(this)' class="a_ln">315<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:20953,ln:316}) id=l316><div class="dl_wrapper"><a name=line316 onclick='overload_click(this)' class="a_ln">316<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">If \fIpattern\fP begins with the character '@', then the rest of the string
</div></div></div><div class="div_line"  data-info=({id:20954,ln:317}) id=l317><div class="dl_wrapper"><a name=line317 onclick='overload_click(this)' class="a_ln">317<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">is interpreted as a file name from which to read exclusion patterns, one per
</div></div></div><div class="div_line"  data-info=({id:20955,ln:318}) id=l318><div class="dl_wrapper"><a name=line318 onclick='overload_click(this)' class="a_ln">318<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">line. If \fIpattern\fP is empty, the list of excluded patterns is cleared.
</div></div></div><div class="div_line"  data-info=({id:20956,ln:319}) id=l319><div class="dl_wrapper"><a name=line319 onclick='overload_click(this)' class="a_ln">319<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">Note that at program startup, the default exclude list contains "EIFGEN",
</div></div></div><div class="div_line"  data-info=({id:20957,ln:320}) id=l320><div class="dl_wrapper"><a name=line320 onclick='overload_click(this)' class="a_ln">320<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">"SCCS", "RCS", and "CVS", which are names of directories for which it is
</div></div></div><div class="div_line"  data-info=({id:20958,ln:321}) id=l321><div class="dl_wrapper"><a name=line321 onclick='overload_click(this)' class="a_ln">321<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">generally not desirable to descend while processing the \fB\-\-recurse\fP
</div></div></div><div class="div_line"  data-info=({id:20959,ln:322}) id=l322><div class="dl_wrapper"><a name=line322 onclick='overload_click(this)' class="a_ln">322<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">option.
</div></div></div><div class="div_line"  data-info=({id:20960,ln:323}) id=l323><div class="dl_wrapper"><a name=line323 onclick='overload_click(this)' class="a_ln">323<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:20961,ln:324}) id=l324><div class="dl_wrapper"><a name=line324 onclick='overload_click(this)' class="a_ln">324<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.TP 5
</div></div></div><div class="div_line"  data-info=({id:20962,ln:325}) id=l325><div class="dl_wrapper"><a name=line325 onclick='overload_click(this)' class="a_ln">325<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">\fB\-\-excmd\fP=\fItype\fP
</div></div></div><div class="div_line"  data-info=({id:20963,ln:326}) id=l326><div class="dl_wrapper"><a name=line326 onclick='overload_click(this)' class="a_ln">326<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">Determines the type of EX command used to locate tags in the source file.
</div></div></div><div class="div_line"  data-info=({id:20964,ln:327}) id=l327><div class="dl_wrapper"><a name=line327 onclick='overload_click(this)' class="a_ln">327<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">[Ignored in etags mode]
</div></div></div><div class="div_line"  data-info=({id:20965,ln:328}) id=l328><div class="dl_wrapper"><a name=line328 onclick='overload_click(this)' class="a_ln">328<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:20966,ln:329}) id=l329><div class="dl_wrapper"><a name=line329 onclick='overload_click(this)' class="a_ln">329<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">The valid values for \fItype\fP (either the entire word or the first letter is
</div></div></div><div class="div_line"  data-info=({id:20967,ln:330}) id=l330><div class="dl_wrapper"><a name=line330 onclick='overload_click(this)' class="a_ln">330<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">accepted) are:
</div></div></div><div class="div_line"  data-info=({id:20968,ln:331}) id=l331><div class="dl_wrapper"><a name=line331 onclick='overload_click(this)' class="a_ln">331<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:20969,ln:332}) id=l332><div class="dl_wrapper"><a name=line332 onclick='overload_click(this)' class="a_ln">332<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.RS 5
</div></div></div><div class="div_line"  data-info=({id:20970,ln:333}) id=l333><div class="dl_wrapper"><a name=line333 onclick='overload_click(this)' class="a_ln">333<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.TP 9
</div></div></div><div class="div_line"  data-info=({id:20971,ln:334}) id=l334><div class="dl_wrapper"><a name=line334 onclick='overload_click(this)' class="a_ln">334<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.I number
</div></div></div><div class="div_line"  data-info=({id:20972,ln:335}) id=l335><div class="dl_wrapper"><a name=line335 onclick='overload_click(this)' class="a_ln">335<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">Use only line numbers in the tag file for locating tags. This has four
</div></div></div><div class="div_line"  data-info=({id:20973,ln:336}) id=l336><div class="dl_wrapper"><a name=line336 onclick='overload_click(this)' class="a_ln">336<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">advantages:
</div></div></div><div class="div_line"  data-info=({id:20974,ln:337}) id=l337><div class="dl_wrapper"><a name=line337 onclick='overload_click(this)' class="a_ln">337<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.PD 0
</div></div></div><div class="div_line"  data-info=({id:20975,ln:338}) id=l338><div class="dl_wrapper"><a name=line338 onclick='overload_click(this)' class="a_ln">338<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.RS 9
</div></div></div><div class="div_line"  data-info=({id:20976,ln:339}) id=l339><div class="dl_wrapper"><a name=line339 onclick='overload_click(this)' class="a_ln">339<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.TP 4
</div></div></div><div class="div_line"  data-info=({id:20977,ln:340}) id=l340><div class="dl_wrapper"><a name=line340 onclick='overload_click(this)' class="a_ln">340<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">1.
</div></div></div><div class="div_line"  data-info=({id:20978,ln:341}) id=l341><div class="dl_wrapper"><a name=line341 onclick='overload_click(this)' class="a_ln">341<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">Significantly reduces the size of the resulting tag file.
</div></div></div><div class="div_line"  data-info=({id:20979,ln:342}) id=l342><div class="dl_wrapper"><a name=line342 onclick='overload_click(this)' class="a_ln">342<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.TP 4
</div></div></div><div class="div_line"  data-info=({id:20980,ln:343}) id=l343><div class="dl_wrapper"><a name=line343 onclick='overload_click(this)' class="a_ln">343<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">2.
</div></div></div><div class="div_line"  data-info=({id:20981,ln:344}) id=l344><div class="dl_wrapper"><a name=line344 onclick='overload_click(this)' class="a_ln">344<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">Eliminates failures to find tags because the line defining the tag has
</div></div></div><div class="div_line"  data-info=({id:20982,ln:345}) id=l345><div class="dl_wrapper"><a name=line345 onclick='overload_click(this)' class="a_ln">345<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">changed, causing the pattern match to fail (note that some editors, such as
</div></div></div><div class="div_line"  data-info=({id:20983,ln:346}) id=l346><div class="dl_wrapper"><a name=line346 onclick='overload_click(this)' class="a_ln">346<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">\fBvim\fP, are able to recover in many such instances).
</div></div></div><div class="div_line"  data-info=({id:20984,ln:347}) id=l347><div class="dl_wrapper"><a name=line347 onclick='overload_click(this)' class="a_ln">347<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.TP 4
</div></div></div><div class="div_line"  data-info=({id:20985,ln:348}) id=l348><div class="dl_wrapper"><a name=line348 onclick='overload_click(this)' class="a_ln">348<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">3.
</div></div></div><div class="div_line"  data-info=({id:20986,ln:349}) id=l349><div class="dl_wrapper"><a name=line349 onclick='overload_click(this)' class="a_ln">349<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">Eliminates finding identical matching, but incorrect, source lines (see
</div></div></div><div class="div_line"  data-info=({id:20987,ln:350}) id=l350><div class="dl_wrapper"><a name=line350 onclick='overload_click(this)' class="a_ln">350<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">\fBBUGS\fP, below).
</div></div></div><div class="div_line"  data-info=({id:20988,ln:351}) id=l351><div class="dl_wrapper"><a name=line351 onclick='overload_click(this)' class="a_ln">351<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.TP 4
</div></div></div><div class="div_line"  data-info=({id:20989,ln:352}) id=l352><div class="dl_wrapper"><a name=line352 onclick='overload_click(this)' class="a_ln">352<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">4.
</div></div></div><div class="div_line"  data-info=({id:20990,ln:353}) id=l353><div class="dl_wrapper"><a name=line353 onclick='overload_click(this)' class="a_ln">353<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">Retains separate entries in the tag file for lines which are identical in
</div></div></div><div class="div_line"  data-info=({id:20991,ln:354}) id=l354><div class="dl_wrapper"><a name=line354 onclick='overload_click(this)' class="a_ln">354<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">content. In \fIpattern\fP mode, duplicate entries are dropped because the
</div></div></div><div class="div_line"  data-info=({id:20992,ln:355}) id=l355><div class="dl_wrapper"><a name=line355 onclick='overload_click(this)' class="a_ln">355<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">search patterns they generate are identical, making the duplicate entries
</div></div></div><div class="div_line"  data-info=({id:20993,ln:356}) id=l356><div class="dl_wrapper"><a name=line356 onclick='overload_click(this)' class="a_ln">356<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">useless.
</div></div></div><div class="div_line"  data-info=({id:20994,ln:357}) id=l357><div class="dl_wrapper"><a name=line357 onclick='overload_click(this)' class="a_ln">357<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.RE
</div></div></div><div class="div_line"  data-info=({id:20995,ln:358}) id=l358><div class="dl_wrapper"><a name=line358 onclick='overload_click(this)' class="a_ln">358<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.PD 1
</div></div></div><div class="div_line"  data-info=({id:20996,ln:359}) id=l359><div class="dl_wrapper"><a name=line359 onclick='overload_click(this)' class="a_ln">359<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:20997,ln:360}) id=l360><div class="dl_wrapper"><a name=line360 onclick='overload_click(this)' class="a_ln">360<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.IP
</div></div></div><div class="div_line"  data-info=({id:20998,ln:361}) id=l361><div class="dl_wrapper"><a name=line361 onclick='overload_click(this)' class="a_ln">361<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">However, this option has one significant drawback: changes to the source files
</div></div></div><div class="div_line"  data-info=({id:20999,ln:362}) id=l362><div class="dl_wrapper"><a name=line362 onclick='overload_click(this)' class="a_ln">362<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">can cause the line numbers recorded in the tag file to no longer correspond
</div></div></div><div class="div_line"  data-info=({id:21000,ln:363}) id=l363><div class="dl_wrapper"><a name=line363 onclick='overload_click(this)' class="a_ln">363<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">to the lines in the source file, causing jumps to some tags to miss the target
</div></div></div><div class="div_line"  data-info=({id:21001,ln:364}) id=l364><div class="dl_wrapper"><a name=line364 onclick='overload_click(this)' class="a_ln">364<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">definition by one or more lines. Basically, this option is best used when the
</div></div></div><div class="div_line"  data-info=({id:21002,ln:365}) id=l365><div class="dl_wrapper"><a name=line365 onclick='overload_click(this)' class="a_ln">365<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">source code to which it is applied is not subject to change. Selecting this
</div></div></div><div class="div_line"  data-info=({id:21003,ln:366}) id=l366><div class="dl_wrapper"><a name=line366 onclick='overload_click(this)' class="a_ln">366<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">option type causes the following options to be ignored: \fB\-BF\fP.
</div></div></div><div class="div_line"  data-info=({id:21004,ln:367}) id=l367><div class="dl_wrapper"><a name=line367 onclick='overload_click(this)' class="a_ln">367<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:21005,ln:368}) id=l368><div class="dl_wrapper"><a name=line368 onclick='overload_click(this)' class="a_ln">368<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.TP 9
</div></div></div><div class="div_line"  data-info=({id:21006,ln:369}) id=l369><div class="dl_wrapper"><a name=line369 onclick='overload_click(this)' class="a_ln">369<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.I pattern
</div></div></div><div class="div_line"  data-info=({id:21007,ln:370}) id=l370><div class="dl_wrapper"><a name=line370 onclick='overload_click(this)' class="a_ln">370<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">Use only search patterns for all tags, rather than the line numbers usually
</div></div></div><div class="div_line"  data-info=({id:21008,ln:371}) id=l371><div class="dl_wrapper"><a name=line371 onclick='overload_click(this)' class="a_ln">371<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">used for macro definitions. This has the advantage of not referencing obsolete
</div></div></div><div class="div_line"  data-info=({id:21009,ln:372}) id=l372><div class="dl_wrapper"><a name=line372 onclick='overload_click(this)' class="a_ln">372<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">line numbers when lines have been added or removed since the tag file was
</div></div></div><div class="div_line"  data-info=({id:21010,ln:373}) id=l373><div class="dl_wrapper"><a name=line373 onclick='overload_click(this)' class="a_ln">373<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">generated.
</div></div></div><div class="div_line"  data-info=({id:21011,ln:374}) id=l374><div class="dl_wrapper"><a name=line374 onclick='overload_click(this)' class="a_ln">374<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:21012,ln:375}) id=l375><div class="dl_wrapper"><a name=line375 onclick='overload_click(this)' class="a_ln">375<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.TP 9
</div></div></div><div class="div_line"  data-info=({id:21013,ln:376}) id=l376><div class="dl_wrapper"><a name=line376 onclick='overload_click(this)' class="a_ln">376<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.I mixed
</div></div></div><div class="div_line"  data-info=({id:21014,ln:377}) id=l377><div class="dl_wrapper"><a name=line377 onclick='overload_click(this)' class="a_ln">377<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">In this mode, patterns are generally used with a few exceptions. For C, line
</div></div></div><div class="div_line"  data-info=({id:21015,ln:378}) id=l378><div class="dl_wrapper"><a name=line378 onclick='overload_click(this)' class="a_ln">378<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">numbers are used for macro definition tags. This was the default format
</div></div></div><div class="div_line"  data-info=({id:21016,ln:379}) id=l379><div class="dl_wrapper"><a name=line379 onclick='overload_click(this)' class="a_ln">379<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">generated by the original \fBctags\fP and is, therefore, retained as the
</div></div></div><div class="div_line"  data-info=({id:21017,ln:380}) id=l380><div class="dl_wrapper"><a name=line380 onclick='overload_click(this)' class="a_ln">380<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">default for this option. For Fortran, line numbers are used for common blocks
</div></div></div><div class="div_line"  data-info=({id:21018,ln:381}) id=l381><div class="dl_wrapper"><a name=line381 onclick='overload_click(this)' class="a_ln">381<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">because their corresponding source lines are generally identical, making
</div></div></div><div class="div_line"  data-info=({id:21019,ln:382}) id=l382><div class="dl_wrapper"><a name=line382 onclick='overload_click(this)' class="a_ln">382<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">pattern searches useless for finding all matches.
</div></div></div><div class="div_line"  data-info=({id:21020,ln:383}) id=l383><div class="dl_wrapper"><a name=line383 onclick='overload_click(this)' class="a_ln">383<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.RE
</div></div></div><div class="div_line"  data-info=({id:21021,ln:384}) id=l384><div class="dl_wrapper"><a name=line384 onclick='overload_click(this)' class="a_ln">384<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:21022,ln:385}) id=l385><div class="dl_wrapper"><a name=line385 onclick='overload_click(this)' class="a_ln">385<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.TP 5
</div></div></div><div class="div_line"  data-info=({id:21023,ln:386}) id=l386><div class="dl_wrapper"><a name=line386 onclick='overload_click(this)' class="a_ln">386<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">\fB\-\-extra\fP=\fI[+|\-]flags\fP
</div></div></div><div class="div_line"  data-info=({id:21024,ln:387}) id=l387><div class="dl_wrapper"><a name=line387 onclick='overload_click(this)' class="a_ln">387<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">Specifies whether to include extra tag entries for certain kinds of
</div></div></div><div class="div_line"  data-info=({id:21025,ln:388}) id=l388><div class="dl_wrapper"><a name=line388 onclick='overload_click(this)' class="a_ln">388<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">information. The parameter \fIflags\fP is a set of one-letter flags, each
</div></div></div><div class="div_line"  data-info=({id:21026,ln:389}) id=l389><div class="dl_wrapper"><a name=line389 onclick='overload_click(this)' class="a_ln">389<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">representing one kind of extra tag entry to include in the tag file. If
</div></div></div><div class="div_line"  data-info=({id:21027,ln:390}) id=l390><div class="dl_wrapper"><a name=line390 onclick='overload_click(this)' class="a_ln">390<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">\fIflags\fP is preceded by by either the '+' or '\-' character, the effect of
</div></div></div><div class="div_line"  data-info=({id:21028,ln:391}) id=l391><div class="dl_wrapper"><a name=line391 onclick='overload_click(this)' class="a_ln">391<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">each flag is added to, or removed from, those currently enabled; otherwise the
</div></div></div><div class="div_line"  data-info=({id:21029,ln:392}) id=l392><div class="dl_wrapper"><a name=line392 onclick='overload_click(this)' class="a_ln">392<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">flags replace any current settings. The meaning of each flag is as follows:
</div></div></div><div class="div_line"  data-info=({id:21030,ln:393}) id=l393><div class="dl_wrapper"><a name=line393 onclick='overload_click(this)' class="a_ln">393<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:21031,ln:394}) id=l394><div class="dl_wrapper"><a name=line394 onclick='overload_click(this)' class="a_ln">394<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.PP
</div></div></div><div class="div_line"  data-info=({id:21032,ln:395}) id=l395><div class="dl_wrapper"><a name=line395 onclick='overload_click(this)' class="a_ln">395<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.RS 8
</div></div></div><div class="div_line"  data-info=({id:21033,ln:396}) id=l396><div class="dl_wrapper"><a name=line396 onclick='overload_click(this)' class="a_ln">396<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.TP 4
</div></div></div><div class="div_line"  data-info=({id:21034,ln:397}) id=l397><div class="dl_wrapper"><a name=line397 onclick='overload_click(this)' class="a_ln">397<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.I f
</div></div></div><div class="div_line"  data-info=({id:21035,ln:398}) id=l398><div class="dl_wrapper"><a name=line398 onclick='overload_click(this)' class="a_ln">398<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">Include an entry for the base file name of every source file (e.g.
</div></div></div><div class="div_line"  data-info=({id:21036,ln:399}) id=l399><div class="dl_wrapper"><a name=line399 onclick='overload_click(this)' class="a_ln">399<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">"example.c"), which addresses the first line of the file.
</div></div></div><div class="div_line"  data-info=({id:21037,ln:400}) id=l400><div class="dl_wrapper"><a name=line400 onclick='overload_click(this)' class="a_ln">400<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.TP 4
</div></div></div><div class="div_line"  data-info=({id:21038,ln:401}) id=l401><div class="dl_wrapper"><a name=line401 onclick='overload_click(this)' class="a_ln">401<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.I q
</div></div></div><div class="div_line"  data-info=({id:21039,ln:402}) id=l402><div class="dl_wrapper"><a name=line402 onclick='overload_click(this)' class="a_ln">402<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">Include an extra class-qualified tag entry for each tag which is a member
</div></div></div><div class="div_line"  data-info=({id:21040,ln:403}) id=l403><div class="dl_wrapper"><a name=line403 onclick='overload_click(this)' class="a_ln">403<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">of a class (for languages for which this information is extracted; currently
</div></div></div><div class="div_line"  data-info=({id:21041,ln:404}) id=l404><div class="dl_wrapper"><a name=line404 onclick='overload_click(this)' class="a_ln">404<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">C++, Eiffel, and Java). The actual form of the qualified tag depends upon the
</div></div></div><div class="div_line"  data-info=({id:21042,ln:405}) id=l405><div class="dl_wrapper"><a name=line405 onclick='overload_click(this)' class="a_ln">405<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">language from which the tag was derived (using a form that is most natural for
</div></div></div><div class="div_line"  data-info=({id:21043,ln:406}) id=l406><div class="dl_wrapper"><a name=line406 onclick='overload_click(this)' class="a_ln">406<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">how qualified calls are specified in the language). For C++, it is in the form
</div></div></div><div class="div_line"  data-info=({id:21044,ln:407}) id=l407><div class="dl_wrapper"><a name=line407 onclick='overload_click(this)' class="a_ln">407<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">"class::member"; for Eiffel and Java, it is in the form "class.member". This
</div></div></div><div class="div_line"  data-info=({id:21045,ln:408}) id=l408><div class="dl_wrapper"><a name=line408 onclick='overload_click(this)' class="a_ln">408<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">may allow easier location of a specific tags when multiple occurrences of a
</div></div></div><div class="div_line"  data-info=({id:21046,ln:409}) id=l409><div class="dl_wrapper"><a name=line409 onclick='overload_click(this)' class="a_ln">409<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">tag name occur in the tag file. Note, however, that this could potentially
</div></div></div><div class="div_line"  data-info=({id:21047,ln:410}) id=l410><div class="dl_wrapper"><a name=line410 onclick='overload_click(this)' class="a_ln">410<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">more than double the size of the tag file.
</div></div></div><div class="div_line"  data-info=({id:21048,ln:411}) id=l411><div class="dl_wrapper"><a name=line411 onclick='overload_click(this)' class="a_ln">411<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.RE
</div></div></div><div class="div_line"  data-info=({id:21049,ln:412}) id=l412><div class="dl_wrapper"><a name=line412 onclick='overload_click(this)' class="a_ln">412<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:21050,ln:413}) id=l413><div class="dl_wrapper"><a name=line413 onclick='overload_click(this)' class="a_ln">413<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.TP 5
</div></div></div><div class="div_line"  data-info=({id:21051,ln:414}) id=l414><div class="dl_wrapper"><a name=line414 onclick='overload_click(this)' class="a_ln">414<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">\fB\-\-fields\fP=\fI[+|\-]flags\fP
</div></div></div><div class="div_line"  data-info=({id:21052,ln:415}) id=l415><div class="dl_wrapper"><a name=line415 onclick='overload_click(this)' class="a_ln">415<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">Specifies the available extension fields which are to be included in the
</div></div></div><div class="div_line"  data-info=({id:21053,ln:416}) id=l416><div class="dl_wrapper"><a name=line416 onclick='overload_click(this)' class="a_ln">416<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">entries of the tag file (see \fBTAG FILE FORMAT\fP, below, for more
</div></div></div><div class="div_line"  data-info=({id:21054,ln:417}) id=l417><div class="dl_wrapper"><a name=line417 onclick='overload_click(this)' class="a_ln">417<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">information). The parameter \fIflags\fP is a set of one-letter flags, each
</div></div></div><div class="div_line"  data-info=({id:21055,ln:418}) id=l418><div class="dl_wrapper"><a name=line418 onclick='overload_click(this)' class="a_ln">418<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">representing one type of extension field to include, with the following
</div></div></div><div class="div_line"  data-info=({id:21056,ln:419}) id=l419><div class="dl_wrapper"><a name=line419 onclick='overload_click(this)' class="a_ln">419<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">meanings (disabled by default unless indicated):
</div></div></div><div class="div_line"  data-info=({id:21057,ln:420}) id=l420><div class="dl_wrapper"><a name=line420 onclick='overload_click(this)' class="a_ln">420<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:21058,ln:421}) id=l421><div class="dl_wrapper"><a name=line421 onclick='overload_click(this)' class="a_ln">421<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.PP
</div></div></div><div class="div_line"  data-info=({id:21059,ln:422}) id=l422><div class="dl_wrapper"><a name=line422 onclick='overload_click(this)' class="a_ln">422<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.PD 0
</div></div></div><div class="div_line"  data-info=({id:21060,ln:423}) id=l423><div class="dl_wrapper"><a name=line423 onclick='overload_click(this)' class="a_ln">423<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.RS 8
</div></div></div><div class="div_line"  data-info=({id:21061,ln:424}) id=l424><div class="dl_wrapper"><a name=line424 onclick='overload_click(this)' class="a_ln">424<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.TP 4
</div></div></div><div class="div_line"  data-info=({id:21062,ln:425}) id=l425><div class="dl_wrapper"><a name=line425 onclick='overload_click(this)' class="a_ln">425<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.I a
</div></div></div><div class="div_line"  data-info=({id:21063,ln:426}) id=l426><div class="dl_wrapper"><a name=line426 onclick='overload_click(this)' class="a_ln">426<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">Access (or export) of class members
</div></div></div><div class="div_line"  data-info=({id:21064,ln:427}) id=l427><div class="dl_wrapper"><a name=line427 onclick='overload_click(this)' class="a_ln">427<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.TP 4
</div></div></div><div class="div_line"  data-info=({id:21065,ln:428}) id=l428><div class="dl_wrapper"><a name=line428 onclick='overload_click(this)' class="a_ln">428<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.I f
</div></div></div><div class="div_line"  data-info=({id:21066,ln:429}) id=l429><div class="dl_wrapper"><a name=line429 onclick='overload_click(this)' class="a_ln">429<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">File-restricted scoping [enabled]
</div></div></div><div class="div_line"  data-info=({id:21067,ln:430}) id=l430><div class="dl_wrapper"><a name=line430 onclick='overload_click(this)' class="a_ln">430<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.TP 4
</div></div></div><div class="div_line"  data-info=({id:21068,ln:431}) id=l431><div class="dl_wrapper"><a name=line431 onclick='overload_click(this)' class="a_ln">431<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.I i
</div></div></div><div class="div_line"  data-info=({id:21069,ln:432}) id=l432><div class="dl_wrapper"><a name=line432 onclick='overload_click(this)' class="a_ln">432<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">Inheritance information
</div></div></div><div class="div_line"  data-info=({id:21070,ln:433}) id=l433><div class="dl_wrapper"><a name=line433 onclick='overload_click(this)' class="a_ln">433<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.TP 4
</div></div></div><div class="div_line"  data-info=({id:21071,ln:434}) id=l434><div class="dl_wrapper"><a name=line434 onclick='overload_click(this)' class="a_ln">434<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.I k
</div></div></div><div class="div_line"  data-info=({id:21072,ln:435}) id=l435><div class="dl_wrapper"><a name=line435 onclick='overload_click(this)' class="a_ln">435<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">Kind of tag as a single letter [enabled]
</div></div></div><div class="div_line"  data-info=({id:21073,ln:436}) id=l436><div class="dl_wrapper"><a name=line436 onclick='overload_click(this)' class="a_ln">436<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.TP 4
</div></div></div><div class="div_line"  data-info=({id:21074,ln:437}) id=l437><div class="dl_wrapper"><a name=line437 onclick='overload_click(this)' class="a_ln">437<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.I K
</div></div></div><div class="div_line"  data-info=({id:21075,ln:438}) id=l438><div class="dl_wrapper"><a name=line438 onclick='overload_click(this)' class="a_ln">438<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">Kind of tag as full name
</div></div></div><div class="div_line"  data-info=({id:21076,ln:439}) id=l439><div class="dl_wrapper"><a name=line439 onclick='overload_click(this)' class="a_ln">439<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.TP 4
</div></div></div><div class="div_line"  data-info=({id:21077,ln:440}) id=l440><div class="dl_wrapper"><a name=line440 onclick='overload_click(this)' class="a_ln">440<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.I l
</div></div></div><div class="div_line"  data-info=({id:21078,ln:441}) id=l441><div class="dl_wrapper"><a name=line441 onclick='overload_click(this)' class="a_ln">441<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">Language of source file containing tag
</div></div></div><div class="div_line"  data-info=({id:21079,ln:442}) id=l442><div class="dl_wrapper"><a name=line442 onclick='overload_click(this)' class="a_ln">442<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.TP 4
</div></div></div><div class="div_line"  data-info=({id:21080,ln:443}) id=l443><div class="dl_wrapper"><a name=line443 onclick='overload_click(this)' class="a_ln">443<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.I m
</div></div></div><div class="div_line"  data-info=({id:21081,ln:444}) id=l444><div class="dl_wrapper"><a name=line444 onclick='overload_click(this)' class="a_ln">444<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">Implementation information
</div></div></div><div class="div_line"  data-info=({id:21082,ln:445}) id=l445><div class="dl_wrapper"><a name=line445 onclick='overload_click(this)' class="a_ln">445<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.TP 4
</div></div></div><div class="div_line"  data-info=({id:21083,ln:446}) id=l446><div class="dl_wrapper"><a name=line446 onclick='overload_click(this)' class="a_ln">446<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.I n
</div></div></div><div class="div_line"  data-info=({id:21084,ln:447}) id=l447><div class="dl_wrapper"><a name=line447 onclick='overload_click(this)' class="a_ln">447<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">Line number of tag definition
</div></div></div><div class="div_line"  data-info=({id:21085,ln:448}) id=l448><div class="dl_wrapper"><a name=line448 onclick='overload_click(this)' class="a_ln">448<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.TP 4
</div></div></div><div class="div_line"  data-info=({id:21086,ln:449}) id=l449><div class="dl_wrapper"><a name=line449 onclick='overload_click(this)' class="a_ln">449<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.I s
</div></div></div><div class="div_line"  data-info=({id:21087,ln:450}) id=l450><div class="dl_wrapper"><a name=line450 onclick='overload_click(this)' class="a_ln">450<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">Scope of tag definition [enabled]
</div></div></div><div class="div_line"  data-info=({id:21088,ln:451}) id=l451><div class="dl_wrapper"><a name=line451 onclick='overload_click(this)' class="a_ln">451<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.TP 4
</div></div></div><div class="div_line"  data-info=({id:21089,ln:452}) id=l452><div class="dl_wrapper"><a name=line452 onclick='overload_click(this)' class="a_ln">452<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.I S
</div></div></div><div class="div_line"  data-info=({id:21090,ln:453}) id=l453><div class="dl_wrapper"><a name=line453 onclick='overload_click(this)' class="a_ln">453<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">Signature of routine (e.g. prototype or parameter list)
</div></div></div><div class="div_line"  data-info=({id:21091,ln:454}) id=l454><div class="dl_wrapper"><a name=line454 onclick='overload_click(this)' class="a_ln">454<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.TP 4
</div></div></div><div class="div_line"  data-info=({id:21092,ln:455}) id=l455><div class="dl_wrapper"><a name=line455 onclick='overload_click(this)' class="a_ln">455<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.I z
</div></div></div><div class="div_line"  data-info=({id:21093,ln:456}) id=l456><div class="dl_wrapper"><a name=line456 onclick='overload_click(this)' class="a_ln">456<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">Include the "kind:" key in kind field
</div></div></div><div class="div_line"  data-info=({id:21094,ln:457}) id=l457><div class="dl_wrapper"><a name=line457 onclick='overload_click(this)' class="a_ln">457<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.TP 4
</div></div></div><div class="div_line"  data-info=({id:21095,ln:458}) id=l458><div class="dl_wrapper"><a name=line458 onclick='overload_click(this)' class="a_ln">458<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.I t
</div></div></div><div class="div_line"  data-info=({id:21096,ln:459}) id=l459><div class="dl_wrapper"><a name=line459 onclick='overload_click(this)' class="a_ln">459<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">Type and name of a variable or typedef as "typeref:" field [enabled]
</div></div></div><div class="div_line"  data-info=({id:21097,ln:460}) id=l460><div class="dl_wrapper"><a name=line460 onclick='overload_click(this)' class="a_ln">460<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.PD 1
</div></div></div><div class="div_line"  data-info=({id:21098,ln:461}) id=l461><div class="dl_wrapper"><a name=line461 onclick='overload_click(this)' class="a_ln">461<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.RE
</div></div></div><div class="div_line"  data-info=({id:21099,ln:462}) id=l462><div class="dl_wrapper"><a name=line462 onclick='overload_click(this)' class="a_ln">462<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:21100,ln:463}) id=l463><div class="dl_wrapper"><a name=line463 onclick='overload_click(this)' class="a_ln">463<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.RS 5
</div></div></div><div class="div_line"  data-info=({id:21101,ln:464}) id=l464><div class="dl_wrapper"><a name=line464 onclick='overload_click(this)' class="a_ln">464<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">Each letter or group of letters may be preceded by either '+' to add it to the
</div></div></div><div class="div_line"  data-info=({id:21102,ln:465}) id=l465><div class="dl_wrapper"><a name=line465 onclick='overload_click(this)' class="a_ln">465<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">default set, or '\-' to exclude it. In the absence of any preceding '+' or '\-'
</div></div></div><div class="div_line"  data-info=({id:21103,ln:466}) id=l466><div class="dl_wrapper"><a name=line466 onclick='overload_click(this)' class="a_ln">466<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">sign, only those kinds explicitly listed in \fIflags\fP will be included in
</div></div></div><div class="div_line"  data-info=({id:21104,ln:467}) id=l467><div class="dl_wrapper"><a name=line467 onclick='overload_click(this)' class="a_ln">467<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">the output (i.e. overriding the default set). This option is ignored if the
</div></div></div><div class="div_line"  data-info=({id:21105,ln:468}) id=l468><div class="dl_wrapper"><a name=line468 onclick='overload_click(this)' class="a_ln">468<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">option \fB\-\-format\fP=\fI1\fP has been specified. The default value 
</div></div></div><div class="div_line"  data-info=({id:21106,ln:469}) id=l469><div class="dl_wrapper"><a name=line469 onclick='overload_click(this)' class="a_ln">469<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">of this option is \fIfkst\fP.
</div></div></div><div class="div_line"  data-info=({id:21107,ln:470}) id=l470><div class="dl_wrapper"><a name=line470 onclick='overload_click(this)' class="a_ln">470<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.RE
</div></div></div><div class="div_line"  data-info=({id:21108,ln:471}) id=l471><div class="dl_wrapper"><a name=line471 onclick='overload_click(this)' class="a_ln">471<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:21109,ln:472}) id=l472><div class="dl_wrapper"><a name=line472 onclick='overload_click(this)' class="a_ln">472<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.TP 5
</div></div></div><div class="div_line"  data-info=({id:21110,ln:473}) id=l473><div class="dl_wrapper"><a name=line473 onclick='overload_click(this)' class="a_ln">473<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">\fB\-\-file\-scope\fP[=\fIyes\fP|\fIno\fP]
</div></div></div><div class="div_line"  data-info=({id:21111,ln:474}) id=l474><div class="dl_wrapper"><a name=line474 onclick='overload_click(this)' class="a_ln">474<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">Indicates whether tags scoped only for a single file (i.e. tags which cannot
</div></div></div><div class="div_line"  data-info=({id:21112,ln:475}) id=l475><div class="dl_wrapper"><a name=line475 onclick='overload_click(this)' class="a_ln">475<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">be seen outside of the file in which they are defined, such as "static" tags)
</div></div></div><div class="div_line"  data-info=({id:21113,ln:476}) id=l476><div class="dl_wrapper"><a name=line476 onclick='overload_click(this)' class="a_ln">476<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">should be included in the output. See, also, the \fB\-h\fP option. This option
</div></div></div><div class="div_line"  data-info=({id:21114,ln:477}) id=l477><div class="dl_wrapper"><a name=line477 onclick='overload_click(this)' class="a_ln">477<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">is enabled by default.
</div></div></div><div class="div_line"  data-info=({id:21115,ln:478}) id=l478><div class="dl_wrapper"><a name=line478 onclick='overload_click(this)' class="a_ln">478<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:21116,ln:479}) id=l479><div class="dl_wrapper"><a name=line479 onclick='overload_click(this)' class="a_ln">479<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.TP 5
</div></div></div><div class="div_line"  data-info=({id:21117,ln:480}) id=l480><div class="dl_wrapper"><a name=line480 onclick='overload_click(this)' class="a_ln">480<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">\fB\-\-filter\fP[=\fIyes\fP|\fIno\fP]
</div></div></div><div class="div_line"  data-info=({id:21118,ln:481}) id=l481><div class="dl_wrapper"><a name=line481 onclick='overload_click(this)' class="a_ln">481<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">Causes \fBctags\fP to behave as a filter, reading source file names from
</div></div></div><div class="div_line"  data-info=({id:21119,ln:482}) id=l482><div class="dl_wrapper"><a name=line482 onclick='overload_click(this)' class="a_ln">482<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">standard input and printing their tags to standard output on a file-by-file
</div></div></div><div class="div_line"  data-info=({id:21120,ln:483}) id=l483><div class="dl_wrapper"><a name=line483 onclick='overload_click(this)' class="a_ln">483<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">basis. If \fB\-\-sorted\fP is enabled, tags are sorted only within the source
</div></div></div><div class="div_line"  data-info=({id:21121,ln:484}) id=l484><div class="dl_wrapper"><a name=line484 onclick='overload_click(this)' class="a_ln">484<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">file in which they are defined. File names are read from standard input in
</div></div></div><div class="div_line"  data-info=({id:21122,ln:485}) id=l485><div class="dl_wrapper"><a name=line485 onclick='overload_click(this)' class="a_ln">485<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">line-oriented input mode (see note for \fB\-L\fP option) and only after file
</div></div></div><div class="div_line"  data-info=({id:21123,ln:486}) id=l486><div class="dl_wrapper"><a name=line486 onclick='overload_click(this)' class="a_ln">486<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">names listed on the command line or from any file supplied using the \fB\-L\fP
</div></div></div><div class="div_line"  data-info=({id:21124,ln:487}) id=l487><div class="dl_wrapper"><a name=line487 onclick='overload_click(this)' class="a_ln">487<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">option. When this option is enabled, the options \fB\-f\fP, \fB\-o\fP,
</div></div></div><div class="div_line"  data-info=({id:21125,ln:488}) id=l488><div class="dl_wrapper"><a name=line488 onclick='overload_click(this)' class="a_ln">488<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">and \fB\-\-totals\fP are ignored. This option is quite esoteric and is disabled
</div></div></div><div class="div_line"  data-info=({id:21126,ln:489}) id=l489><div class="dl_wrapper"><a name=line489 onclick='overload_click(this)' class="a_ln">489<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">by default. This option must appear before the first file name.
</div></div></div><div class="div_line"  data-info=({id:21127,ln:490}) id=l490><div class="dl_wrapper"><a name=line490 onclick='overload_click(this)' class="a_ln">490<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:21128,ln:491}) id=l491><div class="dl_wrapper"><a name=line491 onclick='overload_click(this)' class="a_ln">491<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.TP 5
</div></div></div><div class="div_line"  data-info=({id:21129,ln:492}) id=l492><div class="dl_wrapper"><a name=line492 onclick='overload_click(this)' class="a_ln">492<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">\fB\-\-filter\-terminator\fP=\fIstring\fP
</div></div></div><div class="div_line"  data-info=({id:21130,ln:493}) id=l493><div class="dl_wrapper"><a name=line493 onclick='overload_click(this)' class="a_ln">493<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">Specifies a string to print to standard output following the tags for each
</div></div></div><div class="div_line"  data-info=({id:21131,ln:494}) id=l494><div class="dl_wrapper"><a name=line494 onclick='overload_click(this)' class="a_ln">494<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">file name parsed when the \fB\-\-filter\fP option is enabled. This may permit an
</div></div></div><div class="div_line"  data-info=({id:21132,ln:495}) id=l495><div class="dl_wrapper"><a name=line495 onclick='overload_click(this)' class="a_ln">495<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">application reading the output of ctags to determine when the output for each
</div></div></div><div class="div_line"  data-info=({id:21133,ln:496}) id=l496><div class="dl_wrapper"><a name=line496 onclick='overload_click(this)' class="a_ln">496<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">file is finished. Note that if the file name read is a directory and
</div></div></div><div class="div_line"  data-info=({id:21134,ln:497}) id=l497><div class="dl_wrapper"><a name=line497 onclick='overload_click(this)' class="a_ln">497<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">\fB\-\-recurse\fP is enabled, this string will be printed only one once at the
</div></div></div><div class="div_line"  data-info=({id:21135,ln:498}) id=l498><div class="dl_wrapper"><a name=line498 onclick='overload_click(this)' class="a_ln">498<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">end of all tags found for by descending the directory. This string will always
</div></div></div><div class="div_line"  data-info=({id:21136,ln:499}) id=l499><div class="dl_wrapper"><a name=line499 onclick='overload_click(this)' class="a_ln">499<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">be separated from the last tag line for the file by its terminating newline.
</div></div></div><div class="div_line"  data-info=({id:21137,ln:500}) id=l500><div class="dl_wrapper"><a name=line500 onclick='overload_click(this)' class="a_ln">500<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">This option is quite esoteric and is empty by default. This option must appear
</div></div></div><div class="div_line"  data-info=({id:21138,ln:501}) id=l501><div class="dl_wrapper"><a name=line501 onclick='overload_click(this)' class="a_ln">501<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">before the first file name.
</div></div></div><div class="div_line"  data-info=({id:21139,ln:502}) id=l502><div class="dl_wrapper"><a name=line502 onclick='overload_click(this)' class="a_ln">502<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:21140,ln:503}) id=l503><div class="dl_wrapper"><a name=line503 onclick='overload_click(this)' class="a_ln">503<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.TP 5
</div></div></div><div class="div_line"  data-info=({id:21141,ln:504}) id=l504><div class="dl_wrapper"><a name=line504 onclick='overload_click(this)' class="a_ln">504<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">\fB\-\-format\fP=\fIlevel\fP
</div></div></div><div class="div_line"  data-info=({id:21142,ln:505}) id=l505><div class="dl_wrapper"><a name=line505 onclick='overload_click(this)' class="a_ln">505<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">Change the format of the output tag file. Currently the only valid values for
</div></div></div><div class="div_line"  data-info=({id:21143,ln:506}) id=l506><div class="dl_wrapper"><a name=line506 onclick='overload_click(this)' class="a_ln">506<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">\fIlevel\fP are \fI1\fP or \fI2\fP. Level 1 specifies the original tag file
</div></div></div><div class="div_line"  data-info=({id:21144,ln:507}) id=l507><div class="dl_wrapper"><a name=line507 onclick='overload_click(this)' class="a_ln">507<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">format and level 2 specifies a new extended format containing extension fields
</div></div></div><div class="div_line"  data-info=({id:21145,ln:508}) id=l508><div class="dl_wrapper"><a name=line508 onclick='overload_click(this)' class="a_ln">508<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">(but in a manner which retains backward-compatibility with original
</div></div></div><div class="div_line"  data-info=({id:21146,ln:509}) id=l509><div class="dl_wrapper"><a name=line509 onclick='overload_click(this)' class="a_ln">509<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">\fBvi\fP(1) implementations). The default level is 2. This option must appear
</div></div></div><div class="div_line"  data-info=({id:21147,ln:510}) id=l510><div class="dl_wrapper"><a name=line510 onclick='overload_click(this)' class="a_ln">510<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">before the first file name. [Ignored in etags mode]
</div></div></div><div class="div_line"  data-info=({id:21148,ln:511}) id=l511><div class="dl_wrapper"><a name=line511 onclick='overload_click(this)' class="a_ln">511<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:21149,ln:512}) id=l512><div class="dl_wrapper"><a name=line512 onclick='overload_click(this)' class="a_ln">512<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.TP 5
</div></div></div><div class="div_line"  data-info=({id:21150,ln:513}) id=l513><div class="dl_wrapper"><a name=line513 onclick='overload_click(this)' class="a_ln">513<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.B \-\-help
</div></div></div><div class="div_line"  data-info=({id:21151,ln:514}) id=l514><div class="dl_wrapper"><a name=line514 onclick='overload_click(this)' class="a_ln">514<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">Prints to standard output a detailed usage description, and then exits.
</div></div></div><div class="div_line"  data-info=({id:21152,ln:515}) id=l515><div class="dl_wrapper"><a name=line515 onclick='overload_click(this)' class="a_ln">515<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:21153,ln:516}) id=l516><div class="dl_wrapper"><a name=line516 onclick='overload_click(this)' class="a_ln">516<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.TP 5
</div></div></div><div class="div_line"  data-info=({id:21154,ln:517}) id=l517><div class="dl_wrapper"><a name=line517 onclick='overload_click(this)' class="a_ln">517<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">\fB\-\-if0\fP[=\fIyes\fP|\fIno\fP]
</div></div></div><div class="div_line"  data-info=({id:21155,ln:518}) id=l518><div class="dl_wrapper"><a name=line518 onclick='overload_click(this)' class="a_ln">518<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">Indicates a preference as to whether code within an "#if 0" branch of a
</div></div></div><div class="div_line"  data-info=({id:21156,ln:519}) id=l519><div class="dl_wrapper"><a name=line519 onclick='overload_click(this)' class="a_ln">519<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">preprocessor conditional should be examined for non-macro tags (macro tags are
</div></div></div><div class="div_line"  data-info=({id:21157,ln:520}) id=l520><div class="dl_wrapper"><a name=line520 onclick='overload_click(this)' class="a_ln">520<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">always included). Because the intent of this construct is to disable code, the
</div></div></div><div class="div_line"  data-info=({id:21158,ln:521}) id=l521><div class="dl_wrapper"><a name=line521 onclick='overload_click(this)' class="a_ln">521<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">default value of this option is \fIno\fP. Note that this indicates a
</div></div></div><div class="div_line"  data-info=({id:21159,ln:522}) id=l522><div class="dl_wrapper"><a name=line522 onclick='overload_click(this)' class="a_ln">522<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">preference only and does not guarantee skipping code within an "#if 0" branch,
</div></div></div><div class="div_line"  data-info=({id:21160,ln:523}) id=l523><div class="dl_wrapper"><a name=line523 onclick='overload_click(this)' class="a_ln">523<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">since the fall-back algorithm used to generate tags when preprocessor
</div></div></div><div class="div_line"  data-info=({id:21161,ln:524}) id=l524><div class="dl_wrapper"><a name=line524 onclick='overload_click(this)' class="a_ln">524<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">conditionals are too complex follows all branches of a conditional. This
</div></div></div><div class="div_line"  data-info=({id:21162,ln:525}) id=l525><div class="dl_wrapper"><a name=line525 onclick='overload_click(this)' class="a_ln">525<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">option is disabled by default.
</div></div></div><div class="div_line"  data-info=({id:21163,ln:526}) id=l526><div class="dl_wrapper"><a name=line526 onclick='overload_click(this)' class="a_ln">526<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:21164,ln:527}) id=l527><div class="dl_wrapper"><a name=line527 onclick='overload_click(this)' class="a_ln">527<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.TP 5
</div></div></div><div class="div_line"  data-info=({id:21165,ln:528}) id=l528><div class="dl_wrapper"><a name=line528 onclick='overload_click(this)' class="a_ln">528<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">\fB\-\-&lt;LANG&gt;\-kinds\fP=\fI[+|\-]kinds\fP
</div></div></div><div class="div_line"  data-info=({id:21166,ln:529}) id=l529><div class="dl_wrapper"><a name=line529 onclick='overload_click(this)' class="a_ln">529<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">Specifies a list of language-specific kinds of tags (or kinds) to include in
</div></div></div><div class="div_line"  data-info=({id:21167,ln:530}) id=l530><div class="dl_wrapper"><a name=line530 onclick='overload_click(this)' class="a_ln">530<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">the output file for a particular language, where \fB&lt;LANG&gt;\fP is
</div></div></div><div class="div_line"  data-info=({id:21168,ln:531}) id=l531><div class="dl_wrapper"><a name=line531 onclick='overload_click(this)' class="a_ln">531<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">case-insensitive and is one of the built-in language names (see the
</div></div></div><div class="div_line"  data-info=({id:21169,ln:532}) id=l532><div class="dl_wrapper"><a name=line532 onclick='overload_click(this)' class="a_ln">532<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">\fB\-\-list\-languages\fP option for a complete list). The parameter \fIkinds\fP
</div></div></div><div class="div_line"  data-info=({id:21170,ln:533}) id=l533><div class="dl_wrapper"><a name=line533 onclick='overload_click(this)' class="a_ln">533<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">is a group of one-letter flags designating kinds of tags (particular to the
</div></div></div><div class="div_line"  data-info=({id:21171,ln:534}) id=l534><div class="dl_wrapper"><a name=line534 onclick='overload_click(this)' class="a_ln">534<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">language) to either include or exclude from the output. The specific sets of
</div></div></div><div class="div_line"  data-info=({id:21172,ln:535}) id=l535><div class="dl_wrapper"><a name=line535 onclick='overload_click(this)' class="a_ln">535<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">flags recognized for each language, their meanings and defaults may be list
</div></div></div><div class="div_line"  data-info=({id:21173,ln:536}) id=l536><div class="dl_wrapper"><a name=line536 onclick='overload_click(this)' class="a_ln">536<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">using the \fB\-\-list\-kinds\fP option. Each letter or group of letters may be
</div></div></div><div class="div_line"  data-info=({id:21174,ln:537}) id=l537><div class="dl_wrapper"><a name=line537 onclick='overload_click(this)' class="a_ln">537<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">preceded by either '+' to add it to, or '\-' to remove it from, the default
</div></div></div><div class="div_line"  data-info=({id:21175,ln:538}) id=l538><div class="dl_wrapper"><a name=line538 onclick='overload_click(this)' class="a_ln">538<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">set. In the absence of any preceding '+' or '\-' sign, only those kinds
</div></div></div><div class="div_line"  data-info=({id:21176,ln:539}) id=l539><div class="dl_wrapper"><a name=line539 onclick='overload_click(this)' class="a_ln">539<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">explicitly listed in \fIkinds\fP will be included in the output (i.e.
</div></div></div><div class="div_line"  data-info=({id:21177,ln:540}) id=l540><div class="dl_wrapper"><a name=line540 onclick='overload_click(this)' class="a_ln">540<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">overriding the default for the specified language).
</div></div></div><div class="div_line"  data-info=({id:21178,ln:541}) id=l541><div class="dl_wrapper"><a name=line541 onclick='overload_click(this)' class="a_ln">541<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:21179,ln:542}) id=l542><div class="dl_wrapper"><a name=line542 onclick='overload_click(this)' class="a_ln">542<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">As an example for the C language, in order to add prototypes and external
</div></div></div><div class="div_line"  data-info=({id:21180,ln:543}) id=l543><div class="dl_wrapper"><a name=line543 onclick='overload_click(this)' class="a_ln">543<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">variable declarations to the default set of tag kinds, but exclude macros,
</div></div></div><div class="div_line"  data-info=({id:21181,ln:544}) id=l544><div class="dl_wrapper"><a name=line544 onclick='overload_click(this)' class="a_ln">544<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">use \fB\-\-c\-kinds\fP=\fI+px\-d\fP; to include only tags for functions, use
</div></div></div><div class="div_line"  data-info=({id:21182,ln:545}) id=l545><div class="dl_wrapper"><a name=line545 onclick='overload_click(this)' class="a_ln">545<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">\fB\-\-c\-kinds\fP=\fIf\fP.
</div></div></div><div class="div_line"  data-info=({id:21183,ln:546}) id=l546><div class="dl_wrapper"><a name=line546 onclick='overload_click(this)' class="a_ln">546<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:21184,ln:547}) id=l547><div class="dl_wrapper"><a name=line547 onclick='overload_click(this)' class="a_ln">547<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.TP 5
</div></div></div><div class="div_line"  data-info=({id:21185,ln:548}) id=l548><div class="dl_wrapper"><a name=line548 onclick='overload_click(this)' class="a_ln">548<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">\fB\-\-langdef\fP=\fIname\fP
</div></div></div><div class="div_line"  data-info=({id:21186,ln:549}) id=l549><div class="dl_wrapper"><a name=line549 onclick='overload_click(this)' class="a_ln">549<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">Defines a new user-defined language, \fIname\fP, to be parsed with regular
</div></div></div><div class="div_line"  data-info=({id:21187,ln:550}) id=l550><div class="dl_wrapper"><a name=line550 onclick='overload_click(this)' class="a_ln">550<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">expressions. Once defined, \fIname\fP may be used in other options taking
</div></div></div><div class="div_line"  data-info=({id:21188,ln:551}) id=l551><div class="dl_wrapper"><a name=line551 onclick='overload_click(this)' class="a_ln">551<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">language names. The typical use of this option is to first define the
</div></div></div><div class="div_line"  data-info=({id:21189,ln:552}) id=l552><div class="dl_wrapper"><a name=line552 onclick='overload_click(this)' class="a_ln">552<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">language, then map file names to it using \fI\-\-langmap\fP, then specify
</div></div></div><div class="div_line"  data-info=({id:21190,ln:553}) id=l553><div class="dl_wrapper"><a name=line553 onclick='overload_click(this)' class="a_ln">553<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">regular expressions using \fI\-\-regex\-&lt;LANG&gt;\fP to define how its tags are
</div></div></div><div class="div_line"  data-info=({id:21191,ln:554}) id=l554><div class="dl_wrapper"><a name=line554 onclick='overload_click(this)' class="a_ln">554<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">found.
</div></div></div><div class="div_line"  data-info=({id:21192,ln:555}) id=l555><div class="dl_wrapper"><a name=line555 onclick='overload_click(this)' class="a_ln">555<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:21193,ln:556}) id=l556><div class="dl_wrapper"><a name=line556 onclick='overload_click(this)' class="a_ln">556<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.TP 5
</div></div></div><div class="div_line"  data-info=({id:21194,ln:557}) id=l557><div class="dl_wrapper"><a name=line557 onclick='overload_click(this)' class="a_ln">557<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">\fB\-\-langmap\fP=\fImap[,map[...]]\fP
</div></div></div><div class="div_line"  data-info=({id:21195,ln:558}) id=l558><div class="dl_wrapper"><a name=line558 onclick='overload_click(this)' class="a_ln">558<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">Controls how file names are mapped to languages (see the \fB\-\-list\-maps\fP
</div></div></div><div class="div_line"  data-info=({id:21196,ln:559}) id=l559><div class="dl_wrapper"><a name=line559 onclick='overload_click(this)' class="a_ln">559<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">option). Each comma-separated \fImap\fP consists of the language name (either
</div></div></div><div class="div_line"  data-info=({id:21197,ln:560}) id=l560><div class="dl_wrapper"><a name=line560 onclick='overload_click(this)' class="a_ln">560<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">a built-in or user-defined language), a colon, and a list of file extensions
</div></div></div><div class="div_line"  data-info=({id:21198,ln:561}) id=l561><div class="dl_wrapper"><a name=line561 onclick='overload_click(this)' class="a_ln">561<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">and/or file name patterns. A file extension is specified by preceding the
</div></div></div><div class="div_line"  data-info=({id:21199,ln:562}) id=l562><div class="dl_wrapper"><a name=line562 onclick='overload_click(this)' class="a_ln">562<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">extension with a period (e.g. ".c"). A file name pattern is specified by
</div></div></div><div class="div_line"  data-info=({id:21200,ln:563}) id=l563><div class="dl_wrapper"><a name=line563 onclick='overload_click(this)' class="a_ln">563<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">enclosing the pattern in parentheses (e.g. "([Mm]akefile)"). If appropriate
</div></div></div><div class="div_line"  data-info=({id:21201,ln:564}) id=l564><div class="dl_wrapper"><a name=line564 onclick='overload_click(this)' class="a_ln">564<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">support is available from the runtime library of your C compiler, then the
</div></div></div><div class="div_line"  data-info=({id:21202,ln:565}) id=l565><div class="dl_wrapper"><a name=line565 onclick='overload_click(this)' class="a_ln">565<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">file name pattern may contain the usual shell wildcards common on Unix (be
</div></div></div><div class="div_line"  data-info=({id:21203,ln:566}) id=l566><div class="dl_wrapper"><a name=line566 onclick='overload_click(this)' class="a_ln">566<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">sure to quote the option parameter to protect the wildcards from being
</div></div></div><div class="div_line"  data-info=({id:21204,ln:567}) id=l567><div class="dl_wrapper"><a name=line567 onclick='overload_click(this)' class="a_ln">567<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">expanded by the shell before being passed to \fBctags\fP). You can determine
</div></div></div><div class="div_line"  data-info=({id:21205,ln:568}) id=l568><div class="dl_wrapper"><a name=line568 onclick='overload_click(this)' class="a_ln">568<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">if shell wildcards are available on your platform by examining the output of
</div></div></div><div class="div_line"  data-info=({id:21206,ln:569}) id=l569><div class="dl_wrapper"><a name=line569 onclick='overload_click(this)' class="a_ln">569<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">the \fB\-\-version\fP option, which will include "+wildcards" in the compiled
</div></div></div><div class="div_line"  data-info=({id:21207,ln:570}) id=l570><div class="dl_wrapper"><a name=line570 onclick='overload_click(this)' class="a_ln">570<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">feature list; otherwise, the file name patterns are matched against file names
</div></div></div><div class="div_line"  data-info=({id:21208,ln:571}) id=l571><div class="dl_wrapper"><a name=line571 onclick='overload_click(this)' class="a_ln">571<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">using a simple textual comparison. When mapping a file extension, it will
</div></div></div><div class="div_line"  data-info=({id:21209,ln:572}) id=l572><div class="dl_wrapper"><a name=line572 onclick='overload_click(this)' class="a_ln">572<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">first be unmapped from any other languages.
</div></div></div><div class="div_line"  data-info=({id:21210,ln:573}) id=l573><div class="dl_wrapper"><a name=line573 onclick='overload_click(this)' class="a_ln">573<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:21211,ln:574}) id=l574><div class="dl_wrapper"><a name=line574 onclick='overload_click(this)' class="a_ln">574<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">If the first character in a map is a plus sign, then the extensions and file
</div></div></div><div class="div_line"  data-info=({id:21212,ln:575}) id=l575><div class="dl_wrapper"><a name=line575 onclick='overload_click(this)' class="a_ln">575<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">name patterns in that map will be appended to the current map for that
</div></div></div><div class="div_line"  data-info=({id:21213,ln:576}) id=l576><div class="dl_wrapper"><a name=line576 onclick='overload_click(this)' class="a_ln">576<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">language; otherwise, the map will replace the current map. For example, to
</div></div></div><div class="div_line"  data-info=({id:21214,ln:577}) id=l577><div class="dl_wrapper"><a name=line577 onclick='overload_click(this)' class="a_ln">577<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">specify that only files with extensions of .c and .x are to be treated as C
</div></div></div><div class="div_line"  data-info=({id:21215,ln:578}) id=l578><div class="dl_wrapper"><a name=line578 onclick='overload_click(this)' class="a_ln">578<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">language files, use "\fB\-\-langmap\fP=\fIc:.c.x\fP"; to also add files with
</div></div></div><div class="div_line"  data-info=({id:21216,ln:579}) id=l579><div class="dl_wrapper"><a name=line579 onclick='overload_click(this)' class="a_ln">579<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">extensions of .j as Java language files, specify
</div></div></div><div class="div_line"  data-info=({id:21217,ln:580}) id=l580><div class="dl_wrapper"><a name=line580 onclick='overload_click(this)' class="a_ln">580<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">"\fB\-\-langmap\fP=\fIc:.c.x,java:+.j\fP". To map makefiles (e.g. files
</div></div></div><div class="div_line"  data-info=({id:21218,ln:581}) id=l581><div class="dl_wrapper"><a name=line581 onclick='overload_click(this)' class="a_ln">581<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">named either "Makefile", "makefile", or having the extension ".mak") to a
</div></div></div><div class="div_line"  data-info=({id:21219,ln:582}) id=l582><div class="dl_wrapper"><a name=line582 onclick='overload_click(this)' class="a_ln">582<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">language called "make", specify "\fB\-\-langmap\fP=\fImake:([Mm]akefile).mak\fP".
</div></div></div><div class="div_line"  data-info=({id:21220,ln:583}) id=l583><div class="dl_wrapper"><a name=line583 onclick='overload_click(this)' class="a_ln">583<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">To map files having no extension, specify a period not followed by a
</div></div></div><div class="div_line"  data-info=({id:21221,ln:584}) id=l584><div class="dl_wrapper"><a name=line584 onclick='overload_click(this)' class="a_ln">584<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">non-period character (e.g. ".", "..x", ".x."). To clear the mapping for a
</div></div></div><div class="div_line"  data-info=({id:21222,ln:585}) id=l585><div class="dl_wrapper"><a name=line585 onclick='overload_click(this)' class="a_ln">585<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">particular language (thus inhibiting automatic generation of tags for that
</div></div></div><div class="div_line"  data-info=({id:21223,ln:586}) id=l586><div class="dl_wrapper"><a name=line586 onclick='overload_click(this)' class="a_ln">586<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">language), specify an empty extension list (e.g.
</div></div></div><div class="div_line"  data-info=({id:21224,ln:587}) id=l587><div class="dl_wrapper"><a name=line587 onclick='overload_click(this)' class="a_ln">587<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">"\fB\-\-langmap\fP=\fIfortran:\fP"). To restore the default language mappings
</div></div></div><div class="div_line"  data-info=({id:21225,ln:588}) id=l588><div class="dl_wrapper"><a name=line588 onclick='overload_click(this)' class="a_ln">588<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">for all a particular language, supply the keyword "default" for the mapping.
</div></div></div><div class="div_line"  data-info=({id:21226,ln:589}) id=l589><div class="dl_wrapper"><a name=line589 onclick='overload_click(this)' class="a_ln">589<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">To specify restore the default language mappings for all languages, specify
</div></div></div><div class="div_line"  data-info=({id:21227,ln:590}) id=l590><div class="dl_wrapper"><a name=line590 onclick='overload_click(this)' class="a_ln">590<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">"\fB\-\-langmap\fP=\fIdefault\fP". Note that file extensions are tested before
</div></div></div><div class="div_line"  data-info=({id:21228,ln:591}) id=l591><div class="dl_wrapper"><a name=line591 onclick='overload_click(this)' class="a_ln">591<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">file name patterns when inferring the language of a file.
</div></div></div><div class="div_line"  data-info=({id:21229,ln:592}) id=l592><div class="dl_wrapper"><a name=line592 onclick='overload_click(this)' class="a_ln">592<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:21230,ln:593}) id=l593><div class="dl_wrapper"><a name=line593 onclick='overload_click(this)' class="a_ln">593<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.TP 5
</div></div></div><div class="div_line"  data-info=({id:21231,ln:594}) id=l594><div class="dl_wrapper"><a name=line594 onclick='overload_click(this)' class="a_ln">594<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">\fB\-\-language\-force\fP=\fIlanguage\fP
</div></div></div><div class="div_line"  data-info=({id:21232,ln:595}) id=l595><div class="dl_wrapper"><a name=line595 onclick='overload_click(this)' class="a_ln">595<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">By default, \fBctags\fP automatically selects the language of a source file,
</div></div></div><div class="div_line"  data-info=({id:21233,ln:596}) id=l596><div class="dl_wrapper"><a name=line596 onclick='overload_click(this)' class="a_ln">596<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">ignoring those files whose language cannot be determined (see
</div></div></div><div class="div_line"  data-info=({id:21234,ln:597}) id=l597><div class="dl_wrapper"><a name=line597 onclick='overload_click(this)' class="a_ln">597<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">\fBSOURCE FILES\fP, above). This option forces the specified \fIlanguage\fP
</div></div></div><div class="div_line"  data-info=({id:21235,ln:598}) id=l598><div class="dl_wrapper"><a name=line598 onclick='overload_click(this)' class="a_ln">598<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">(case-insensitive; either built-in or user-defined) to be used for every
</div></div></div><div class="div_line"  data-info=({id:21236,ln:599}) id=l599><div class="dl_wrapper"><a name=line599 onclick='overload_click(this)' class="a_ln">599<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">supplied file instead of automatically selecting the language based upon its
</div></div></div><div class="div_line"  data-info=({id:21237,ln:600}) id=l600><div class="dl_wrapper"><a name=line600 onclick='overload_click(this)' class="a_ln">600<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">extension. In addition, the special value \fIauto\fP indicates that the
</div></div></div><div class="div_line"  data-info=({id:21238,ln:601}) id=l601><div class="dl_wrapper"><a name=line601 onclick='overload_click(this)' class="a_ln">601<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">language should be automatically selected (which effectively disables this
</div></div></div><div class="div_line"  data-info=({id:21239,ln:602}) id=l602><div class="dl_wrapper"><a name=line602 onclick='overload_click(this)' class="a_ln">602<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">option).
</div></div></div><div class="div_line"  data-info=({id:21240,ln:603}) id=l603><div class="dl_wrapper"><a name=line603 onclick='overload_click(this)' class="a_ln">603<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:21241,ln:604}) id=l604><div class="dl_wrapper"><a name=line604 onclick='overload_click(this)' class="a_ln">604<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.TP 5
</div></div></div><div class="div_line"  data-info=({id:21242,ln:605}) id=l605><div class="dl_wrapper"><a name=line605 onclick='overload_click(this)' class="a_ln">605<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">\fB\-\-languages\fP=\fI[+|\-]list\fP
</div></div></div><div class="div_line"  data-info=({id:21243,ln:606}) id=l606><div class="dl_wrapper"><a name=line606 onclick='overload_click(this)' class="a_ln">606<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">Specifies the languages for which tag generation is enabled, with \fIlist\fP
</div></div></div><div class="div_line"  data-info=({id:21244,ln:607}) id=l607><div class="dl_wrapper"><a name=line607 onclick='overload_click(this)' class="a_ln">607<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">containing a comma-separated list of language names (case-insensitive; either
</div></div></div><div class="div_line"  data-info=({id:21245,ln:608}) id=l608><div class="dl_wrapper"><a name=line608 onclick='overload_click(this)' class="a_ln">608<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">built-in or user-defined). If the first language of \fIlist\fP is not preceded
</div></div></div><div class="div_line"  data-info=({id:21246,ln:609}) id=l609><div class="dl_wrapper"><a name=line609 onclick='overload_click(this)' class="a_ln">609<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">by either a '+' or '\-', the current list will be cleared before adding or
</div></div></div><div class="div_line"  data-info=({id:21247,ln:610}) id=l610><div class="dl_wrapper"><a name=line610 onclick='overload_click(this)' class="a_ln">610<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">removing the languages in \fIlist\fP. Until a '\-' is encountered, each
</div></div></div><div class="div_line"  data-info=({id:21248,ln:611}) id=l611><div class="dl_wrapper"><a name=line611 onclick='overload_click(this)' class="a_ln">611<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">language in the list will be added to the current list. As either the '+' or
</div></div></div><div class="div_line"  data-info=({id:21249,ln:612}) id=l612><div class="dl_wrapper"><a name=line612 onclick='overload_click(this)' class="a_ln">612<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">\&'\-' is encountered in the list, the languages following it are added or
</div></div></div><div class="div_line"  data-info=({id:21250,ln:613}) id=l613><div class="dl_wrapper"><a name=line613 onclick='overload_click(this)' class="a_ln">613<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">removed from the current list, respectively. Thus, it becomes simple to
</div></div></div><div class="div_line"  data-info=({id:21251,ln:614}) id=l614><div class="dl_wrapper"><a name=line614 onclick='overload_click(this)' class="a_ln">614<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">replace the current list with a new one, or to add or remove languages from
</div></div></div><div class="div_line"  data-info=({id:21252,ln:615}) id=l615><div class="dl_wrapper"><a name=line615 onclick='overload_click(this)' class="a_ln">615<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">the current list. The actual list of files for which tags will be generated
</div></div></div><div class="div_line"  data-info=({id:21253,ln:616}) id=l616><div class="dl_wrapper"><a name=line616 onclick='overload_click(this)' class="a_ln">616<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">depends upon the language extension mapping in effect (see the \fB\-\-langmap\fP
</div></div></div><div class="div_line"  data-info=({id:21254,ln:617}) id=l617><div class="dl_wrapper"><a name=line617 onclick='overload_click(this)' class="a_ln">617<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">option). Note that all languages, including user-defined languages are enabled
</div></div></div><div class="div_line"  data-info=({id:21255,ln:618}) id=l618><div class="dl_wrapper"><a name=line618 onclick='overload_click(this)' class="a_ln">618<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">unless explicitly disabled using this option. Language names included in
</div></div></div><div class="div_line"  data-info=({id:21256,ln:619}) id=l619><div class="dl_wrapper"><a name=line619 onclick='overload_click(this)' class="a_ln">619<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">\fIlist\fP may be any built-in language or one previously defined with
</div></div></div><div class="div_line"  data-info=({id:21257,ln:620}) id=l620><div class="dl_wrapper"><a name=line620 onclick='overload_click(this)' class="a_ln">620<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">\fB\-\-langdef\fP. The default is "all", which is also accepted as a valid
</div></div></div><div class="div_line"  data-info=({id:21258,ln:621}) id=l621><div class="dl_wrapper"><a name=line621 onclick='overload_click(this)' class="a_ln">621<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">argument. See the \fB\-\-list\-languages\fP option for a complete list of the
</div></div></div><div class="div_line"  data-info=({id:21259,ln:622}) id=l622><div class="dl_wrapper"><a name=line622 onclick='overload_click(this)' class="a_ln">622<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">built-in language names.
</div></div></div><div class="div_line"  data-info=({id:21260,ln:623}) id=l623><div class="dl_wrapper"><a name=line623 onclick='overload_click(this)' class="a_ln">623<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:21261,ln:624}) id=l624><div class="dl_wrapper"><a name=line624 onclick='overload_click(this)' class="a_ln">624<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.TP 5
</div></div></div><div class="div_line"  data-info=({id:21262,ln:625}) id=l625><div class="dl_wrapper"><a name=line625 onclick='overload_click(this)' class="a_ln">625<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">\fB\-\-license\fP
</div></div></div><div class="div_line"  data-info=({id:21263,ln:626}) id=l626><div class="dl_wrapper"><a name=line626 onclick='overload_click(this)' class="a_ln">626<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">Prints a summary of the software license to standard output, and then exits.
</div></div></div><div class="div_line"  data-info=({id:21264,ln:627}) id=l627><div class="dl_wrapper"><a name=line627 onclick='overload_click(this)' class="a_ln">627<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:21265,ln:628}) id=l628><div class="dl_wrapper"><a name=line628 onclick='overload_click(this)' class="a_ln">628<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.TP 5
</div></div></div><div class="div_line"  data-info=({id:21266,ln:629}) id=l629><div class="dl_wrapper"><a name=line629 onclick='overload_click(this)' class="a_ln">629<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">\fB\-\-line\-directives\fP[=\fIyes\fP|\fIno\fP]
</div></div></div><div class="div_line"  data-info=({id:21267,ln:630}) id=l630><div class="dl_wrapper"><a name=line630 onclick='overload_click(this)' class="a_ln">630<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">Specifies whether "#line" directives should be recognized. These are present
</div></div></div><div class="div_line"  data-info=({id:21268,ln:631}) id=l631><div class="dl_wrapper"><a name=line631 onclick='overload_click(this)' class="a_ln">631<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">in the output of preprocessors and contain the line number, and possibly the
</div></div></div><div class="div_line"  data-info=({id:21269,ln:632}) id=l632><div class="dl_wrapper"><a name=line632 onclick='overload_click(this)' class="a_ln">632<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">file name, of the original source file(s) from which the preprocessor output
</div></div></div><div class="div_line"  data-info=({id:21270,ln:633}) id=l633><div class="dl_wrapper"><a name=line633 onclick='overload_click(this)' class="a_ln">633<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">file was generated. When enabled, this option will cause \fBctags\fP to
</div></div></div><div class="div_line"  data-info=({id:21271,ln:634}) id=l634><div class="dl_wrapper"><a name=line634 onclick='overload_click(this)' class="a_ln">634<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">generate tag entries marked with the file names and line numbers of their
</div></div></div><div class="div_line"  data-info=({id:21272,ln:635}) id=l635><div class="dl_wrapper"><a name=line635 onclick='overload_click(this)' class="a_ln">635<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">locations original source file(s), instead of their actual locations in the
</div></div></div><div class="div_line"  data-info=({id:21273,ln:636}) id=l636><div class="dl_wrapper"><a name=line636 onclick='overload_click(this)' class="a_ln">636<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">preprocessor output. The actual file names placed into the tag file will have
</div></div></div><div class="div_line"  data-info=({id:21274,ln:637}) id=l637><div class="dl_wrapper"><a name=line637 onclick='overload_click(this)' class="a_ln">637<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">the same leading path components as the preprocessor output file, since it is
</div></div></div><div class="div_line"  data-info=({id:21275,ln:638}) id=l638><div class="dl_wrapper"><a name=line638 onclick='overload_click(this)' class="a_ln">638<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">assumed that the original source files are located relative to the
</div></div></div><div class="div_line"  data-info=({id:21276,ln:639}) id=l639><div class="dl_wrapper"><a name=line639 onclick='overload_click(this)' class="a_ln">639<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">preprocessor output file (unless, of course, the #line directive specifies an
</div></div></div><div class="div_line"  data-info=({id:21277,ln:640}) id=l640><div class="dl_wrapper"><a name=line640 onclick='overload_click(this)' class="a_ln">640<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">absolute path). This option is off by default. \fBNote:\fP This option is
</div></div></div><div class="div_line"  data-info=({id:21278,ln:641}) id=l641><div class="dl_wrapper"><a name=line641 onclick='overload_click(this)' class="a_ln">641<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">generally only useful when used together with the \fB\-\-excmd\fP=\fInumber\fP
</div></div></div><div class="div_line"  data-info=({id:21279,ln:642}) id=l642><div class="dl_wrapper"><a name=line642 onclick='overload_click(this)' class="a_ln">642<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">(\fB\-n\fP) option. Also, you may have to use either the \fB\-\-langmap\fP or
</div></div></div><div class="div_line"  data-info=({id:21280,ln:643}) id=l643><div class="dl_wrapper"><a name=line643 onclick='overload_click(this)' class="a_ln">643<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">\fB\-\-language\-force\fP option if the extension of the preprocessor output file
</div></div></div><div class="div_line"  data-info=({id:21281,ln:644}) id=l644><div class="dl_wrapper"><a name=line644 onclick='overload_click(this)' class="a_ln">644<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">is not known to \fBctags\fP.
</div></div></div><div class="div_line"  data-info=({id:21282,ln:645}) id=l645><div class="dl_wrapper"><a name=line645 onclick='overload_click(this)' class="a_ln">645<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:21283,ln:646}) id=l646><div class="dl_wrapper"><a name=line646 onclick='overload_click(this)' class="a_ln">646<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.TP 5
</div></div></div><div class="div_line"  data-info=({id:21284,ln:647}) id=l647><div class="dl_wrapper"><a name=line647 onclick='overload_click(this)' class="a_ln">647<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">\fB\-\-links\fP[=\fIyes\fP|\fIno\fP]
</div></div></div><div class="div_line"  data-info=({id:21285,ln:648}) id=l648><div class="dl_wrapper"><a name=line648 onclick='overload_click(this)' class="a_ln">648<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">Indicates whether symbolic links (if supported) should be followed. When
</div></div></div><div class="div_line"  data-info=({id:21286,ln:649}) id=l649><div class="dl_wrapper"><a name=line649 onclick='overload_click(this)' class="a_ln">649<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">disabled, symbolic links are ignored. This option is on by default.
</div></div></div><div class="div_line"  data-info=({id:21287,ln:650}) id=l650><div class="dl_wrapper"><a name=line650 onclick='overload_click(this)' class="a_ln">650<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:21288,ln:651}) id=l651><div class="dl_wrapper"><a name=line651 onclick='overload_click(this)' class="a_ln">651<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.TP 5
</div></div></div><div class="div_line"  data-info=({id:21289,ln:652}) id=l652><div class="dl_wrapper"><a name=line652 onclick='overload_click(this)' class="a_ln">652<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">\fB\-\-list\-kinds\fP[=\fIlanguage\fP|\fIall\fP]
</div></div></div><div class="div_line"  data-info=({id:21290,ln:653}) id=l653><div class="dl_wrapper"><a name=line653 onclick='overload_click(this)' class="a_ln">653<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">Lists the tag kinds recognized for either the specified language or all
</div></div></div><div class="div_line"  data-info=({id:21291,ln:654}) id=l654><div class="dl_wrapper"><a name=line654 onclick='overload_click(this)' class="a_ln">654<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">languages, and then exits. Each kind of tag recorded in the tag file is
</div></div></div><div class="div_line"  data-info=({id:21292,ln:655}) id=l655><div class="dl_wrapper"><a name=line655 onclick='overload_click(this)' class="a_ln">655<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">represented by a one-letter flag, which is also used to filter the tags placed
</div></div></div><div class="div_line"  data-info=({id:21293,ln:656}) id=l656><div class="dl_wrapper"><a name=line656 onclick='overload_click(this)' class="a_ln">656<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">into the output through use of the \fB\-\-&lt;LANG&gt;\-kinds\fP option. Note that some
</div></div></div><div class="div_line"  data-info=({id:21294,ln:657}) id=l657><div class="dl_wrapper"><a name=line657 onclick='overload_click(this)' class="a_ln">657<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">languages and/or tag kinds may be implemented using regular expressions and
</div></div></div><div class="div_line"  data-info=({id:21295,ln:658}) id=l658><div class="dl_wrapper"><a name=line658 onclick='overload_click(this)' class="a_ln">658<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">may not be available if regex support is not compiled into \fBctags\fP (see
</div></div></div><div class="div_line"  data-info=({id:21296,ln:659}) id=l659><div class="dl_wrapper"><a name=line659 onclick='overload_click(this)' class="a_ln">659<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">the \fB\-\-regex\-&lt;LANG&gt;\fP option). Each kind listed is enabled unless followed
</div></div></div><div class="div_line"  data-info=({id:21297,ln:660}) id=l660><div class="dl_wrapper"><a name=line660 onclick='overload_click(this)' class="a_ln">660<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">by "[off]".
</div></div></div><div class="div_line"  data-info=({id:21298,ln:661}) id=l661><div class="dl_wrapper"><a name=line661 onclick='overload_click(this)' class="a_ln">661<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:21299,ln:662}) id=l662><div class="dl_wrapper"><a name=line662 onclick='overload_click(this)' class="a_ln">662<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.TP 5
</div></div></div><div class="div_line"  data-info=({id:21300,ln:663}) id=l663><div class="dl_wrapper"><a name=line663 onclick='overload_click(this)' class="a_ln">663<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">\fB\-\-list\-maps\fP[=\fIlanguage\fP|\fIall\fP]
</div></div></div><div class="div_line"  data-info=({id:21301,ln:664}) id=l664><div class="dl_wrapper"><a name=line664 onclick='overload_click(this)' class="a_ln">664<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">Lists the file extensions and file name patterns which associate a file name
</div></div></div><div class="div_line"  data-info=({id:21302,ln:665}) id=l665><div class="dl_wrapper"><a name=line665 onclick='overload_click(this)' class="a_ln">665<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">with a language for either the specified language or all languages, and then
</div></div></div><div class="div_line"  data-info=({id:21303,ln:666}) id=l666><div class="dl_wrapper"><a name=line666 onclick='overload_click(this)' class="a_ln">666<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">exits. See the \fB\-\-langmap\fP option, and \fBSOURCE FILES\fP, above.
</div></div></div><div class="div_line"  data-info=({id:21304,ln:667}) id=l667><div class="dl_wrapper"><a name=line667 onclick='overload_click(this)' class="a_ln">667<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:21305,ln:668}) id=l668><div class="dl_wrapper"><a name=line668 onclick='overload_click(this)' class="a_ln">668<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.TP 5
</div></div></div><div class="div_line"  data-info=({id:21306,ln:669}) id=l669><div class="dl_wrapper"><a name=line669 onclick='overload_click(this)' class="a_ln">669<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">\fB\-\-list\-languages\fP
</div></div></div><div class="div_line"  data-info=({id:21307,ln:670}) id=l670><div class="dl_wrapper"><a name=line670 onclick='overload_click(this)' class="a_ln">670<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">Lists the names of the languages understood by \fBctags\fP, and then exits.
</div></div></div><div class="div_line"  data-info=({id:21308,ln:671}) id=l671><div class="dl_wrapper"><a name=line671 onclick='overload_click(this)' class="a_ln">671<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">These language names are case insensitive and may be used in the
</div></div></div><div class="div_line"  data-info=({id:21309,ln:672}) id=l672><div class="dl_wrapper"><a name=line672 onclick='overload_click(this)' class="a_ln">672<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">\fB\-\-language\-force\fP, \fB\-\-languages\fP, \fB\-\-&lt;LANG&gt;\-kinds\fP, and
</div></div></div><div class="div_line"  data-info=({id:21310,ln:673}) id=l673><div class="dl_wrapper"><a name=line673 onclick='overload_click(this)' class="a_ln">673<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">\fB\-\-regex\-&lt;LANG&gt;\fP options.
</div></div></div><div class="div_line"  data-info=({id:21311,ln:674}) id=l674><div class="dl_wrapper"><a name=line674 onclick='overload_click(this)' class="a_ln">674<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:21312,ln:675}) id=l675><div class="dl_wrapper"><a name=line675 onclick='overload_click(this)' class="a_ln">675<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.TP 5
</div></div></div><div class="div_line"  data-info=({id:21313,ln:676}) id=l676><div class="dl_wrapper"><a name=line676 onclick='overload_click(this)' class="a_ln">676<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">\fB\-\-options\fP=\fIfile\fP
</div></div></div><div class="div_line"  data-info=({id:21314,ln:677}) id=l677><div class="dl_wrapper"><a name=line677 onclick='overload_click(this)' class="a_ln">677<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">Read additional options from \fIfile\fP. The file should contain one option
</div></div></div><div class="div_line"  data-info=({id:21315,ln:678}) id=l678><div class="dl_wrapper"><a name=line678 onclick='overload_click(this)' class="a_ln">678<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">per line. As a special case, if
</div></div></div><div class="div_line"  data-info=({id:21316,ln:679}) id=l679><div class="dl_wrapper"><a name=line679 onclick='overload_click(this)' class="a_ln">679<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">\fB\-\-options\fP=\fINONE\fP is specified as the first option on the command
</div></div></div><div class="div_line"  data-info=({id:21317,ln:680}) id=l680><div class="dl_wrapper"><a name=line680 onclick='overload_click(this)' class="a_ln">680<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">line, it will disable the automatic reading of any configuration options from
</div></div></div><div class="div_line"  data-info=({id:21318,ln:681}) id=l681><div class="dl_wrapper"><a name=line681 onclick='overload_click(this)' class="a_ln">681<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">either a file or the environment (see \fBFILES\fP).
</div></div></div><div class="div_line"  data-info=({id:21319,ln:682}) id=l682><div class="dl_wrapper"><a name=line682 onclick='overload_click(this)' class="a_ln">682<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:21320,ln:683}) id=l683><div class="dl_wrapper"><a name=line683 onclick='overload_click(this)' class="a_ln">683<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.TP 5
</div></div></div><div class="div_line"  data-info=({id:21321,ln:684}) id=l684><div class="dl_wrapper"><a name=line684 onclick='overload_click(this)' class="a_ln">684<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">\fB\-\-recurse\fP[=\fIyes\fP|\fIno\fP]
</div></div></div><div class="div_line"  data-info=({id:21322,ln:685}) id=l685><div class="dl_wrapper"><a name=line685 onclick='overload_click(this)' class="a_ln">685<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">Recurse into directories encountered in the list of supplied files. If the
</div></div></div><div class="div_line"  data-info=({id:21323,ln:686}) id=l686><div class="dl_wrapper"><a name=line686 onclick='overload_click(this)' class="a_ln">686<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">list of supplied files is empty and no file list is specified with the
</div></div></div><div class="div_line"  data-info=({id:21324,ln:687}) id=l687><div class="dl_wrapper"><a name=line687 onclick='overload_click(this)' class="a_ln">687<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">\fB\-L\fP option, then the current directory (i.e. ".") is assumed. Symbolic
</div></div></div><div class="div_line"  data-info=({id:21325,ln:688}) id=l688><div class="dl_wrapper"><a name=line688 onclick='overload_click(this)' class="a_ln">688<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">links are followed. If you don't like these behaviors, either explicitly
</div></div></div><div class="div_line"  data-info=({id:21326,ln:689}) id=l689><div class="dl_wrapper"><a name=line689 onclick='overload_click(this)' class="a_ln">689<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">specify the files or pipe the output of \fBfind\fP(1) into \fBctags \-L\-\fP
</div></div></div><div class="div_line"  data-info=({id:21327,ln:690}) id=l690><div class="dl_wrapper"><a name=line690 onclick='overload_click(this)' class="a_ln">690<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">instead. \fBNote:\fP This option is not supported on all platforms at present.
</div></div></div><div class="div_line"  data-info=({id:21328,ln:691}) id=l691><div class="dl_wrapper"><a name=line691 onclick='overload_click(this)' class="a_ln">691<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">It is available if the output of the \fB\-\-help\fP option includes this option.
</div></div></div><div class="div_line"  data-info=({id:21329,ln:692}) id=l692><div class="dl_wrapper"><a name=line692 onclick='overload_click(this)' class="a_ln">692<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">See, also, the \fB\-\-exclude\fP to limit recursion.
</div></div></div><div class="div_line"  data-info=({id:21330,ln:693}) id=l693><div class="dl_wrapper"><a name=line693 onclick='overload_click(this)' class="a_ln">693<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:21331,ln:694}) id=l694><div class="dl_wrapper"><a name=line694 onclick='overload_click(this)' class="a_ln">694<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.TP 5
</div></div></div><div class="div_line"  data-info=({id:21332,ln:695}) id=l695><div class="dl_wrapper"><a name=line695 onclick='overload_click(this)' class="a_ln">695<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">\fB\-\-regex\-&lt;LANG&gt;\fP=\fI/regexp/replacement/[kind\-spec/][flags]\fP
</div></div></div><div class="div_line"  data-info=({id:21333,ln:696}) id=l696><div class="dl_wrapper"><a name=line696 onclick='overload_click(this)' class="a_ln">696<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">The \fI/regexp/replacement/\fP pair define a regular expression replacement
</div></div></div><div class="div_line"  data-info=({id:21334,ln:697}) id=l697><div class="dl_wrapper"><a name=line697 onclick='overload_click(this)' class="a_ln">697<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">pattern, similar in style to \fBsed\fP substitution commands, with which to
</div></div></div><div class="div_line"  data-info=({id:21335,ln:698}) id=l698><div class="dl_wrapper"><a name=line698 onclick='overload_click(this)' class="a_ln">698<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">generate tags from source files mapped to the named language, \fB&lt;LANG&gt;\fP,
</div></div></div><div class="div_line"  data-info=({id:21336,ln:699}) id=l699><div class="dl_wrapper"><a name=line699 onclick='overload_click(this)' class="a_ln">699<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">(case-insensitive; either a built-in or user-defined language). The regular
</div></div></div><div class="div_line"  data-info=({id:21337,ln:700}) id=l700><div class="dl_wrapper"><a name=line700 onclick='overload_click(this)' class="a_ln">700<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">expression, \fIregexp\fP, defines an extended regular expression (roughly that
</div></div></div><div class="div_line"  data-info=({id:21338,ln:701}) id=l701><div class="dl_wrapper"><a name=line701 onclick='overload_click(this)' class="a_ln">701<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">used by \fBegrep\fP(1)), which is used to locate a single source line
</div></div></div><div class="div_line"  data-info=({id:21339,ln:702}) id=l702><div class="dl_wrapper"><a name=line702 onclick='overload_click(this)' class="a_ln">702<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">containing a tag and may specify tab characters using \\t. When a matching
</div></div></div><div class="div_line"  data-info=({id:21340,ln:703}) id=l703><div class="dl_wrapper"><a name=line703 onclick='overload_click(this)' class="a_ln">703<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">line is found, a tag will be generated for the name defined by
</div></div></div><div class="div_line"  data-info=({id:21341,ln:704}) id=l704><div class="dl_wrapper"><a name=line704 onclick='overload_click(this)' class="a_ln">704<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">\fIreplacement\fP, which generally will contain the special back-references
</div></div></div><div class="div_line"  data-info=({id:21342,ln:705}) id=l705><div class="dl_wrapper"><a name=line705 onclick='overload_click(this)' class="a_ln">705<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">\\1 through \\9 to refer to matching sub-expression groups within
</div></div></div><div class="div_line"  data-info=({id:21343,ln:706}) id=l706><div class="dl_wrapper"><a name=line706 onclick='overload_click(this)' class="a_ln">706<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">\fIregexp\fP. The '/' separator characters shown in the parameter to the
</div></div></div><div class="div_line"  data-info=({id:21344,ln:707}) id=l707><div class="dl_wrapper"><a name=line707 onclick='overload_click(this)' class="a_ln">707<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">option can actually be replaced by any character. Note that whichever
</div></div></div><div class="div_line"  data-info=({id:21345,ln:708}) id=l708><div class="dl_wrapper"><a name=line708 onclick='overload_click(this)' class="a_ln">708<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">separator character is used will have to be escaped with a backslash ('\\')
</div></div></div><div class="div_line"  data-info=({id:21346,ln:709}) id=l709><div class="dl_wrapper"><a name=line709 onclick='overload_click(this)' class="a_ln">709<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">character wherever it is used in the parameter as something other than a
</div></div></div><div class="div_line"  data-info=({id:21347,ln:710}) id=l710><div class="dl_wrapper"><a name=line710 onclick='overload_click(this)' class="a_ln">710<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">separator. The regular expression defined by this option is added to the
</div></div></div><div class="div_line"  data-info=({id:21348,ln:711}) id=l711><div class="dl_wrapper"><a name=line711 onclick='overload_click(this)' class="a_ln">711<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">current list of regular expressions for the specified language unless the
</div></div></div><div class="div_line"  data-info=({id:21349,ln:712}) id=l712><div class="dl_wrapper"><a name=line712 onclick='overload_click(this)' class="a_ln">712<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">parameter is omitted, in which case the current list is cleared.
</div></div></div><div class="div_line"  data-info=({id:21350,ln:713}) id=l713><div class="dl_wrapper"><a name=line713 onclick='overload_click(this)' class="a_ln">713<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:21351,ln:714}) id=l714><div class="dl_wrapper"><a name=line714 onclick='overload_click(this)' class="a_ln">714<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">Unless modified by \fIflags\fP, \fIregexp\fP is interpreted as a Posix
</div></div></div><div class="div_line"  data-info=({id:21352,ln:715}) id=l715><div class="dl_wrapper"><a name=line715 onclick='overload_click(this)' class="a_ln">715<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">extended regular expression. The \fIreplacement\fP should expand for all
</div></div></div><div class="div_line"  data-info=({id:21353,ln:716}) id=l716><div class="dl_wrapper"><a name=line716 onclick='overload_click(this)' class="a_ln">716<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">matching lines to a non-empty string of characters, or a warning message will
</div></div></div><div class="div_line"  data-info=({id:21354,ln:717}) id=l717><div class="dl_wrapper"><a name=line717 onclick='overload_click(this)' class="a_ln">717<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">be reported. An optional kind specifier for tags matching \fIregexp\fP may
</div></div></div><div class="div_line"  data-info=({id:21355,ln:718}) id=l718><div class="dl_wrapper"><a name=line718 onclick='overload_click(this)' class="a_ln">718<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">follow \fIreplacement\fP, which will determine what kind of tag is reported in
</div></div></div><div class="div_line"  data-info=({id:21356,ln:719}) id=l719><div class="dl_wrapper"><a name=line719 onclick='overload_click(this)' class="a_ln">719<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">the "kind" extension field (see \fBTAG FILE FORMAT\fP, below). The full form
</div></div></div><div class="div_line"  data-info=({id:21357,ln:720}) id=l720><div class="dl_wrapper"><a name=line720 onclick='overload_click(this)' class="a_ln">720<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">of \fIkind\-spec\fP is in the form of a single letter, a comma, a name (without
</div></div></div><div class="div_line"  data-info=({id:21358,ln:721}) id=l721><div class="dl_wrapper"><a name=line721 onclick='overload_click(this)' class="a_ln">721<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">spaces), a comma, a description, followed by a separator, which specify
</div></div></div><div class="div_line"  data-info=({id:21359,ln:722}) id=l722><div class="dl_wrapper"><a name=line722 onclick='overload_click(this)' class="a_ln">722<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">the short and long forms of the kind value and its textual description
</div></div></div><div class="div_line"  data-info=({id:21360,ln:723}) id=l723><div class="dl_wrapper"><a name=line723 onclick='overload_click(this)' class="a_ln">723<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">(displayed using \fB\-\-list\-kinds\fP). Either the kind name and/or the
</div></div></div><div class="div_line"  data-info=({id:21361,ln:724}) id=l724><div class="dl_wrapper"><a name=line724 onclick='overload_click(this)' class="a_ln">724<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">description may be omitted. If \fIkind\-spec\fP is omitted, it defaults to
</div></div></div><div class="div_line"  data-info=({id:21362,ln:725}) id=l725><div class="dl_wrapper"><a name=line725 onclick='overload_click(this)' class="a_ln">725<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">"\fIr,regex\fP". Finally, \fIflags\fP are one or more single-letter characters
</div></div></div><div class="div_line"  data-info=({id:21363,ln:726}) id=l726><div class="dl_wrapper"><a name=line726 onclick='overload_click(this)' class="a_ln">726<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">having the following effect upon the interpretation of \fIregexp\fP:
</div></div></div><div class="div_line"  data-info=({id:21364,ln:727}) id=l727><div class="dl_wrapper"><a name=line727 onclick='overload_click(this)' class="a_ln">727<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:21365,ln:728}) id=l728><div class="dl_wrapper"><a name=line728 onclick='overload_click(this)' class="a_ln">728<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.PP
</div></div></div><div class="div_line"  data-info=({id:21366,ln:729}) id=l729><div class="dl_wrapper"><a name=line729 onclick='overload_click(this)' class="a_ln">729<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.RS 8
</div></div></div><div class="div_line"  data-info=({id:21367,ln:730}) id=l730><div class="dl_wrapper"><a name=line730 onclick='overload_click(this)' class="a_ln">730<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.TP 4
</div></div></div><div class="div_line"  data-info=({id:21368,ln:731}) id=l731><div class="dl_wrapper"><a name=line731 onclick='overload_click(this)' class="a_ln">731<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.I b
</div></div></div><div class="div_line"  data-info=({id:21369,ln:732}) id=l732><div class="dl_wrapper"><a name=line732 onclick='overload_click(this)' class="a_ln">732<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">The pattern is interpreted as a Posix basic regular expression.
</div></div></div><div class="div_line"  data-info=({id:21370,ln:733}) id=l733><div class="dl_wrapper"><a name=line733 onclick='overload_click(this)' class="a_ln">733<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.TP 4
</div></div></div><div class="div_line"  data-info=({id:21371,ln:734}) id=l734><div class="dl_wrapper"><a name=line734 onclick='overload_click(this)' class="a_ln">734<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.I e
</div></div></div><div class="div_line"  data-info=({id:21372,ln:735}) id=l735><div class="dl_wrapper"><a name=line735 onclick='overload_click(this)' class="a_ln">735<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">The pattern is interpreted as a Posix extended regular expression (default).
</div></div></div><div class="div_line"  data-info=({id:21373,ln:736}) id=l736><div class="dl_wrapper"><a name=line736 onclick='overload_click(this)' class="a_ln">736<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.TP 4
</div></div></div><div class="div_line"  data-info=({id:21374,ln:737}) id=l737><div class="dl_wrapper"><a name=line737 onclick='overload_click(this)' class="a_ln">737<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.I i
</div></div></div><div class="div_line"  data-info=({id:21375,ln:738}) id=l738><div class="dl_wrapper"><a name=line738 onclick='overload_click(this)' class="a_ln">738<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">The regular expression is to be applied in a case-insensitive manner.
</div></div></div><div class="div_line"  data-info=({id:21376,ln:739}) id=l739><div class="dl_wrapper"><a name=line739 onclick='overload_click(this)' class="a_ln">739<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.RE
</div></div></div><div class="div_line"  data-info=({id:21377,ln:740}) id=l740><div class="dl_wrapper"><a name=line740 onclick='overload_click(this)' class="a_ln">740<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:21378,ln:741}) id=l741><div class="dl_wrapper"><a name=line741 onclick='overload_click(this)' class="a_ln">741<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.RS 5
</div></div></div><div class="div_line"  data-info=({id:21379,ln:742}) id=l742><div class="dl_wrapper"><a name=line742 onclick='overload_click(this)' class="a_ln">742<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">Note that this option is available only if \fBctags\fP was compiled with
</div></div></div><div class="div_line"  data-info=({id:21380,ln:743}) id=l743><div class="dl_wrapper"><a name=line743 onclick='overload_click(this)' class="a_ln">743<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">support for regular expressions, which depends upon your platform. You can
</div></div></div><div class="div_line"  data-info=({id:21381,ln:744}) id=l744><div class="dl_wrapper"><a name=line744 onclick='overload_click(this)' class="a_ln">744<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">determine if support for regular expressions is compiled in by examining the
</div></div></div><div class="div_line"  data-info=({id:21382,ln:745}) id=l745><div class="dl_wrapper"><a name=line745 onclick='overload_click(this)' class="a_ln">745<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">output of the \fB\-\-version\fP option, which will include "+regex" in the
</div></div></div><div class="div_line"  data-info=({id:21383,ln:746}) id=l746><div class="dl_wrapper"><a name=line746 onclick='overload_click(this)' class="a_ln">746<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">compiled feature list.
</div></div></div><div class="div_line"  data-info=({id:21384,ln:747}) id=l747><div class="dl_wrapper"><a name=line747 onclick='overload_click(this)' class="a_ln">747<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:21385,ln:748}) id=l748><div class="dl_wrapper"><a name=line748 onclick='overload_click(this)' class="a_ln">748<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">For more information on the regular expressions used by \fBctags\fP, see
</div></div></div><div class="div_line"  data-info=({id:21386,ln:749}) id=l749><div class="dl_wrapper"><a name=line749 onclick='overload_click(this)' class="a_ln">749<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">either the \fBregex(5,7)\fP man page, or the GNU info documentation for regex
</div></div></div><div class="div_line"  data-info=({id:21387,ln:750}) id=l750><div class="dl_wrapper"><a name=line750 onclick='overload_click(this)' class="a_ln">750<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">(e.g. "info regex").
</div></div></div><div class="div_line"  data-info=({id:21388,ln:751}) id=l751><div class="dl_wrapper"><a name=line751 onclick='overload_click(this)' class="a_ln">751<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.RE
</div></div></div><div class="div_line"  data-info=({id:21389,ln:752}) id=l752><div class="dl_wrapper"><a name=line752 onclick='overload_click(this)' class="a_ln">752<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:21390,ln:753}) id=l753><div class="dl_wrapper"><a name=line753 onclick='overload_click(this)' class="a_ln">753<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.TP 5
</div></div></div><div class="div_line"  data-info=({id:21391,ln:754}) id=l754><div class="dl_wrapper"><a name=line754 onclick='overload_click(this)' class="a_ln">754<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">\fB\-\-sort\fP[=\fIyes\fP|\fIno\fP|\fIfoldcase\fP]
</div></div></div><div class="div_line"  data-info=({id:21392,ln:755}) id=l755><div class="dl_wrapper"><a name=line755 onclick='overload_click(this)' class="a_ln">755<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">Indicates whether the tag file should be sorted on the tag name (default is
</div></div></div><div class="div_line"  data-info=({id:21393,ln:756}) id=l756><div class="dl_wrapper"><a name=line756 onclick='overload_click(this)' class="a_ln">756<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">\fIyes\fP). Note that the original \fBvi\fP(1) required sorted tags. 
</div></div></div><div class="div_line"  data-info=({id:21394,ln:757}) id=l757><div class="dl_wrapper"><a name=line757 onclick='overload_click(this)' class="a_ln">757<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">The \fIfoldcase\fP value specifies case insensitive (or case-folded) sorting.
</div></div></div><div class="div_line"  data-info=({id:21395,ln:758}) id=l758><div class="dl_wrapper"><a name=line758 onclick='overload_click(this)' class="a_ln">758<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">Fast binary searches of tag files sorted with case-folding will require
</div></div></div><div class="div_line"  data-info=({id:21396,ln:759}) id=l759><div class="dl_wrapper"><a name=line759 onclick='overload_click(this)' class="a_ln">759<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">special support from tools using tag files, such as that found in the ctags
</div></div></div><div class="div_line"  data-info=({id:21397,ln:760}) id=l760><div class="dl_wrapper"><a name=line760 onclick='overload_click(this)' class="a_ln">760<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">readtags library, or Vim version 6.2 or higher (using "set ignorecase"). This
</div></div></div><div class="div_line"  data-info=({id:21398,ln:761}) id=l761><div class="dl_wrapper"><a name=line761 onclick='overload_click(this)' class="a_ln">761<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">option must appear before the first file name. [Ignored in etags mode]
</div></div></div><div class="div_line"  data-info=({id:21399,ln:762}) id=l762><div class="dl_wrapper"><a name=line762 onclick='overload_click(this)' class="a_ln">762<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:21400,ln:763}) id=l763><div class="dl_wrapper"><a name=line763 onclick='overload_click(this)' class="a_ln">763<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.TP 5
</div></div></div><div class="div_line"  data-info=({id:21401,ln:764}) id=l764><div class="dl_wrapper"><a name=line764 onclick='overload_click(this)' class="a_ln">764<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">\fB\-\-tag\-relative\fP[=\fIyes\fP|\fIno\fP]
</div></div></div><div class="div_line"  data-info=({id:21402,ln:765}) id=l765><div class="dl_wrapper"><a name=line765 onclick='overload_click(this)' class="a_ln">765<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">Indicates that the file paths recorded in the tag file should be relative to
</div></div></div><div class="div_line"  data-info=({id:21403,ln:766}) id=l766><div class="dl_wrapper"><a name=line766 onclick='overload_click(this)' class="a_ln">766<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">the directory containing the tag file, rather than relative to the current
</div></div></div><div class="div_line"  data-info=({id:21404,ln:767}) id=l767><div class="dl_wrapper"><a name=line767 onclick='overload_click(this)' class="a_ln">767<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">directory, unless the files supplied on the command line are specified with
</div></div></div><div class="div_line"  data-info=({id:21405,ln:768}) id=l768><div class="dl_wrapper"><a name=line768 onclick='overload_click(this)' class="a_ln">768<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">absolute paths. This option must appear before the first file name. The
</div></div></div><div class="div_line"  data-info=({id:21406,ln:769}) id=l769><div class="dl_wrapper"><a name=line769 onclick='overload_click(this)' class="a_ln">769<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">default is \fIyes\fP when running in etags mode (see the \fB\-e\fP
</div></div></div><div class="div_line"  data-info=({id:21407,ln:770}) id=l770><div class="dl_wrapper"><a name=line770 onclick='overload_click(this)' class="a_ln">770<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">option), \fIno\fP otherwise.
</div></div></div><div class="div_line"  data-info=({id:21408,ln:771}) id=l771><div class="dl_wrapper"><a name=line771 onclick='overload_click(this)' class="a_ln">771<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:21409,ln:772}) id=l772><div class="dl_wrapper"><a name=line772 onclick='overload_click(this)' class="a_ln">772<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.TP 5
</div></div></div><div class="div_line"  data-info=({id:21410,ln:773}) id=l773><div class="dl_wrapper"><a name=line773 onclick='overload_click(this)' class="a_ln">773<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">\fB\-\-totals\fP[=\fIyes\fP|\fIno\fP]
</div></div></div><div class="div_line"  data-info=({id:21411,ln:774}) id=l774><div class="dl_wrapper"><a name=line774 onclick='overload_click(this)' class="a_ln">774<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">Prints statistics about the source files read and the tag file written during
</div></div></div><div class="div_line"  data-info=({id:21412,ln:775}) id=l775><div class="dl_wrapper"><a name=line775 onclick='overload_click(this)' class="a_ln">775<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">the current invocation of \fBctags\fP. This option is off by default.
</div></div></div><div class="div_line"  data-info=({id:21413,ln:776}) id=l776><div class="dl_wrapper"><a name=line776 onclick='overload_click(this)' class="a_ln">776<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">This option must appear before the first file name.
</div></div></div><div class="div_line"  data-info=({id:21414,ln:777}) id=l777><div class="dl_wrapper"><a name=line777 onclick='overload_click(this)' class="a_ln">777<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:21415,ln:778}) id=l778><div class="dl_wrapper"><a name=line778 onclick='overload_click(this)' class="a_ln">778<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.TP 5
</div></div></div><div class="div_line"  data-info=({id:21416,ln:779}) id=l779><div class="dl_wrapper"><a name=line779 onclick='overload_click(this)' class="a_ln">779<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">\fB\-\-verbose\fP[=\fIyes\fP|\fIno\fP]
</div></div></div><div class="div_line"  data-info=({id:21417,ln:780}) id=l780><div class="dl_wrapper"><a name=line780 onclick='overload_click(this)' class="a_ln">780<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">Enable verbose mode. This prints out information on option processing and a
</div></div></div><div class="div_line"  data-info=({id:21418,ln:781}) id=l781><div class="dl_wrapper"><a name=line781 onclick='overload_click(this)' class="a_ln">781<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">brief message describing what action is being taken for each file considered
</div></div></div><div class="div_line"  data-info=({id:21419,ln:782}) id=l782><div class="dl_wrapper"><a name=line782 onclick='overload_click(this)' class="a_ln">782<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">by \fBctags\fP. Normally, \fBctags\fP does not read command line arguments
</div></div></div><div class="div_line"  data-info=({id:21420,ln:783}) id=l783><div class="dl_wrapper"><a name=line783 onclick='overload_click(this)' class="a_ln">783<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">until after options are read from the configuration files (see \fBFILES\fP,
</div></div></div><div class="div_line"  data-info=({id:21421,ln:784}) id=l784><div class="dl_wrapper"><a name=line784 onclick='overload_click(this)' class="a_ln">784<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">below) and the \fBCTAGS\fP environment variable. However, if this option is
</div></div></div><div class="div_line"  data-info=({id:21422,ln:785}) id=l785><div class="dl_wrapper"><a name=line785 onclick='overload_click(this)' class="a_ln">785<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">the first argument on the command line, it will take effect before any options
</div></div></div><div class="div_line"  data-info=({id:21423,ln:786}) id=l786><div class="dl_wrapper"><a name=line786 onclick='overload_click(this)' class="a_ln">786<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">are read from these sources. The default is \fIno\fP.
</div></div></div><div class="div_line"  data-info=({id:21424,ln:787}) id=l787><div class="dl_wrapper"><a name=line787 onclick='overload_click(this)' class="a_ln">787<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:21425,ln:788}) id=l788><div class="dl_wrapper"><a name=line788 onclick='overload_click(this)' class="a_ln">788<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.TP 5
</div></div></div><div class="div_line"  data-info=({id:21426,ln:789}) id=l789><div class="dl_wrapper"><a name=line789 onclick='overload_click(this)' class="a_ln">789<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">\fB\-\-version\fP
</div></div></div><div class="div_line"  data-info=({id:21427,ln:790}) id=l790><div class="dl_wrapper"><a name=line790 onclick='overload_click(this)' class="a_ln">790<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">Prints a version identifier for \fBctags\fP to standard output, and then
</div></div></div><div class="div_line"  data-info=({id:21428,ln:791}) id=l791><div class="dl_wrapper"><a name=line791 onclick='overload_click(this)' class="a_ln">791<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">exits. This is guaranteed to always contain the string "Exuberant Ctags".
</div></div></div><div class="div_line"  data-info=({id:21429,ln:792}) id=l792><div class="dl_wrapper"><a name=line792 onclick='overload_click(this)' class="a_ln">792<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:21430,ln:793}) id=l793><div class="dl_wrapper"><a name=line793 onclick='overload_click(this)' class="a_ln">793<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:21431,ln:794}) id=l794><div class="dl_wrapper"><a name=line794 onclick='overload_click(this)' class="a_ln">794<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.SH "OPERATIONAL DETAILS"
</div></div></div><div class="div_line"  data-info=({id:21432,ln:795}) id=l795><div class="dl_wrapper"><a name=line795 onclick='overload_click(this)' class="a_ln">795<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:21433,ln:796}) id=l796><div class="dl_wrapper"><a name=line796 onclick='overload_click(this)' class="a_ln">796<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">As \fBctags\fP considers each file name in turn, it tries to determine the
</div></div></div><div class="div_line"  data-info=({id:21434,ln:797}) id=l797><div class="dl_wrapper"><a name=line797 onclick='overload_click(this)' class="a_ln">797<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">language of the file by applying the following three tests in order: if the
</div></div></div><div class="div_line"  data-info=({id:21435,ln:798}) id=l798><div class="dl_wrapper"><a name=line798 onclick='overload_click(this)' class="a_ln">798<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">file extension has been mapped to a language, if the file name matches a shell
</div></div></div><div class="div_line"  data-info=({id:21436,ln:799}) id=l799><div class="dl_wrapper"><a name=line799 onclick='overload_click(this)' class="a_ln">799<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">pattern mapped to a language, and finally if the file is executable and its
</div></div></div><div class="div_line"  data-info=({id:21437,ln:800}) id=l800><div class="dl_wrapper"><a name=line800 onclick='overload_click(this)' class="a_ln">800<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">first line specifies an interpreter using the Unix-style "#!" specification
</div></div></div><div class="div_line"  data-info=({id:21438,ln:801}) id=l801><div class="dl_wrapper"><a name=line801 onclick='overload_click(this)' class="a_ln">801<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">(if supported on the platform). If a language was identified, the file is
</div></div></div><div class="div_line"  data-info=({id:21439,ln:802}) id=l802><div class="dl_wrapper"><a name=line802 onclick='overload_click(this)' class="a_ln">802<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">opened and then the appropriate language parser is called to operate on the
</div></div></div><div class="div_line"  data-info=({id:21440,ln:803}) id=l803><div class="dl_wrapper"><a name=line803 onclick='overload_click(this)' class="a_ln">803<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">currently open file. The parser parses through the file and adds an entry to
</div></div></div><div class="div_line"  data-info=({id:21441,ln:804}) id=l804><div class="dl_wrapper"><a name=line804 onclick='overload_click(this)' class="a_ln">804<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">the tag file for each language object it is written to handle. See
</div></div></div><div class="div_line"  data-info=({id:21442,ln:805}) id=l805><div class="dl_wrapper"><a name=line805 onclick='overload_click(this)' class="a_ln">805<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">\fBTAG FILE FORMAT\fP, below, for details on these entries.
</div></div></div><div class="div_line"  data-info=({id:21443,ln:806}) id=l806><div class="dl_wrapper"><a name=line806 onclick='overload_click(this)' class="a_ln">806<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:21444,ln:807}) id=l807><div class="dl_wrapper"><a name=line807 onclick='overload_click(this)' class="a_ln">807<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">This implementation of \fBctags\fP imposes no formatting requirements on C
</div></div></div><div class="div_line"  data-info=({id:21445,ln:808}) id=l808><div class="dl_wrapper"><a name=line808 onclick='overload_click(this)' class="a_ln">808<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">code as do legacy implementations. Older implementations of ctags tended to
</div></div></div><div class="div_line"  data-info=({id:21446,ln:809}) id=l809><div class="dl_wrapper"><a name=line809 onclick='overload_click(this)' class="a_ln">809<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">rely upon certain formatting assumptions in order to help it resolve coding
</div></div></div><div class="div_line"  data-info=({id:21447,ln:810}) id=l810><div class="dl_wrapper"><a name=line810 onclick='overload_click(this)' class="a_ln">810<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">dilemmas caused by preprocessor conditionals.
</div></div></div><div class="div_line"  data-info=({id:21448,ln:811}) id=l811><div class="dl_wrapper"><a name=line811 onclick='overload_click(this)' class="a_ln">811<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:21449,ln:812}) id=l812><div class="dl_wrapper"><a name=line812 onclick='overload_click(this)' class="a_ln">812<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">In general, \fBctags\fP tries to be smart about conditional preprocessor
</div></div></div><div class="div_line"  data-info=({id:21450,ln:813}) id=l813><div class="dl_wrapper"><a name=line813 onclick='overload_click(this)' class="a_ln">813<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">directives. If a preprocessor conditional is encountered within a statement
</div></div></div><div class="div_line"  data-info=({id:21451,ln:814}) id=l814><div class="dl_wrapper"><a name=line814 onclick='overload_click(this)' class="a_ln">814<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">which defines a tag, \fBctags\fP follows only the first branch of that
</div></div></div><div class="div_line"  data-info=({id:21452,ln:815}) id=l815><div class="dl_wrapper"><a name=line815 onclick='overload_click(this)' class="a_ln">815<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">conditional (except in the special case of "#if 0", in which case it follows
</div></div></div><div class="div_line"  data-info=({id:21453,ln:816}) id=l816><div class="dl_wrapper"><a name=line816 onclick='overload_click(this)' class="a_ln">816<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">only the last branch). The reason for this is that failing to pursue only one
</div></div></div><div class="div_line"  data-info=({id:21454,ln:817}) id=l817><div class="dl_wrapper"><a name=line817 onclick='overload_click(this)' class="a_ln">817<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">branch can result in ambiguous syntax, as in the following example:
</div></div></div><div class="div_line"  data-info=({id:21455,ln:818}) id=l818><div class="dl_wrapper"><a name=line818 onclick='overload_click(this)' class="a_ln">818<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:21456,ln:819}) id=l819><div class="dl_wrapper"><a name=line819 onclick='overload_click(this)' class="a_ln">819<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.RS
</div></div></div><div class="div_line"  data-info=({id:21457,ln:820}) id=l820><div class="dl_wrapper"><a name=line820 onclick='overload_click(this)' class="a_ln">820<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">#ifdef TWO_ALTERNATIVES
</div></div></div><div class="div_line"  data-info=({id:21458,ln:821}) id=l821><div class="dl_wrapper"><a name=line821 onclick='overload_click(this)' class="a_ln">821<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.br
</div></div></div><div class="div_line"  data-info=({id:21459,ln:822}) id=l822><div class="dl_wrapper"><a name=line822 onclick='overload_click(this)' class="a_ln">822<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">struct {
</div></div></div><div class="div_line"  data-info=({id:21460,ln:823}) id=l823><div class="dl_wrapper"><a name=line823 onclick='overload_click(this)' class="a_ln">823<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.br
</div></div></div><div class="div_line"  data-info=({id:21461,ln:824}) id=l824><div class="dl_wrapper"><a name=line824 onclick='overload_click(this)' class="a_ln">824<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">#else
</div></div></div><div class="div_line"  data-info=({id:21462,ln:825}) id=l825><div class="dl_wrapper"><a name=line825 onclick='overload_click(this)' class="a_ln">825<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.br
</div></div></div><div class="div_line"  data-info=({id:21463,ln:826}) id=l826><div class="dl_wrapper"><a name=line826 onclick='overload_click(this)' class="a_ln">826<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">union {
</div></div></div><div class="div_line"  data-info=({id:21464,ln:827}) id=l827><div class="dl_wrapper"><a name=line827 onclick='overload_click(this)' class="a_ln">827<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.br
</div></div></div><div class="div_line"  data-info=({id:21465,ln:828}) id=l828><div class="dl_wrapper"><a name=line828 onclick='overload_click(this)' class="a_ln">828<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">#endif
</div></div></div><div class="div_line"  data-info=({id:21466,ln:829}) id=l829><div class="dl_wrapper"><a name=line829 onclick='overload_click(this)' class="a_ln">829<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.RS 4
</div></div></div><div class="div_line"  data-info=({id:21467,ln:830}) id=l830><div class="dl_wrapper"><a name=line830 onclick='overload_click(this)' class="a_ln">830<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">short a;
</div></div></div><div class="div_line"  data-info=({id:21468,ln:831}) id=l831><div class="dl_wrapper"><a name=line831 onclick='overload_click(this)' class="a_ln">831<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.br
</div></div></div><div class="div_line"  data-info=({id:21469,ln:832}) id=l832><div class="dl_wrapper"><a name=line832 onclick='overload_click(this)' class="a_ln">832<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">long b;
</div></div></div><div class="div_line"  data-info=({id:21470,ln:833}) id=l833><div class="dl_wrapper"><a name=line833 onclick='overload_click(this)' class="a_ln">833<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.RE
</div></div></div><div class="div_line"  data-info=({id:21471,ln:834}) id=l834><div class="dl_wrapper"><a name=line834 onclick='overload_click(this)' class="a_ln">834<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">}
</div></div></div><div class="div_line"  data-info=({id:21472,ln:835}) id=l835><div class="dl_wrapper"><a name=line835 onclick='overload_click(this)' class="a_ln">835<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.RE
</div></div></div><div class="div_line"  data-info=({id:21473,ln:836}) id=l836><div class="dl_wrapper"><a name=line836 onclick='overload_click(this)' class="a_ln">836<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:21474,ln:837}) id=l837><div class="dl_wrapper"><a name=line837 onclick='overload_click(this)' class="a_ln">837<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">Both branches cannot be followed, or braces become unbalanced and \fBctags\fP
</div></div></div><div class="div_line"  data-info=({id:21475,ln:838}) id=l838><div class="dl_wrapper"><a name=line838 onclick='overload_click(this)' class="a_ln">838<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">would be unable to make sense of the syntax.
</div></div></div><div class="div_line"  data-info=({id:21476,ln:839}) id=l839><div class="dl_wrapper"><a name=line839 onclick='overload_click(this)' class="a_ln">839<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:21477,ln:840}) id=l840><div class="dl_wrapper"><a name=line840 onclick='overload_click(this)' class="a_ln">840<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">If the application of this heuristic fails to properly parse a file,
</div></div></div><div class="div_line"  data-info=({id:21478,ln:841}) id=l841><div class="dl_wrapper"><a name=line841 onclick='overload_click(this)' class="a_ln">841<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">generally due to complicated and inconsistent pairing within the conditionals,
</div></div></div><div class="div_line"  data-info=({id:21479,ln:842}) id=l842><div class="dl_wrapper"><a name=line842 onclick='overload_click(this)' class="a_ln">842<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">\fBctags\fP will retry the file using a different heuristic which does not
</div></div></div><div class="div_line"  data-info=({id:21480,ln:843}) id=l843><div class="dl_wrapper"><a name=line843 onclick='overload_click(this)' class="a_ln">843<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">selectively follow conditional preprocessor branches, but instead falls back
</div></div></div><div class="div_line"  data-info=({id:21481,ln:844}) id=l844><div class="dl_wrapper"><a name=line844 onclick='overload_click(this)' class="a_ln">844<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">to relying upon a closing brace ("}") in column 1 as indicating the end of a
</div></div></div><div class="div_line"  data-info=({id:21482,ln:845}) id=l845><div class="dl_wrapper"><a name=line845 onclick='overload_click(this)' class="a_ln">845<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">block once any brace imbalance results from following a #if conditional branch.
</div></div></div><div class="div_line"  data-info=({id:21483,ln:846}) id=l846><div class="dl_wrapper"><a name=line846 onclick='overload_click(this)' class="a_ln">846<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:21484,ln:847}) id=l847><div class="dl_wrapper"><a name=line847 onclick='overload_click(this)' class="a_ln">847<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">\fBCtags\fP will also try to specially handle arguments lists enclosed in
</div></div></div><div class="div_line"  data-info=({id:21485,ln:848}) id=l848><div class="dl_wrapper"><a name=line848 onclick='overload_click(this)' class="a_ln">848<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">double sets of parentheses in order to accept the following conditional
</div></div></div><div class="div_line"  data-info=({id:21486,ln:849}) id=l849><div class="dl_wrapper"><a name=line849 onclick='overload_click(this)' class="a_ln">849<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">construct:
</div></div></div><div class="div_line"  data-info=({id:21487,ln:850}) id=l850><div class="dl_wrapper"><a name=line850 onclick='overload_click(this)' class="a_ln">850<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:21488,ln:851}) id=l851><div class="dl_wrapper"><a name=line851 onclick='overload_click(this)' class="a_ln">851<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.RS
</div></div></div><div class="div_line"  data-info=({id:21489,ln:852}) id=l852><div class="dl_wrapper"><a name=line852 onclick='overload_click(this)' class="a_ln">852<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">extern void foo __ARGS((int one, char two));
</div></div></div><div class="div_line"  data-info=({id:21490,ln:853}) id=l853><div class="dl_wrapper"><a name=line853 onclick='overload_click(this)' class="a_ln">853<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.RE
</div></div></div><div class="div_line"  data-info=({id:21491,ln:854}) id=l854><div class="dl_wrapper"><a name=line854 onclick='overload_click(this)' class="a_ln">854<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:21492,ln:855}) id=l855><div class="dl_wrapper"><a name=line855 onclick='overload_click(this)' class="a_ln">855<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">Any name immediately preceding the "((" will be automatically ignored and
</div></div></div><div class="div_line"  data-info=({id:21493,ln:856}) id=l856><div class="dl_wrapper"><a name=line856 onclick='overload_click(this)' class="a_ln">856<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">the previous name will be used.
</div></div></div><div class="div_line"  data-info=({id:21494,ln:857}) id=l857><div class="dl_wrapper"><a name=line857 onclick='overload_click(this)' class="a_ln">857<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:21495,ln:858}) id=l858><div class="dl_wrapper"><a name=line858 onclick='overload_click(this)' class="a_ln">858<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">C++ operator definitions are specially handled. In order for consistency with
</div></div></div><div class="div_line"  data-info=({id:21496,ln:859}) id=l859><div class="dl_wrapper"><a name=line859 onclick='overload_click(this)' class="a_ln">859<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">all types of operators (overloaded and conversion), the operator name in the
</div></div></div><div class="div_line"  data-info=({id:21497,ln:860}) id=l860><div class="dl_wrapper"><a name=line860 onclick='overload_click(this)' class="a_ln">860<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">tag file will always be preceded by the string "operator " (i.e. even if the
</div></div></div><div class="div_line"  data-info=({id:21498,ln:861}) id=l861><div class="dl_wrapper"><a name=line861 onclick='overload_click(this)' class="a_ln">861<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">actual operator definition was written as "operator&lt;&lt;").
</div></div></div><div class="div_line"  data-info=({id:21499,ln:862}) id=l862><div class="dl_wrapper"><a name=line862 onclick='overload_click(this)' class="a_ln">862<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:21500,ln:863}) id=l863><div class="dl_wrapper"><a name=line863 onclick='overload_click(this)' class="a_ln">863<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">After creating or appending to the tag file, it is sorted by the tag name,
</div></div></div><div class="div_line"  data-info=({id:21501,ln:864}) id=l864><div class="dl_wrapper"><a name=line864 onclick='overload_click(this)' class="a_ln">864<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">removing identical tag lines.
</div></div></div><div class="div_line"  data-info=({id:21502,ln:865}) id=l865><div class="dl_wrapper"><a name=line865 onclick='overload_click(this)' class="a_ln">865<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:21503,ln:866}) id=l866><div class="dl_wrapper"><a name=line866 onclick='overload_click(this)' class="a_ln">866<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:21504,ln:867}) id=l867><div class="dl_wrapper"><a name=line867 onclick='overload_click(this)' class="a_ln">867<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.SH "TAG FILE FORMAT"
</div></div></div><div class="div_line"  data-info=({id:21505,ln:868}) id=l868><div class="dl_wrapper"><a name=line868 onclick='overload_click(this)' class="a_ln">868<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:21506,ln:869}) id=l869><div class="dl_wrapper"><a name=line869 onclick='overload_click(this)' class="a_ln">869<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">When not running in etags mode, each entry in the tag file consists of a
</div></div></div><div class="div_line"  data-info=({id:21507,ln:870}) id=l870><div class="dl_wrapper"><a name=line870 onclick='overload_click(this)' class="a_ln">870<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">separate line, each looking like this in the most general case:
</div></div></div><div class="div_line"  data-info=({id:21508,ln:871}) id=l871><div class="dl_wrapper"><a name=line871 onclick='overload_click(this)' class="a_ln">871<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:21509,ln:872}) id=l872><div class="dl_wrapper"><a name=line872 onclick='overload_click(this)' class="a_ln">872<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.RS 1
</div></div></div><div class="div_line"  data-info=({id:21510,ln:873}) id=l873><div class="dl_wrapper"><a name=line873 onclick='overload_click(this)' class="a_ln">873<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">tag_name&lt;TAB&gt;file_name&lt;TAB&gt;ex_cmd;"&lt;TAB&gt;extension_fields
</div></div></div><div class="div_line"  data-info=({id:21511,ln:874}) id=l874><div class="dl_wrapper"><a name=line874 onclick='overload_click(this)' class="a_ln">874<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.RE
</div></div></div><div class="div_line"  data-info=({id:21512,ln:875}) id=l875><div class="dl_wrapper"><a name=line875 onclick='overload_click(this)' class="a_ln">875<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:21513,ln:876}) id=l876><div class="dl_wrapper"><a name=line876 onclick='overload_click(this)' class="a_ln">876<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">The fields and separators of these lines are specified as follows:
</div></div></div><div class="div_line"  data-info=({id:21514,ln:877}) id=l877><div class="dl_wrapper"><a name=line877 onclick='overload_click(this)' class="a_ln">877<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:21515,ln:878}) id=l878><div class="dl_wrapper"><a name=line878 onclick='overload_click(this)' class="a_ln">878<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.PD 0
</div></div></div><div class="div_line"  data-info=({id:21516,ln:879}) id=l879><div class="dl_wrapper"><a name=line879 onclick='overload_click(this)' class="a_ln">879<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.RS 4
</div></div></div><div class="div_line"  data-info=({id:21517,ln:880}) id=l880><div class="dl_wrapper"><a name=line880 onclick='overload_click(this)' class="a_ln">880<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.TP 4
</div></div></div><div class="div_line"  data-info=({id:21518,ln:881}) id=l881><div class="dl_wrapper"><a name=line881 onclick='overload_click(this)' class="a_ln">881<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">1.
</div></div></div><div class="div_line"  data-info=({id:21519,ln:882}) id=l882><div class="dl_wrapper"><a name=line882 onclick='overload_click(this)' class="a_ln">882<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">tag name
</div></div></div><div class="div_line"  data-info=({id:21520,ln:883}) id=l883><div class="dl_wrapper"><a name=line883 onclick='overload_click(this)' class="a_ln">883<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.TP 4
</div></div></div><div class="div_line"  data-info=({id:21521,ln:884}) id=l884><div class="dl_wrapper"><a name=line884 onclick='overload_click(this)' class="a_ln">884<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">2.
</div></div></div><div class="div_line"  data-info=({id:21522,ln:885}) id=l885><div class="dl_wrapper"><a name=line885 onclick='overload_click(this)' class="a_ln">885<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">single tab character
</div></div></div><div class="div_line"  data-info=({id:21523,ln:886}) id=l886><div class="dl_wrapper"><a name=line886 onclick='overload_click(this)' class="a_ln">886<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.TP 4
</div></div></div><div class="div_line"  data-info=({id:21524,ln:887}) id=l887><div class="dl_wrapper"><a name=line887 onclick='overload_click(this)' class="a_ln">887<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">3.
</div></div></div><div class="div_line"  data-info=({id:21525,ln:888}) id=l888><div class="dl_wrapper"><a name=line888 onclick='overload_click(this)' class="a_ln">888<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">name of the file in which the object associated with the tag is located
</div></div></div><div class="div_line"  data-info=({id:21526,ln:889}) id=l889><div class="dl_wrapper"><a name=line889 onclick='overload_click(this)' class="a_ln">889<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.TP 4
</div></div></div><div class="div_line"  data-info=({id:21527,ln:890}) id=l890><div class="dl_wrapper"><a name=line890 onclick='overload_click(this)' class="a_ln">890<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">4.
</div></div></div><div class="div_line"  data-info=({id:21528,ln:891}) id=l891><div class="dl_wrapper"><a name=line891 onclick='overload_click(this)' class="a_ln">891<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">single tab character
</div></div></div><div class="div_line"  data-info=({id:21529,ln:892}) id=l892><div class="dl_wrapper"><a name=line892 onclick='overload_click(this)' class="a_ln">892<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.TP 4
</div></div></div><div class="div_line"  data-info=({id:21530,ln:893}) id=l893><div class="dl_wrapper"><a name=line893 onclick='overload_click(this)' class="a_ln">893<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">5.
</div></div></div><div class="div_line"  data-info=({id:21531,ln:894}) id=l894><div class="dl_wrapper"><a name=line894 onclick='overload_click(this)' class="a_ln">894<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">EX command used to locate the tag within the file; generally a search pattern
</div></div></div><div class="div_line"  data-info=({id:21532,ln:895}) id=l895><div class="dl_wrapper"><a name=line895 onclick='overload_click(this)' class="a_ln">895<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">(either /pattern/ or ?pattern?) or line number (see \fB\-\-excmd\fP). Tag file
</div></div></div><div class="div_line"  data-info=({id:21533,ln:896}) id=l896><div class="dl_wrapper"><a name=line896 onclick='overload_click(this)' class="a_ln">896<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">format 2 (see \fB\-\-format\fP) extends this EX command under certain
</div></div></div><div class="div_line"  data-info=({id:21534,ln:897}) id=l897><div class="dl_wrapper"><a name=line897 onclick='overload_click(this)' class="a_ln">897<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">circumstances to include a set of extension fields (described below) embedded
</div></div></div><div class="div_line"  data-info=({id:21535,ln:898}) id=l898><div class="dl_wrapper"><a name=line898 onclick='overload_click(this)' class="a_ln">898<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">in an EX comment immediately appended to the EX command, which leaves it
</div></div></div><div class="div_line"  data-info=({id:21536,ln:899}) id=l899><div class="dl_wrapper"><a name=line899 onclick='overload_click(this)' class="a_ln">899<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">backward-compatible with original \fBvi\fP(1) implementations.
</div></div></div><div class="div_line"  data-info=({id:21537,ln:900}) id=l900><div class="dl_wrapper"><a name=line900 onclick='overload_click(this)' class="a_ln">900<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.RE
</div></div></div><div class="div_line"  data-info=({id:21538,ln:901}) id=l901><div class="dl_wrapper"><a name=line901 onclick='overload_click(this)' class="a_ln">901<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.PD 1
</div></div></div><div class="div_line"  data-info=({id:21539,ln:902}) id=l902><div class="dl_wrapper"><a name=line902 onclick='overload_click(this)' class="a_ln">902<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:21540,ln:903}) id=l903><div class="dl_wrapper"><a name=line903 onclick='overload_click(this)' class="a_ln">903<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">A few special tags are written into the tag file for internal purposes. These
</div></div></div><div class="div_line"  data-info=({id:21541,ln:904}) id=l904><div class="dl_wrapper"><a name=line904 onclick='overload_click(this)' class="a_ln">904<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">tags are composed in such a way that they always sort to the top of the file.
</div></div></div><div class="div_line"  data-info=({id:21542,ln:905}) id=l905><div class="dl_wrapper"><a name=line905 onclick='overload_click(this)' class="a_ln">905<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">Therefore, the first two characters of these tags are used a magic number to
</div></div></div><div class="div_line"  data-info=({id:21543,ln:906}) id=l906><div class="dl_wrapper"><a name=line906 onclick='overload_click(this)' class="a_ln">906<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">detect a tag file for purposes of determining whether a valid tag file is
</div></div></div><div class="div_line"  data-info=({id:21544,ln:907}) id=l907><div class="dl_wrapper"><a name=line907 onclick='overload_click(this)' class="a_ln">907<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">being overwritten rather than a source file.
</div></div></div><div class="div_line"  data-info=({id:21545,ln:908}) id=l908><div class="dl_wrapper"><a name=line908 onclick='overload_click(this)' class="a_ln">908<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:21546,ln:909}) id=l909><div class="dl_wrapper"><a name=line909 onclick='overload_click(this)' class="a_ln">909<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">Note that the name of each source file will be recorded in the tag file
</div></div></div><div class="div_line"  data-info=({id:21547,ln:910}) id=l910><div class="dl_wrapper"><a name=line910 onclick='overload_click(this)' class="a_ln">910<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">exactly as it appears on the command line. Therefore, if the path you
</div></div></div><div class="div_line"  data-info=({id:21548,ln:911}) id=l911><div class="dl_wrapper"><a name=line911 onclick='overload_click(this)' class="a_ln">911<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">specified on the command line was relative to the current directory, then it
</div></div></div><div class="div_line"  data-info=({id:21549,ln:912}) id=l912><div class="dl_wrapper"><a name=line912 onclick='overload_click(this)' class="a_ln">912<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">will be recorded in that same manner in the tag file. See, however, the
</div></div></div><div class="div_line"  data-info=({id:21550,ln:913}) id=l913><div class="dl_wrapper"><a name=line913 onclick='overload_click(this)' class="a_ln">913<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">\fB\-\-tag\-relative\fP option for how this behavior can be modified.
</div></div></div><div class="div_line"  data-info=({id:21551,ln:914}) id=l914><div class="dl_wrapper"><a name=line914 onclick='overload_click(this)' class="a_ln">914<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:21552,ln:915}) id=l915><div class="dl_wrapper"><a name=line915 onclick='overload_click(this)' class="a_ln">915<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">Extension fields are tab-separated key-value pairs appended to the end of the
</div></div></div><div class="div_line"  data-info=({id:21553,ln:916}) id=l916><div class="dl_wrapper"><a name=line916 onclick='overload_click(this)' class="a_ln">916<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">EX command as a comment, as described above. These key value pairs appear in
</div></div></div><div class="div_line"  data-info=({id:21554,ln:917}) id=l917><div class="dl_wrapper"><a name=line917 onclick='overload_click(this)' class="a_ln">917<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">the general form "\fIkey\fP:\fIvalue\fP". Their presence in the lines of the
</div></div></div><div class="div_line"  data-info=({id:21555,ln:918}) id=l918><div class="dl_wrapper"><a name=line918 onclick='overload_click(this)' class="a_ln">918<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">tag file are controlled by the \fB\-\-fields\fP option. The possible keys and
</div></div></div><div class="div_line"  data-info=({id:21556,ln:919}) id=l919><div class="dl_wrapper"><a name=line919 onclick='overload_click(this)' class="a_ln">919<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">the meaning of their values are as follows:
</div></div></div><div class="div_line"  data-info=({id:21557,ln:920}) id=l920><div class="dl_wrapper"><a name=line920 onclick='overload_click(this)' class="a_ln">920<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:21558,ln:921}) id=l921><div class="dl_wrapper"><a name=line921 onclick='overload_click(this)' class="a_ln">921<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.TP 12
</div></div></div><div class="div_line"  data-info=({id:21559,ln:922}) id=l922><div class="dl_wrapper"><a name=line922 onclick='overload_click(this)' class="a_ln">922<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.I access
</div></div></div><div class="div_line"  data-info=({id:21560,ln:923}) id=l923><div class="dl_wrapper"><a name=line923 onclick='overload_click(this)' class="a_ln">923<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">Indicates the visibility of this class member, where \fIvalue\fP is specific
</div></div></div><div class="div_line"  data-info=({id:21561,ln:924}) id=l924><div class="dl_wrapper"><a name=line924 onclick='overload_click(this)' class="a_ln">924<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">to the language.
</div></div></div><div class="div_line"  data-info=({id:21562,ln:925}) id=l925><div class="dl_wrapper"><a name=line925 onclick='overload_click(this)' class="a_ln">925<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:21563,ln:926}) id=l926><div class="dl_wrapper"><a name=line926 onclick='overload_click(this)' class="a_ln">926<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.TP 12
</div></div></div><div class="div_line"  data-info=({id:21564,ln:927}) id=l927><div class="dl_wrapper"><a name=line927 onclick='overload_click(this)' class="a_ln">927<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.I file
</div></div></div><div class="div_line"  data-info=({id:21565,ln:928}) id=l928><div class="dl_wrapper"><a name=line928 onclick='overload_click(this)' class="a_ln">928<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">Indicates that the tag has file-limited visibility. This key has no
</div></div></div><div class="div_line"  data-info=({id:21566,ln:929}) id=l929><div class="dl_wrapper"><a name=line929 onclick='overload_click(this)' class="a_ln">929<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">corresponding value.
</div></div></div><div class="div_line"  data-info=({id:21567,ln:930}) id=l930><div class="dl_wrapper"><a name=line930 onclick='overload_click(this)' class="a_ln">930<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:21568,ln:931}) id=l931><div class="dl_wrapper"><a name=line931 onclick='overload_click(this)' class="a_ln">931<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.TP 12
</div></div></div><div class="div_line"  data-info=({id:21569,ln:932}) id=l932><div class="dl_wrapper"><a name=line932 onclick='overload_click(this)' class="a_ln">932<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.I kind
</div></div></div><div class="div_line"  data-info=({id:21570,ln:933}) id=l933><div class="dl_wrapper"><a name=line933 onclick='overload_click(this)' class="a_ln">933<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">Indicates the type, or kind, of tag. Its value is either one of the
</div></div></div><div class="div_line"  data-info=({id:21571,ln:934}) id=l934><div class="dl_wrapper"><a name=line934 onclick='overload_click(this)' class="a_ln">934<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">corresponding one-letter flags described under the various
</div></div></div><div class="div_line"  data-info=({id:21572,ln:935}) id=l935><div class="dl_wrapper"><a name=line935 onclick='overload_click(this)' class="a_ln">935<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">\fB\-\-&lt;LANG&gt;\-kinds\fP options above, or a full name. It is permitted (and is,
</div></div></div><div class="div_line"  data-info=({id:21573,ln:936}) id=l936><div class="dl_wrapper"><a name=line936 onclick='overload_click(this)' class="a_ln">936<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">in fact, the default) for the key portion of this field to be omitted. The
</div></div></div><div class="div_line"  data-info=({id:21574,ln:937}) id=l937><div class="dl_wrapper"><a name=line937 onclick='overload_click(this)' class="a_ln">937<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">optional behaviors are controlled with the \fB\-\-fields\fP option.
</div></div></div><div class="div_line"  data-info=({id:21575,ln:938}) id=l938><div class="dl_wrapper"><a name=line938 onclick='overload_click(this)' class="a_ln">938<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:21576,ln:939}) id=l939><div class="dl_wrapper"><a name=line939 onclick='overload_click(this)' class="a_ln">939<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.TP 12
</div></div></div><div class="div_line"  data-info=({id:21577,ln:940}) id=l940><div class="dl_wrapper"><a name=line940 onclick='overload_click(this)' class="a_ln">940<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.I implementation
</div></div></div><div class="div_line"  data-info=({id:21578,ln:941}) id=l941><div class="dl_wrapper"><a name=line941 onclick='overload_click(this)' class="a_ln">941<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">When present, this indicates a limited implementation (abstract vs. concrete)
</div></div></div><div class="div_line"  data-info=({id:21579,ln:942}) id=l942><div class="dl_wrapper"><a name=line942 onclick='overload_click(this)' class="a_ln">942<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">of a routine or class, where \fIvalue\fP is specific to the language
</div></div></div><div class="div_line"  data-info=({id:21580,ln:943}) id=l943><div class="dl_wrapper"><a name=line943 onclick='overload_click(this)' class="a_ln">943<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">("virtual" or "pure virtual" for C++; "abstract" for Java).
</div></div></div><div class="div_line"  data-info=({id:21581,ln:944}) id=l944><div class="dl_wrapper"><a name=line944 onclick='overload_click(this)' class="a_ln">944<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:21582,ln:945}) id=l945><div class="dl_wrapper"><a name=line945 onclick='overload_click(this)' class="a_ln">945<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.TP 12
</div></div></div><div class="div_line"  data-info=({id:21583,ln:946}) id=l946><div class="dl_wrapper"><a name=line946 onclick='overload_click(this)' class="a_ln">946<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.I inherits
</div></div></div><div class="div_line"  data-info=({id:21584,ln:947}) id=l947><div class="dl_wrapper"><a name=line947 onclick='overload_click(this)' class="a_ln">947<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">When present, \fIvalue\fP. is a comma-separated list of classes from which
</div></div></div><div class="div_line"  data-info=({id:21585,ln:948}) id=l948><div class="dl_wrapper"><a name=line948 onclick='overload_click(this)' class="a_ln">948<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">this class is derived (i.e. inherits from).
</div></div></div><div class="div_line"  data-info=({id:21586,ln:949}) id=l949><div class="dl_wrapper"><a name=line949 onclick='overload_click(this)' class="a_ln">949<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:21587,ln:950}) id=l950><div class="dl_wrapper"><a name=line950 onclick='overload_click(this)' class="a_ln">950<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.TP 12
</div></div></div><div class="div_line"  data-info=({id:21588,ln:951}) id=l951><div class="dl_wrapper"><a name=line951 onclick='overload_click(this)' class="a_ln">951<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.I signature
</div></div></div><div class="div_line"  data-info=({id:21589,ln:952}) id=l952><div class="dl_wrapper"><a name=line952 onclick='overload_click(this)' class="a_ln">952<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">When present, \fIvalue\fP is a language-dependent representation of the
</div></div></div><div class="div_line"  data-info=({id:21590,ln:953}) id=l953><div class="dl_wrapper"><a name=line953 onclick='overload_click(this)' class="a_ln">953<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">signature of a routine. A routine signature in its complete form specifies the
</div></div></div><div class="div_line"  data-info=({id:21591,ln:954}) id=l954><div class="dl_wrapper"><a name=line954 onclick='overload_click(this)' class="a_ln">954<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">return type of a routine and its formal argument list. This extension field is
</div></div></div><div class="div_line"  data-info=({id:21592,ln:955}) id=l955><div class="dl_wrapper"><a name=line955 onclick='overload_click(this)' class="a_ln">955<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">presently supported only for C-based languages and does not include the return
</div></div></div><div class="div_line"  data-info=({id:21593,ln:956}) id=l956><div class="dl_wrapper"><a name=line956 onclick='overload_click(this)' class="a_ln">956<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">type.
</div></div></div><div class="div_line"  data-info=({id:21594,ln:957}) id=l957><div class="dl_wrapper"><a name=line957 onclick='overload_click(this)' class="a_ln">957<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:21595,ln:958}) id=l958><div class="dl_wrapper"><a name=line958 onclick='overload_click(this)' class="a_ln">958<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.PP
</div></div></div><div class="div_line"  data-info=({id:21596,ln:959}) id=l959><div class="dl_wrapper"><a name=line959 onclick='overload_click(this)' class="a_ln">959<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">In addition, information on the scope of the tag definition may be available,
</div></div></div><div class="div_line"  data-info=({id:21597,ln:960}) id=l960><div class="dl_wrapper"><a name=line960 onclick='overload_click(this)' class="a_ln">960<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">with the key portion equal to some language-dependent construct name and its
</div></div></div><div class="div_line"  data-info=({id:21598,ln:961}) id=l961><div class="dl_wrapper"><a name=line961 onclick='overload_click(this)' class="a_ln">961<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">value the name declared for that construct in the program. This scope entry
</div></div></div><div class="div_line"  data-info=({id:21599,ln:962}) id=l962><div class="dl_wrapper"><a name=line962 onclick='overload_click(this)' class="a_ln">962<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">indicates the scope in which the tag was found. For example, a tag generated
</div></div></div><div class="div_line"  data-info=({id:21600,ln:963}) id=l963><div class="dl_wrapper"><a name=line963 onclick='overload_click(this)' class="a_ln">963<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">for a C structure member would have a scope looking like "struct:myStruct".
</div></div></div><div class="div_line"  data-info=({id:21601,ln:964}) id=l964><div class="dl_wrapper"><a name=line964 onclick='overload_click(this)' class="a_ln">964<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:21602,ln:965}) id=l965><div class="dl_wrapper"><a name=line965 onclick='overload_click(this)' class="a_ln">965<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:21603,ln:966}) id=l966><div class="dl_wrapper"><a name=line966 onclick='overload_click(this)' class="a_ln">966<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.SH "HOW TO USE WITH VI"
</div></div></div><div class="div_line"  data-info=({id:21604,ln:967}) id=l967><div class="dl_wrapper"><a name=line967 onclick='overload_click(this)' class="a_ln">967<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">Vi will, by default, expect a tag file by the name "tags" in the current
</div></div></div><div class="div_line"  data-info=({id:21605,ln:968}) id=l968><div class="dl_wrapper"><a name=line968 onclick='overload_click(this)' class="a_ln">968<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">directory. Once the tag file is built, the following commands exercise the tag
</div></div></div><div class="div_line"  data-info=({id:21606,ln:969}) id=l969><div class="dl_wrapper"><a name=line969 onclick='overload_click(this)' class="a_ln">969<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">indexing feature:
</div></div></div><div class="div_line"  data-info=({id:21607,ln:970}) id=l970><div class="dl_wrapper"><a name=line970 onclick='overload_click(this)' class="a_ln">970<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.TP 12
</div></div></div><div class="div_line"  data-info=({id:21608,ln:971}) id=l971><div class="dl_wrapper"><a name=line971 onclick='overload_click(this)' class="a_ln">971<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.B vi \-t tag
</div></div></div><div class="div_line"  data-info=({id:21609,ln:972}) id=l972><div class="dl_wrapper"><a name=line972 onclick='overload_click(this)' class="a_ln">972<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">Start vi and position the cursor at the file and line where "tag" is defined.
</div></div></div><div class="div_line"  data-info=({id:21610,ln:973}) id=l973><div class="dl_wrapper"><a name=line973 onclick='overload_click(this)' class="a_ln">973<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.TP 12
</div></div></div><div class="div_line"  data-info=({id:21611,ln:974}) id=l974><div class="dl_wrapper"><a name=line974 onclick='overload_click(this)' class="a_ln">974<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.B :ta tag
</div></div></div><div class="div_line"  data-info=({id:21612,ln:975}) id=l975><div class="dl_wrapper"><a name=line975 onclick='overload_click(this)' class="a_ln">975<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">Find a tag.
</div></div></div><div class="div_line"  data-info=({id:21613,ln:976}) id=l976><div class="dl_wrapper"><a name=line976 onclick='overload_click(this)' class="a_ln">976<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.TP 12
</div></div></div><div class="div_line"  data-info=({id:21614,ln:977}) id=l977><div class="dl_wrapper"><a name=line977 onclick='overload_click(this)' class="a_ln">977<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.B Ctrl-]
</div></div></div><div class="div_line"  data-info=({id:21615,ln:978}) id=l978><div class="dl_wrapper"><a name=line978 onclick='overload_click(this)' class="a_ln">978<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">Find the tag under the cursor.
</div></div></div><div class="div_line"  data-info=({id:21616,ln:979}) id=l979><div class="dl_wrapper"><a name=line979 onclick='overload_click(this)' class="a_ln">979<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.TP 12
</div></div></div><div class="div_line"  data-info=({id:21617,ln:980}) id=l980><div class="dl_wrapper"><a name=line980 onclick='overload_click(this)' class="a_ln">980<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.B Ctrl-T
</div></div></div><div class="div_line"  data-info=({id:21618,ln:981}) id=l981><div class="dl_wrapper"><a name=line981 onclick='overload_click(this)' class="a_ln">981<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">Return to previous location before jump to tag (not widely implemented).
</div></div></div><div class="div_line"  data-info=({id:21619,ln:982}) id=l982><div class="dl_wrapper"><a name=line982 onclick='overload_click(this)' class="a_ln">982<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:21620,ln:983}) id=l983><div class="dl_wrapper"><a name=line983 onclick='overload_click(this)' class="a_ln">983<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:21621,ln:984}) id=l984><div class="dl_wrapper"><a name=line984 onclick='overload_click(this)' class="a_ln">984<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.SH "HOW TO USE WITH GNU EMACS"
</div></div></div><div class="div_line"  data-info=({id:21622,ln:985}) id=l985><div class="dl_wrapper"><a name=line985 onclick='overload_click(this)' class="a_ln">985<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">Emacs will, by default, expect a tag file by the name "TAGS" in the current
</div></div></div><div class="div_line"  data-info=({id:21623,ln:986}) id=l986><div class="dl_wrapper"><a name=line986 onclick='overload_click(this)' class="a_ln">986<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">directory. Once the tag file is built, the following commands exercise the
</div></div></div><div class="div_line"  data-info=({id:21624,ln:987}) id=l987><div class="dl_wrapper"><a name=line987 onclick='overload_click(this)' class="a_ln">987<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">tag indexing feature:
</div></div></div><div class="div_line"  data-info=({id:21625,ln:988}) id=l988><div class="dl_wrapper"><a name=line988 onclick='overload_click(this)' class="a_ln">988<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.TP 10
</div></div></div><div class="div_line"  data-info=({id:21626,ln:989}) id=l989><div class="dl_wrapper"><a name=line989 onclick='overload_click(this)' class="a_ln">989<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.B "M-x visit\-tags\-table &lt;RET&gt; FILE &lt;RET&gt;"
</div></div></div><div class="div_line"  data-info=({id:21627,ln:990}) id=l990><div class="dl_wrapper"><a name=line990 onclick='overload_click(this)' class="a_ln">990<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">Select the tag file, "FILE", to use.
</div></div></div><div class="div_line"  data-info=({id:21628,ln:991}) id=l991><div class="dl_wrapper"><a name=line991 onclick='overload_click(this)' class="a_ln">991<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.TP 10
</div></div></div><div class="div_line"  data-info=({id:21629,ln:992}) id=l992><div class="dl_wrapper"><a name=line992 onclick='overload_click(this)' class="a_ln">992<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.B "M-. [TAG] &lt;RET&gt;"
</div></div></div><div class="div_line"  data-info=({id:21630,ln:993}) id=l993><div class="dl_wrapper"><a name=line993 onclick='overload_click(this)' class="a_ln">993<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">Find the first definition of TAG. The default tag is the identifier under the
</div></div></div><div class="div_line"  data-info=({id:21631,ln:994}) id=l994><div class="dl_wrapper"><a name=line994 onclick='overload_click(this)' class="a_ln">994<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">cursor.
</div></div></div><div class="div_line"  data-info=({id:21632,ln:995}) id=l995><div class="dl_wrapper"><a name=line995 onclick='overload_click(this)' class="a_ln">995<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.TP 10
</div></div></div><div class="div_line"  data-info=({id:21633,ln:996}) id=l996><div class="dl_wrapper"><a name=line996 onclick='overload_click(this)' class="a_ln">996<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.B "M-*"
</div></div></div><div class="div_line"  data-info=({id:21634,ln:997}) id=l997><div class="dl_wrapper"><a name=line997 onclick='overload_click(this)' class="a_ln">997<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">Pop back to where you previously invoked "M-.".
</div></div></div><div class="div_line"  data-info=({id:21635,ln:998}) id=l998><div class="dl_wrapper"><a name=line998 onclick='overload_click(this)' class="a_ln">998<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.TP 10
</div></div></div><div class="div_line"  data-info=({id:21636,ln:999}) id=l999><div class="dl_wrapper"><a name=line999 onclick='overload_click(this)' class="a_ln">999<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.B "C-u M-."
</div></div></div><div class="div_line"  data-info=({id:21637,ln:1000}) id=l1000><div class="dl_wrapper"><a name=line1000 onclick='overload_click(this)' class="a_ln">1000<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">Find the next definition for the last tag.
</div></div></div><div class="div_line"  data-info=({id:21638,ln:1001}) id=l1001><div class="dl_wrapper"><a name=line1001 onclick='overload_click(this)' class="a_ln">1001<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:21639,ln:1002}) id=l1002><div class="dl_wrapper"><a name=line1002 onclick='overload_click(this)' class="a_ln">1002<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.PP
</div></div></div><div class="div_line"  data-info=({id:21640,ln:1003}) id=l1003><div class="dl_wrapper"><a name=line1003 onclick='overload_click(this)' class="a_ln">1003<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">For more commands, see the \fITags\fP topic in the Emacs info document.
</div></div></div><div class="div_line"  data-info=({id:21641,ln:1004}) id=l1004><div class="dl_wrapper"><a name=line1004 onclick='overload_click(this)' class="a_ln">1004<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:21642,ln:1005}) id=l1005><div class="dl_wrapper"><a name=line1005 onclick='overload_click(this)' class="a_ln">1005<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:21643,ln:1006}) id=l1006><div class="dl_wrapper"><a name=line1006 onclick='overload_click(this)' class="a_ln">1006<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.SH "HOW TO USE WITH NEDIT"
</div></div></div><div class="div_line"  data-info=({id:21644,ln:1007}) id=l1007><div class="dl_wrapper"><a name=line1007 onclick='overload_click(this)' class="a_ln">1007<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">NEdit version 5.1 and later can handle the new extended tag file format (see
</div></div></div><div class="div_line"  data-info=({id:21645,ln:1008}) id=l1008><div class="dl_wrapper"><a name=line1008 onclick='overload_click(this)' class="a_ln">1008<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">\fB\-\-format\fP). To make NEdit use the tag file, select "File\-&gt;Load Tags
</div></div></div><div class="div_line"  data-info=({id:21646,ln:1009}) id=l1009><div class="dl_wrapper"><a name=line1009 onclick='overload_click(this)' class="a_ln">1009<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">File". To jump to the definition for a tag, highlight the word, the press
</div></div></div><div class="div_line"  data-info=({id:21647,ln:1010}) id=l1010><div class="dl_wrapper"><a name=line1010 onclick='overload_click(this)' class="a_ln">1010<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">Ctrl-D. NEdit 5.1 can can read multiple tag files from different directories.
</div></div></div><div class="div_line"  data-info=({id:21648,ln:1011}) id=l1011><div class="dl_wrapper"><a name=line1011 onclick='overload_click(this)' class="a_ln">1011<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">Setting the X resource nedit.tagFile to the name of a tag file instructs NEdit
</div></div></div><div class="div_line"  data-info=({id:21649,ln:1012}) id=l1012><div class="dl_wrapper"><a name=line1012 onclick='overload_click(this)' class="a_ln">1012<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">to automatically load that tag file at startup time.
</div></div></div><div class="div_line"  data-info=({id:21650,ln:1013}) id=l1013><div class="dl_wrapper"><a name=line1013 onclick='overload_click(this)' class="a_ln">1013<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:21651,ln:1014}) id=l1014><div class="dl_wrapper"><a name=line1014 onclick='overload_click(this)' class="a_ln">1014<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:21652,ln:1015}) id=l1015><div class="dl_wrapper"><a name=line1015 onclick='overload_click(this)' class="a_ln">1015<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.SH "CAVEATS"
</div></div></div><div class="div_line"  data-info=({id:21653,ln:1016}) id=l1016><div class="dl_wrapper"><a name=line1016 onclick='overload_click(this)' class="a_ln">1016<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">Because \fBctags\fP is neither a preprocessor nor a compiler, use of
</div></div></div><div class="div_line"  data-info=({id:21654,ln:1017}) id=l1017><div class="dl_wrapper"><a name=line1017 onclick='overload_click(this)' class="a_ln">1017<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">preprocessor macros can fool \fBctags\fP into either missing tags or
</div></div></div><div class="div_line"  data-info=({id:21655,ln:1018}) id=l1018><div class="dl_wrapper"><a name=line1018 onclick='overload_click(this)' class="a_ln">1018<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">improperly generating inappropriate tags. Although \fBctags\fP has been
</div></div></div><div class="div_line"  data-info=({id:21656,ln:1019}) id=l1019><div class="dl_wrapper"><a name=line1019 onclick='overload_click(this)' class="a_ln">1019<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">designed to handle certain common cases, this is the single biggest cause of
</div></div></div><div class="div_line"  data-info=({id:21657,ln:1020}) id=l1020><div class="dl_wrapper"><a name=line1020 onclick='overload_click(this)' class="a_ln">1020<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">reported problems. In particular, the use of preprocessor constructs which
</div></div></div><div class="div_line"  data-info=({id:21658,ln:1021}) id=l1021><div class="dl_wrapper"><a name=line1021 onclick='overload_click(this)' class="a_ln">1021<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">alter the textual syntax of C can fool \fBctags\fP. You can work around many
</div></div></div><div class="div_line"  data-info=({id:21659,ln:1022}) id=l1022><div class="dl_wrapper"><a name=line1022 onclick='overload_click(this)' class="a_ln">1022<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">such problems by using the \fB\-I\fP option.
</div></div></div><div class="div_line"  data-info=({id:21660,ln:1023}) id=l1023><div class="dl_wrapper"><a name=line1023 onclick='overload_click(this)' class="a_ln">1023<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:21661,ln:1024}) id=l1024><div class="dl_wrapper"><a name=line1024 onclick='overload_click(this)' class="a_ln">1024<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">Note that since \fBctags\fP generates patterns for locating tags (see
</div></div></div><div class="div_line"  data-info=({id:21662,ln:1025}) id=l1025><div class="dl_wrapper"><a name=line1025 onclick='overload_click(this)' class="a_ln">1025<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">the \fB\-\-excmd\fP option), it is entirely possible that the wrong line may be
</div></div></div><div class="div_line"  data-info=({id:21663,ln:1026}) id=l1026><div class="dl_wrapper"><a name=line1026 onclick='overload_click(this)' class="a_ln">1026<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">found by your editor if there exists another source line which is identical to
</div></div></div><div class="div_line"  data-info=({id:21664,ln:1027}) id=l1027><div class="dl_wrapper"><a name=line1027 onclick='overload_click(this)' class="a_ln">1027<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">the line containing the tag. The following example demonstrates this condition:
</div></div></div><div class="div_line"  data-info=({id:21665,ln:1028}) id=l1028><div class="dl_wrapper"><a name=line1028 onclick='overload_click(this)' class="a_ln">1028<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:21666,ln:1029}) id=l1029><div class="dl_wrapper"><a name=line1029 onclick='overload_click(this)' class="a_ln">1029<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.RS
</div></div></div><div class="div_line"  data-info=({id:21667,ln:1030}) id=l1030><div class="dl_wrapper"><a name=line1030 onclick='overload_click(this)' class="a_ln">1030<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">int variable;
</div></div></div><div class="div_line"  data-info=({id:21668,ln:1031}) id=l1031><div class="dl_wrapper"><a name=line1031 onclick='overload_click(this)' class="a_ln">1031<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:21669,ln:1032}) id=l1032><div class="dl_wrapper"><a name=line1032 onclick='overload_click(this)' class="a_ln">1032<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">/* ... */
</div></div></div><div class="div_line"  data-info=({id:21670,ln:1033}) id=l1033><div class="dl_wrapper"><a name=line1033 onclick='overload_click(this)' class="a_ln">1033<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.br
</div></div></div><div class="div_line"  data-info=({id:21671,ln:1034}) id=l1034><div class="dl_wrapper"><a name=line1034 onclick='overload_click(this)' class="a_ln">1034<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">void foo(variable)
</div></div></div><div class="div_line"  data-info=({id:21672,ln:1035}) id=l1035><div class="dl_wrapper"><a name=line1035 onclick='overload_click(this)' class="a_ln">1035<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.br
</div></div></div><div class="div_line"  data-info=({id:21673,ln:1036}) id=l1036><div class="dl_wrapper"><a name=line1036 onclick='overload_click(this)' class="a_ln">1036<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">int variable;
</div></div></div><div class="div_line"  data-info=({id:21674,ln:1037}) id=l1037><div class="dl_wrapper"><a name=line1037 onclick='overload_click(this)' class="a_ln">1037<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.br
</div></div></div><div class="div_line"  data-info=({id:21675,ln:1038}) id=l1038><div class="dl_wrapper"><a name=line1038 onclick='overload_click(this)' class="a_ln">1038<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">{
</div></div></div><div class="div_line"  data-info=({id:21676,ln:1039}) id=l1039><div class="dl_wrapper"><a name=line1039 onclick='overload_click(this)' class="a_ln">1039<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.RS 4
</div></div></div><div class="div_line"  data-info=({id:21677,ln:1040}) id=l1040><div class="dl_wrapper"><a name=line1040 onclick='overload_click(this)' class="a_ln">1040<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">/* ... */
</div></div></div><div class="div_line"  data-info=({id:21678,ln:1041}) id=l1041><div class="dl_wrapper"><a name=line1041 onclick='overload_click(this)' class="a_ln">1041<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.RE
</div></div></div><div class="div_line"  data-info=({id:21679,ln:1042}) id=l1042><div class="dl_wrapper"><a name=line1042 onclick='overload_click(this)' class="a_ln">1042<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">}
</div></div></div><div class="div_line"  data-info=({id:21680,ln:1043}) id=l1043><div class="dl_wrapper"><a name=line1043 onclick='overload_click(this)' class="a_ln">1043<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.RE
</div></div></div><div class="div_line"  data-info=({id:21681,ln:1044}) id=l1044><div class="dl_wrapper"><a name=line1044 onclick='overload_click(this)' class="a_ln">1044<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:21682,ln:1045}) id=l1045><div class="dl_wrapper"><a name=line1045 onclick='overload_click(this)' class="a_ln">1045<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">Depending upon which editor you use and where in the code you happen to be, it
</div></div></div><div class="div_line"  data-info=({id:21683,ln:1046}) id=l1046><div class="dl_wrapper"><a name=line1046 onclick='overload_click(this)' class="a_ln">1046<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">is possible that the search pattern may locate the local parameter declaration
</div></div></div><div class="div_line"  data-info=({id:21684,ln:1047}) id=l1047><div class="dl_wrapper"><a name=line1047 onclick='overload_click(this)' class="a_ln">1047<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">in foo() before it finds the actual global variable definition, since the
</div></div></div><div class="div_line"  data-info=({id:21685,ln:1048}) id=l1048><div class="dl_wrapper"><a name=line1048 onclick='overload_click(this)' class="a_ln">1048<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">lines (and therefore their search patterns are identical). This can be avoided
</div></div></div><div class="div_line"  data-info=({id:21686,ln:1049}) id=l1049><div class="dl_wrapper"><a name=line1049 onclick='overload_click(this)' class="a_ln">1049<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">by use of the \fB\-\-excmd\fP=\fIn\fP option.
</div></div></div><div class="div_line"  data-info=({id:21687,ln:1050}) id=l1050><div class="dl_wrapper"><a name=line1050 onclick='overload_click(this)' class="a_ln">1050<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:21688,ln:1051}) id=l1051><div class="dl_wrapper"><a name=line1051 onclick='overload_click(this)' class="a_ln">1051<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:21689,ln:1052}) id=l1052><div class="dl_wrapper"><a name=line1052 onclick='overload_click(this)' class="a_ln">1052<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.SH "BUGS"
</div></div></div><div class="div_line"  data-info=({id:21690,ln:1053}) id=l1053><div class="dl_wrapper"><a name=line1053 onclick='overload_click(this)' class="a_ln">1053<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">\fBCtags\fP has more options than \fBls\fP(1).
</div></div></div><div class="div_line"  data-info=({id:21691,ln:1054}) id=l1054><div class="dl_wrapper"><a name=line1054 onclick='overload_click(this)' class="a_ln">1054<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:21692,ln:1055}) id=l1055><div class="dl_wrapper"><a name=line1055 onclick='overload_click(this)' class="a_ln">1055<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">When parsing a C++ member function definition (e.g. "className::function"),
</div></div></div><div class="div_line"  data-info=({id:21693,ln:1056}) id=l1056><div class="dl_wrapper"><a name=line1056 onclick='overload_click(this)' class="a_ln">1056<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">\fBctags\fP cannot determine whether the scope specifier is a class name or a
</div></div></div><div class="div_line"  data-info=({id:21694,ln:1057}) id=l1057><div class="dl_wrapper"><a name=line1057 onclick='overload_click(this)' class="a_ln">1057<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">namespace specifier and always lists it as a class name in the scope portion
</div></div></div><div class="div_line"  data-info=({id:21695,ln:1058}) id=l1058><div class="dl_wrapper"><a name=line1058 onclick='overload_click(this)' class="a_ln">1058<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">of the extension fields. Also, if a C++ function is defined outside of the
</div></div></div><div class="div_line"  data-info=({id:21696,ln:1059}) id=l1059><div class="dl_wrapper"><a name=line1059 onclick='overload_click(this)' class="a_ln">1059<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">class declaration (the usual case), the access specification (i.e. public,
</div></div></div><div class="div_line"  data-info=({id:21697,ln:1060}) id=l1060><div class="dl_wrapper"><a name=line1060 onclick='overload_click(this)' class="a_ln">1060<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">protected, or private) and implementation information (e.g. virtual, pure
</div></div></div><div class="div_line"  data-info=({id:21698,ln:1061}) id=l1061><div class="dl_wrapper"><a name=line1061 onclick='overload_click(this)' class="a_ln">1061<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">virtual) contained in the function declaration are not known when the tag is
</div></div></div><div class="div_line"  data-info=({id:21699,ln:1062}) id=l1062><div class="dl_wrapper"><a name=line1062 onclick='overload_click(this)' class="a_ln">1062<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">generated for the function definition. It will, however be available for
</div></div></div><div class="div_line"  data-info=({id:21700,ln:1063}) id=l1063><div class="dl_wrapper"><a name=line1063 onclick='overload_click(this)' class="a_ln">1063<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">prototypes (e.g \fB\-\-c++\-kinds\fP=\fI+p\fP).
</div></div></div><div class="div_line"  data-info=({id:21701,ln:1064}) id=l1064><div class="dl_wrapper"><a name=line1064 onclick='overload_click(this)' class="a_ln">1064<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:21702,ln:1065}) id=l1065><div class="dl_wrapper"><a name=line1065 onclick='overload_click(this)' class="a_ln">1065<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">No qualified tags are generated for language objects inherited into a class.
</div></div></div><div class="div_line"  data-info=({id:21703,ln:1066}) id=l1066><div class="dl_wrapper"><a name=line1066 onclick='overload_click(this)' class="a_ln">1066<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:21704,ln:1067}) id=l1067><div class="dl_wrapper"><a name=line1067 onclick='overload_click(this)' class="a_ln">1067<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:21705,ln:1068}) id=l1068><div class="dl_wrapper"><a name=line1068 onclick='overload_click(this)' class="a_ln">1068<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.SH "ENVIRONMENT VARIABLES"
</div></div></div><div class="div_line"  data-info=({id:21706,ln:1069}) id=l1069><div class="dl_wrapper"><a name=line1069 onclick='overload_click(this)' class="a_ln">1069<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:21707,ln:1070}) id=l1070><div class="dl_wrapper"><a name=line1070 onclick='overload_click(this)' class="a_ln">1070<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.TP 8
</div></div></div><div class="div_line"  data-info=({id:21708,ln:1071}) id=l1071><div class="dl_wrapper"><a name=line1071 onclick='overload_click(this)' class="a_ln">1071<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.B CTAGS
</div></div></div><div class="div_line"  data-info=({id:21709,ln:1072}) id=l1072><div class="dl_wrapper"><a name=line1072 onclick='overload_click(this)' class="a_ln">1072<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">If this environment variable exists, it will be expected to contain a set of
</div></div></div><div class="div_line"  data-info=({id:21710,ln:1073}) id=l1073><div class="dl_wrapper"><a name=line1073 onclick='overload_click(this)' class="a_ln">1073<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">default options which are read when \fBctags\fP starts, after the
</div></div></div><div class="div_line"  data-info=({id:21711,ln:1074}) id=l1074><div class="dl_wrapper"><a name=line1074 onclick='overload_click(this)' class="a_ln">1074<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">configuration files listed in \fBFILES\fP, below, are read, but before any
</div></div></div><div class="div_line"  data-info=({id:21712,ln:1075}) id=l1075><div class="dl_wrapper"><a name=line1075 onclick='overload_click(this)' class="a_ln">1075<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">command line options are read. Options appearing on the command line will
</div></div></div><div class="div_line"  data-info=({id:21713,ln:1076}) id=l1076><div class="dl_wrapper"><a name=line1076 onclick='overload_click(this)' class="a_ln">1076<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">override options specified in this variable. Only options will be read from
</div></div></div><div class="div_line"  data-info=({id:21714,ln:1077}) id=l1077><div class="dl_wrapper"><a name=line1077 onclick='overload_click(this)' class="a_ln">1077<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">this variable. Note that all white space in this variable is considered a
</div></div></div><div class="div_line"  data-info=({id:21715,ln:1078}) id=l1078><div class="dl_wrapper"><a name=line1078 onclick='overload_click(this)' class="a_ln">1078<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">separator, making it impossible to pass an option parameter containing an
</div></div></div><div class="div_line"  data-info=({id:21716,ln:1079}) id=l1079><div class="dl_wrapper"><a name=line1079 onclick='overload_click(this)' class="a_ln">1079<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">embedded space. If this is a problem, use a configuration file instead.
</div></div></div><div class="div_line"  data-info=({id:21717,ln:1080}) id=l1080><div class="dl_wrapper"><a name=line1080 onclick='overload_click(this)' class="a_ln">1080<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:21718,ln:1081}) id=l1081><div class="dl_wrapper"><a name=line1081 onclick='overload_click(this)' class="a_ln">1081<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.TP 8
</div></div></div><div class="div_line"  data-info=({id:21719,ln:1082}) id=l1082><div class="dl_wrapper"><a name=line1082 onclick='overload_click(this)' class="a_ln">1082<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.B ETAGS
</div></div></div><div class="div_line"  data-info=({id:21720,ln:1083}) id=l1083><div class="dl_wrapper"><a name=line1083 onclick='overload_click(this)' class="a_ln">1083<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">Similar to the \fBCTAGS\fP variable above, this variable, if found, will be
</div></div></div><div class="div_line"  data-info=({id:21721,ln:1084}) id=l1084><div class="dl_wrapper"><a name=line1084 onclick='overload_click(this)' class="a_ln">1084<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">read when \fBetags\fP starts. If this variable is not found, \fBetags\fP will
</div></div></div><div class="div_line"  data-info=({id:21722,ln:1085}) id=l1085><div class="dl_wrapper"><a name=line1085 onclick='overload_click(this)' class="a_ln">1085<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">try to use \fBCTAGS\fP instead.
</div></div></div><div class="div_line"  data-info=({id:21723,ln:1086}) id=l1086><div class="dl_wrapper"><a name=line1086 onclick='overload_click(this)' class="a_ln">1086<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:21724,ln:1087}) id=l1087><div class="dl_wrapper"><a name=line1087 onclick='overload_click(this)' class="a_ln">1087<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.TP 8
</div></div></div><div class="div_line"  data-info=({id:21725,ln:1088}) id=l1088><div class="dl_wrapper"><a name=line1088 onclick='overload_click(this)' class="a_ln">1088<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.B TMPDIR
</div></div></div><div class="div_line"  data-info=({id:21726,ln:1089}) id=l1089><div class="dl_wrapper"><a name=line1089 onclick='overload_click(this)' class="a_ln">1089<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">On Unix-like hosts where mkstemp() is available, the value of this variable
</div></div></div><div class="div_line"  data-info=({id:21727,ln:1090}) id=l1090><div class="dl_wrapper"><a name=line1090 onclick='overload_click(this)' class="a_ln">1090<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">specifies the directory in which to place temporary files. This can be useful
</div></div></div><div class="div_line"  data-info=({id:21728,ln:1091}) id=l1091><div class="dl_wrapper"><a name=line1091 onclick='overload_click(this)' class="a_ln">1091<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">if the size of a temporary file becomes too large to fit on the partition
</div></div></div><div class="div_line"  data-info=({id:21729,ln:1092}) id=l1092><div class="dl_wrapper"><a name=line1092 onclick='overload_click(this)' class="a_ln">1092<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">holding the default temporary directory defined at compilation time.
</div></div></div><div class="div_line"  data-info=({id:21730,ln:1093}) id=l1093><div class="dl_wrapper"><a name=line1093 onclick='overload_click(this)' class="a_ln">1093<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">\fBctags\fP creates temporary files only if either (1) an emacs-style tag file
</div></div></div><div class="div_line"  data-info=({id:21731,ln:1094}) id=l1094><div class="dl_wrapper"><a name=line1094 onclick='overload_click(this)' class="a_ln">1094<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">is being generated, (2) the tag file is being sent to standard output, or (3)
</div></div></div><div class="div_line"  data-info=({id:21732,ln:1095}) id=l1095><div class="dl_wrapper"><a name=line1095 onclick='overload_click(this)' class="a_ln">1095<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">the program was compiled to use an internal sort algorithm to sort the tag
</div></div></div><div class="div_line"  data-info=({id:21733,ln:1096}) id=l1096><div class="dl_wrapper"><a name=line1096 onclick='overload_click(this)' class="a_ln">1096<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">files instead of the the sort utility of the operating system. If the sort
</div></div></div><div class="div_line"  data-info=({id:21734,ln:1097}) id=l1097><div class="dl_wrapper"><a name=line1097 onclick='overload_click(this)' class="a_ln">1097<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">utility of the operating system is being used, it will generally observe this
</div></div></div><div class="div_line"  data-info=({id:21735,ln:1098}) id=l1098><div class="dl_wrapper"><a name=line1098 onclick='overload_click(this)' class="a_ln">1098<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">variable also. Note that if \fBctags\fP is setuid, the value of TMPDIR will be
</div></div></div><div class="div_line"  data-info=({id:21736,ln:1099}) id=l1099><div class="dl_wrapper"><a name=line1099 onclick='overload_click(this)' class="a_ln">1099<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">ignored.
</div></div></div><div class="div_line"  data-info=({id:21737,ln:1100}) id=l1100><div class="dl_wrapper"><a name=line1100 onclick='overload_click(this)' class="a_ln">1100<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:21738,ln:1101}) id=l1101><div class="dl_wrapper"><a name=line1101 onclick='overload_click(this)' class="a_ln">1101<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:21739,ln:1102}) id=l1102><div class="dl_wrapper"><a name=line1102 onclick='overload_click(this)' class="a_ln">1102<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.SH "FILES"
</div></div></div><div class="div_line"  data-info=({id:21740,ln:1103}) id=l1103><div class="dl_wrapper"><a name=line1103 onclick='overload_click(this)' class="a_ln">1103<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.PD 0
</div></div></div><div class="div_line"  data-info=({id:21741,ln:1104}) id=l1104><div class="dl_wrapper"><a name=line1104 onclick='overload_click(this)' class="a_ln">1104<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.I /ctags.cnf (on MSDOS, MSWindows only)
</div></div></div><div class="div_line"  data-info=({id:21742,ln:1105}) id=l1105><div class="dl_wrapper"><a name=line1105 onclick='overload_click(this)' class="a_ln">1105<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.br
</div></div></div><div class="div_line"  data-info=({id:21743,ln:1106}) id=l1106><div class="dl_wrapper"><a name=line1106 onclick='overload_click(this)' class="a_ln">1106<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.I /etc/ctags.conf
</div></div></div><div class="div_line"  data-info=({id:21744,ln:1107}) id=l1107><div class="dl_wrapper"><a name=line1107 onclick='overload_click(this)' class="a_ln">1107<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.br
</div></div></div><div class="div_line"  data-info=({id:21745,ln:1108}) id=l1108><div class="dl_wrapper"><a name=line1108 onclick='overload_click(this)' class="a_ln">1108<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.I /usr/local/etc/ctags.conf
</div></div></div><div class="div_line"  data-info=({id:21746,ln:1109}) id=l1109><div class="dl_wrapper"><a name=line1109 onclick='overload_click(this)' class="a_ln">1109<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.br
</div></div></div><div class="div_line"  data-info=({id:21747,ln:1110}) id=l1110><div class="dl_wrapper"><a name=line1110 onclick='overload_click(this)' class="a_ln">1110<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.I $HOME/.ctags
</div></div></div><div class="div_line"  data-info=({id:21748,ln:1111}) id=l1111><div class="dl_wrapper"><a name=line1111 onclick='overload_click(this)' class="a_ln">1111<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.br
</div></div></div><div class="div_line"  data-info=({id:21749,ln:1112}) id=l1112><div class="dl_wrapper"><a name=line1112 onclick='overload_click(this)' class="a_ln">1112<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.I $HOME/ctags.cnf (on MSDOS, MSWindows only)
</div></div></div><div class="div_line"  data-info=({id:21750,ln:1113}) id=l1113><div class="dl_wrapper"><a name=line1113 onclick='overload_click(this)' class="a_ln">1113<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.br
</div></div></div><div class="div_line"  data-info=({id:21751,ln:1114}) id=l1114><div class="dl_wrapper"><a name=line1114 onclick='overload_click(this)' class="a_ln">1114<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.I .ctags
</div></div></div><div class="div_line"  data-info=({id:21752,ln:1115}) id=l1115><div class="dl_wrapper"><a name=line1115 onclick='overload_click(this)' class="a_ln">1115<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.br
</div></div></div><div class="div_line"  data-info=({id:21753,ln:1116}) id=l1116><div class="dl_wrapper"><a name=line1116 onclick='overload_click(this)' class="a_ln">1116<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.I ctags.cnf (on MSDOS, MSWindows only)
</div></div></div><div class="div_line"  data-info=({id:21754,ln:1117}) id=l1117><div class="dl_wrapper"><a name=line1117 onclick='overload_click(this)' class="a_ln">1117<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.IP
</div></div></div><div class="div_line"  data-info=({id:21755,ln:1118}) id=l1118><div class="dl_wrapper"><a name=line1118 onclick='overload_click(this)' class="a_ln">1118<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">If any of these configuration files exist, each will be expected to contain a
</div></div></div><div class="div_line"  data-info=({id:21756,ln:1119}) id=l1119><div class="dl_wrapper"><a name=line1119 onclick='overload_click(this)' class="a_ln">1119<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">set of default options which are read in the order listed when \fBctags\fP
</div></div></div><div class="div_line"  data-info=({id:21757,ln:1120}) id=l1120><div class="dl_wrapper"><a name=line1120 onclick='overload_click(this)' class="a_ln">1120<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">starts, but before the \fBCTAGS\fP environment variable is read or any command
</div></div></div><div class="div_line"  data-info=({id:21758,ln:1121}) id=l1121><div class="dl_wrapper"><a name=line1121 onclick='overload_click(this)' class="a_ln">1121<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">line options are read. This makes it possible to set up site-wide, personal
</div></div></div><div class="div_line"  data-info=({id:21759,ln:1122}) id=l1122><div class="dl_wrapper"><a name=line1122 onclick='overload_click(this)' class="a_ln">1122<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">or project-level defaults. It is possible to compile \fBctags\fP to read an
</div></div></div><div class="div_line"  data-info=({id:21760,ln:1123}) id=l1123><div class="dl_wrapper"><a name=line1123 onclick='overload_click(this)' class="a_ln">1123<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">additional configuration file before any of those shown above, which will be
</div></div></div><div class="div_line"  data-info=({id:21761,ln:1124}) id=l1124><div class="dl_wrapper"><a name=line1124 onclick='overload_click(this)' class="a_ln">1124<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">indicated if the output produced by the \fB\-\-version\fP option lists the
</div></div></div><div class="div_line"  data-info=({id:21762,ln:1125}) id=l1125><div class="dl_wrapper"><a name=line1125 onclick='overload_click(this)' class="a_ln">1125<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">"custom-conf" feature. Options appearing in the \fBCTAGS\fP environment
</div></div></div><div class="div_line"  data-info=({id:21763,ln:1126}) id=l1126><div class="dl_wrapper"><a name=line1126 onclick='overload_click(this)' class="a_ln">1126<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">variable or on the command line will override options specified in these
</div></div></div><div class="div_line"  data-info=({id:21764,ln:1127}) id=l1127><div class="dl_wrapper"><a name=line1127 onclick='overload_click(this)' class="a_ln">1127<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">files. Only options will be read from these files. Note that the option files
</div></div></div><div class="div_line"  data-info=({id:21765,ln:1128}) id=l1128><div class="dl_wrapper"><a name=line1128 onclick='overload_click(this)' class="a_ln">1128<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">are read in line-oriented mode in which spaces are significant (since
</div></div></div><div class="div_line"  data-info=({id:21766,ln:1129}) id=l1129><div class="dl_wrapper"><a name=line1129 onclick='overload_click(this)' class="a_ln">1129<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">shell quoting is not possible). Each line of the file is read as one command
</div></div></div><div class="div_line"  data-info=({id:21767,ln:1130}) id=l1130><div class="dl_wrapper"><a name=line1130 onclick='overload_click(this)' class="a_ln">1130<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">line parameter (as if it were quoted with single quotes). Therefore, use new
</div></div></div><div class="div_line"  data-info=({id:21768,ln:1131}) id=l1131><div class="dl_wrapper"><a name=line1131 onclick='overload_click(this)' class="a_ln">1131<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">lines to indicate separate command-line arguments.
</div></div></div><div class="div_line"  data-info=({id:21769,ln:1132}) id=l1132><div class="dl_wrapper"><a name=line1132 onclick='overload_click(this)' class="a_ln">1132<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.PD 1
</div></div></div><div class="div_line"  data-info=({id:21770,ln:1133}) id=l1133><div class="dl_wrapper"><a name=line1133 onclick='overload_click(this)' class="a_ln">1133<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:21771,ln:1134}) id=l1134><div class="dl_wrapper"><a name=line1134 onclick='overload_click(this)' class="a_ln">1134<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.TP
</div></div></div><div class="div_line"  data-info=({id:21772,ln:1135}) id=l1135><div class="dl_wrapper"><a name=line1135 onclick='overload_click(this)' class="a_ln">1135<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.I tags
</div></div></div><div class="div_line"  data-info=({id:21773,ln:1136}) id=l1136><div class="dl_wrapper"><a name=line1136 onclick='overload_click(this)' class="a_ln">1136<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">The default tag file created by \fBctags\fP.
</div></div></div><div class="div_line"  data-info=({id:21774,ln:1137}) id=l1137><div class="dl_wrapper"><a name=line1137 onclick='overload_click(this)' class="a_ln">1137<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.TP
</div></div></div><div class="div_line"  data-info=({id:21775,ln:1138}) id=l1138><div class="dl_wrapper"><a name=line1138 onclick='overload_click(this)' class="a_ln">1138<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.I TAGS
</div></div></div><div class="div_line"  data-info=({id:21776,ln:1139}) id=l1139><div class="dl_wrapper"><a name=line1139 onclick='overload_click(this)' class="a_ln">1139<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">The default tag file created by \fBetags\fP.
</div></div></div><div class="div_line"  data-info=({id:21777,ln:1140}) id=l1140><div class="dl_wrapper"><a name=line1140 onclick='overload_click(this)' class="a_ln">1140<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:21778,ln:1141}) id=l1141><div class="dl_wrapper"><a name=line1141 onclick='overload_click(this)' class="a_ln">1141<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.SH "SEE ALSO"
</div></div></div><div class="div_line"  data-info=({id:21779,ln:1142}) id=l1142><div class="dl_wrapper"><a name=line1142 onclick='overload_click(this)' class="a_ln">1142<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">The official Exuberant Ctags web site at:
</div></div></div><div class="div_line"  data-info=({id:21780,ln:1143}) id=l1143><div class="dl_wrapper"><a name=line1143 onclick='overload_click(this)' class="a_ln">1143<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:21781,ln:1144}) id=l1144><div class="dl_wrapper"><a name=line1144 onclick='overload_click(this)' class="a_ln">1144<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.RS
</div></div></div><div class="div_line"  data-info=({id:21782,ln:1145}) id=l1145><div class="dl_wrapper"><a name=line1145 onclick='overload_click(this)' class="a_ln">1145<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">http://ctags.sourceforge.net
</div></div></div><div class="div_line"  data-info=({id:21783,ln:1146}) id=l1146><div class="dl_wrapper"><a name=line1146 onclick='overload_click(this)' class="a_ln">1146<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.RE
</div></div></div><div class="div_line"  data-info=({id:21784,ln:1147}) id=l1147><div class="dl_wrapper"><a name=line1147 onclick='overload_click(this)' class="a_ln">1147<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:21785,ln:1148}) id=l1148><div class="dl_wrapper"><a name=line1148 onclick='overload_click(this)' class="a_ln">1148<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">Also \fBex\fP(1), \fBvi\fP(1), \fBelvis\fP, or, better yet, \fBvim\fP, the
</div></div></div><div class="div_line"  data-info=({id:21786,ln:1149}) id=l1149><div class="dl_wrapper"><a name=line1149 onclick='overload_click(this)' class="a_ln">1149<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">official editor of \fBctags\fP. For more information on \fBvim\fP, see the VIM
</div></div></div><div class="div_line"  data-info=({id:21787,ln:1150}) id=l1150><div class="dl_wrapper"><a name=line1150 onclick='overload_click(this)' class="a_ln">1150<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">Pages web site at:
</div></div></div><div class="div_line"  data-info=({id:21788,ln:1151}) id=l1151><div class="dl_wrapper"><a name=line1151 onclick='overload_click(this)' class="a_ln">1151<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:21789,ln:1152}) id=l1152><div class="dl_wrapper"><a name=line1152 onclick='overload_click(this)' class="a_ln">1152<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.RS
</div></div></div><div class="div_line"  data-info=({id:21790,ln:1153}) id=l1153><div class="dl_wrapper"><a name=line1153 onclick='overload_click(this)' class="a_ln">1153<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">http://www.vim.org/
</div></div></div><div class="div_line"  data-info=({id:21791,ln:1154}) id=l1154><div class="dl_wrapper"><a name=line1154 onclick='overload_click(this)' class="a_ln">1154<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.RE
</div></div></div><div class="div_line"  data-info=({id:21792,ln:1155}) id=l1155><div class="dl_wrapper"><a name=line1155 onclick='overload_click(this)' class="a_ln">1155<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:21793,ln:1156}) id=l1156><div class="dl_wrapper"><a name=line1156 onclick='overload_click(this)' class="a_ln">1156<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:21794,ln:1157}) id=l1157><div class="dl_wrapper"><a name=line1157 onclick='overload_click(this)' class="a_ln">1157<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.SH "AUTHOR"
</div></div></div><div class="div_line"  data-info=({id:21795,ln:1158}) id=l1158><div class="dl_wrapper"><a name=line1158 onclick='overload_click(this)' class="a_ln">1158<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">Darren Hiebert &lt;dhiebert at users.sourceforge.net&gt;
</div></div></div><div class="div_line"  data-info=({id:21796,ln:1159}) id=l1159><div class="dl_wrapper"><a name=line1159 onclick='overload_click(this)' class="a_ln">1159<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.br
</div></div></div><div class="div_line"  data-info=({id:21797,ln:1160}) id=l1160><div class="dl_wrapper"><a name=line1160 onclick='overload_click(this)' class="a_ln">1160<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">http://DarrenHiebert.com/
</div></div></div><div class="div_line"  data-info=({id:21798,ln:1161}) id=l1161><div class="dl_wrapper"><a name=line1161 onclick='overload_click(this)' class="a_ln">1161<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:21799,ln:1162}) id=l1162><div class="dl_wrapper"><a name=line1162 onclick='overload_click(this)' class="a_ln">1162<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:21800,ln:1163}) id=l1163><div class="dl_wrapper"><a name=line1163 onclick='overload_click(this)' class="a_ln">1163<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.SH "MOTIVATION"
</div></div></div><div class="div_line"  data-info=({id:21801,ln:1164}) id=l1164><div class="dl_wrapper"><a name=line1164 onclick='overload_click(this)' class="a_ln">1164<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">"Think ye at all times of rendering some service to every member of the human
</div></div></div><div class="div_line"  data-info=({id:21802,ln:1165}) id=l1165><div class="dl_wrapper"><a name=line1165 onclick='overload_click(this)' class="a_ln">1165<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">race."
</div></div></div><div class="div_line"  data-info=({id:21803,ln:1166}) id=l1166><div class="dl_wrapper"><a name=line1166 onclick='overload_click(this)' class="a_ln">1166<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:21804,ln:1167}) id=l1167><div class="dl_wrapper"><a name=line1167 onclick='overload_click(this)' class="a_ln">1167<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">"All effort and exertion put forth by man from the fullness of his heart is
</div></div></div><div class="div_line"  data-info=({id:21805,ln:1168}) id=l1168><div class="dl_wrapper"><a name=line1168 onclick='overload_click(this)' class="a_ln">1168<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">worship, if it is prompted by the highest motives and the will to do service
</div></div></div><div class="div_line"  data-info=({id:21806,ln:1169}) id=l1169><div class="dl_wrapper"><a name=line1169 onclick='overload_click(this)' class="a_ln">1169<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">to humanity."
</div></div></div><div class="div_line"  data-info=({id:21807,ln:1170}) id=l1170><div class="dl_wrapper"><a name=line1170 onclick='overload_click(this)' class="a_ln">1170<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:21808,ln:1171}) id=l1171><div class="dl_wrapper"><a name=line1171 onclick='overload_click(this)' class="a_ln">1171<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.RS
</div></div></div><div class="div_line"  data-info=({id:21809,ln:1172}) id=l1172><div class="dl_wrapper"><a name=line1172 onclick='overload_click(this)' class="a_ln">1172<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">\-\- From the Baha'i Writings
</div></div></div><div class="div_line"  data-info=({id:21810,ln:1173}) id=l1173><div class="dl_wrapper"><a name=line1173 onclick='overload_click(this)' class="a_ln">1173<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.RE
</div></div></div><div class="div_line"  data-info=({id:21811,ln:1174}) id=l1174><div class="dl_wrapper"><a name=line1174 onclick='overload_click(this)' class="a_ln">1174<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:21812,ln:1175}) id=l1175><div class="dl_wrapper"><a name=line1175 onclick='overload_click(this)' class="a_ln">1175<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:21813,ln:1176}) id=l1176><div class="dl_wrapper"><a name=line1176 onclick='overload_click(this)' class="a_ln">1176<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">.SH "CREDITS"
</div></div></div><div class="div_line"  data-info=({id:21814,ln:1177}) id=l1177><div class="dl_wrapper"><a name=line1177 onclick='overload_click(this)' class="a_ln">1177<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">This version of \fBctags\fP was originally derived from and inspired by the
</div></div></div><div class="div_line"  data-info=({id:21815,ln:1178}) id=l1178><div class="dl_wrapper"><a name=line1178 onclick='overload_click(this)' class="a_ln">1178<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">ctags program by Steve Kirkendall &lt;kirkenda@cs.pdx.edu&gt; that comes with the
</div></div></div><div class="div_line"  data-info=({id:21816,ln:1179}) id=l1179><div class="dl_wrapper"><a name=line1179 onclick='overload_click(this)' class="a_ln">1179<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">Elvis vi clone (though virtually none of the original code remains).
</div></div></div><div class="div_line"  data-info=({id:21817,ln:1180}) id=l1180><div class="dl_wrapper"><a name=line1180 onclick='overload_click(this)' class="a_ln">1180<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:21818,ln:1181}) id=l1181><div class="dl_wrapper"><a name=line1181 onclick='overload_click(this)' class="a_ln">1181<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">Credit is also due Bram Moolenaar &lt;Bram@vim.org&gt;, the author of \fBvim\fP, who
</div></div></div><div class="div_line"  data-info=({id:21819,ln:1182}) id=l1182><div class="dl_wrapper"><a name=line1182 onclick='overload_click(this)' class="a_ln">1182<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">has devoted so much of his time and energy both to developing the editor as a
</div></div></div><div class="div_line"  data-info=({id:21820,ln:1183}) id=l1183><div class="dl_wrapper"><a name=line1183 onclick='overload_click(this)' class="a_ln">1183<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">service to others, and to helping the orphans of Uganda.
</div></div></div><div class="div_line"  data-info=({id:21821,ln:1184}) id=l1184><div class="dl_wrapper"><a name=line1184 onclick='overload_click(this)' class="a_ln">1184<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:21822,ln:1185}) id=l1185><div class="dl_wrapper"><a name=line1185 onclick='overload_click(this)' class="a_ln">1185<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">The section entitled "HOW TO USE WITH GNU EMACS" was shamelessly stolen from
</div></div></div><div class="div_line"  data-info=({id:21823,ln:1186}) id=l1186><div class="dl_wrapper"><a name=line1186 onclick='overload_click(this)' class="a_ln">1186<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">the info page for GNU \fBetags\fP.
</div></div></div>
<script>
var local_symbol_set=0;
var file_info = '({folder:0,project:"ctags5_8", table:"comments", topdir:"ctags_5_8", path:"ctags/ctags.1",version:"5_8"})';
</script>