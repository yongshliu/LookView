<div class="div_line"  data-info=({id:1642,ln:1}) id=l1><div class="dl_wrapper"><a name=line1 onclick='overload_click(this)' class="a_ln">1<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">If you are attempting to install Exuberant Ctags on a Unix-like platform
</div></div></div><div class="div_line"  data-info=({id:1643,ln:2}) id=l2><div class="dl_wrapper"><a name=line2 onclick='overload_click(this)' class="a_ln">2<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">(one that can at least run a Bourne shell script) see the file INSTALL.
</div></div></div><div class="div_line"  data-info=({id:1644,ln:3}) id=l3><div class="dl_wrapper"><a name=line3 onclick='overload_click(this)' class="a_ln">3<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:1645,ln:4}) id=l4><div class="dl_wrapper"><a name=line4 onclick='overload_click(this)' class="a_ln">4<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">Installation Notes
</div></div></div><div class="div_line"  data-info=({id:1646,ln:5}) id=l5><div class="dl_wrapper"><a name=line5 onclick='overload_click(this)' class="a_ln">5<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">==================
</div></div></div><div class="div_line"  data-info=({id:1647,ln:6}) id=l6><div class="dl_wrapper"><a name=line6 onclick='overload_click(this)' class="a_ln">6<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:1648,ln:7}) id=l7><div class="dl_wrapper"><a name=line7 onclick='overload_click(this)' class="a_ln">7<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">For non-Unix platforms, simple makefiles are provided:
</div></div></div><div class="div_line"  data-info=({id:1649,ln:8}) id=l8><div class="dl_wrapper"><a name=line8 onclick='overload_click(this)' class="a_ln">8<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:1650,ln:9}) id=l9><div class="dl_wrapper"><a name=line9 onclick='overload_click(this)' class="a_ln">9<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">    descrip.mms   For VMS using either DEC C or VAX C
</div></div></div><div class="div_line"  data-info=({id:1651,ln:10}) id=l10><div class="dl_wrapper"><a name=line10 onclick='overload_click(this)' class="a_ln">10<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">    mk_bc3.mak    For MSDOS using Borland C/C++ 3.x
</div></div></div><div class="div_line"  data-info=({id:1652,ln:11}) id=l11><div class="dl_wrapper"><a name=line11 onclick='overload_click(this)' class="a_ln">11<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">    mk_bc5.mak    For Win32 using Borland C++ 5.5
</div></div></div><div class="div_line"  data-info=({id:1653,ln:12}) id=l12><div class="dl_wrapper"><a name=line12 onclick='overload_click(this)' class="a_ln">12<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">    mk_djg.mak    For MSDOS using DJGPP Gnu GCC (better to follow Unix install)
</div></div></div><div class="div_line"  data-info=({id:1654,ln:13}) id=l13><div class="dl_wrapper"><a name=line13 onclick='overload_click(this)' class="a_ln">13<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">    mk_manx.mak   For Amiga using Aztec/Manx C 5.0
</div></div></div><div class="div_line"  data-info=({id:1655,ln:14}) id=l14><div class="dl_wrapper"><a name=line14 onclick='overload_click(this)' class="a_ln">14<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">    mk_mingw.mak  For Win32 using MinGW
</div></div></div><div class="div_line"  data-info=({id:1656,ln:15}) id=l15><div class="dl_wrapper"><a name=line15 onclick='overload_click(this)' class="a_ln">15<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">    mk_mpw.mak    For Macintosh using MPW
</div></div></div><div class="div_line"  data-info=({id:1657,ln:16}) id=l16><div class="dl_wrapper"><a name=line16 onclick='overload_click(this)' class="a_ln">16<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">    mk_mvc.mak    For Win32 using Microsoft Visual C++
</div></div></div><div class="div_line"  data-info=({id:1658,ln:17}) id=l17><div class="dl_wrapper"><a name=line17 onclick='overload_click(this)' class="a_ln">17<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">    mk_os2.mak    For OS/2 using GCC (EMX)
</div></div></div><div class="div_line"  data-info=({id:1659,ln:18}) id=l18><div class="dl_wrapper"><a name=line18 onclick='overload_click(this)' class="a_ln">18<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">    mk_qdos.mak   For QDOS using C68
</div></div></div><div class="div_line"  data-info=({id:1660,ln:19}) id=l19><div class="dl_wrapper"><a name=line19 onclick='overload_click(this)' class="a_ln">19<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">    mk_riscos.mak For RISC OS using the GCC SDK &lt;http://hard-mofo.dsvr.net&gt;
</div></div></div><div class="div_line"  data-info=({id:1661,ln:20}) id=l20><div class="dl_wrapper"><a name=line20 onclick='overload_click(this)' class="a_ln">20<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">    mk_sas.mak    For Amiga using SAS/C
</div></div></div><div class="div_line"  data-info=({id:1662,ln:21}) id=l21><div class="dl_wrapper"><a name=line21 onclick='overload_click(this)' class="a_ln">21<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:1663,ln:22}) id=l22><div class="dl_wrapper"><a name=line22 onclick='overload_click(this)' class="a_ln">22<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:1664,ln:23}) id=l23><div class="dl_wrapper"><a name=line23 onclick='overload_click(this)' class="a_ln">23<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">Special Notes
</div></div></div><div class="div_line"  data-info=({id:1665,ln:24}) id=l24><div class="dl_wrapper"><a name=line24 onclick='overload_click(this)' class="a_ln">24<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">=============
</div></div></div><div class="div_line"  data-info=({id:1666,ln:25}) id=l25><div class="dl_wrapper"><a name=line25 onclick='overload_click(this)' class="a_ln">25<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:1667,ln:26}) id=l26><div class="dl_wrapper"><a name=line26 onclick='overload_click(this)' class="a_ln">26<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">DJGPP:
</div></div></div><div class="div_line"  data-info=({id:1668,ln:27}) id=l27><div class="dl_wrapper"><a name=line27 onclick='overload_click(this)' class="a_ln">27<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">------
</div></div></div><div class="div_line"  data-info=({id:1669,ln:28}) id=l28><div class="dl_wrapper"><a name=line28 onclick='overload_click(this)' class="a_ln">28<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:1670,ln:29}) id=l29><div class="dl_wrapper"><a name=line29 onclick='overload_click(this)' class="a_ln">29<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">  It is better to follow the standard Unix install on DJGPP, but this requires
</div></div></div><div class="div_line"  data-info=({id:1671,ln:30}) id=l30><div class="dl_wrapper"><a name=line30 onclick='overload_click(this)' class="a_ln">30<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">  that you use BASH and requires a fairly complete installation of GJGPP
</div></div></div><div class="div_line"  data-info=({id:1672,ln:31}) id=l31><div class="dl_wrapper"><a name=line31 onclick='overload_click(this)' class="a_ln">31<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">  packages. You can use mk_djg.mak if you can't run configure.
</div></div></div><div class="div_line"  data-info=({id:1673,ln:32}) id=l32><div class="dl_wrapper"><a name=line32 onclick='overload_click(this)' class="a_ln">32<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:1674,ln:33}) id=l33><div class="dl_wrapper"><a name=line33 onclick='overload_click(this)' class="a_ln">33<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">Macintosh with MPW:
</div></div></div><div class="div_line"  data-info=({id:1675,ln:34}) id=l34><div class="dl_wrapper"><a name=line34 onclick='overload_click(this)' class="a_ln">34<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">-------------------
</div></div></div><div class="div_line"  data-info=({id:1676,ln:35}) id=l35><div class="dl_wrapper"><a name=line35 onclick='overload_click(this)' class="a_ln">35<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:1677,ln:36}) id=l36><div class="dl_wrapper"><a name=line36 onclick='overload_click(this)' class="a_ln">36<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">  To build Ctags on MPW you will have to have the Metrowerks compilers
</div></div></div><div class="div_line"  data-info=({id:1678,ln:37}) id=l37><div class="dl_wrapper"><a name=line37 onclick='overload_click(this)' class="a_ln">37<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">  or you will have to edit the makefiles yourself.
</div></div></div><div class="div_line"  data-info=({id:1679,ln:38}) id=l38><div class="dl_wrapper"><a name=line38 onclick='overload_click(this)' class="a_ln">38<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">  
</div></div></div><div class="div_line"  data-info=({id:1680,ln:39}) id=l39><div class="dl_wrapper"><a name=line39 onclick='overload_click(this)' class="a_ln">39<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">  Since the makefile for MPW is called mk_mpw.mak you will have to give
</div></div></div><div class="div_line"  data-info=({id:1681,ln:40}) id=l40><div class="dl_wrapper"><a name=line40 onclick='overload_click(this)' class="a_ln">40<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">  the command: `Make -f mk_mpw.mak CTags` and then select the output
</div></div></div><div class="div_line"  data-info=({id:1682,ln:41}) id=l41><div class="dl_wrapper"><a name=line41 onclick='overload_click(this)' class="a_ln">41<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">  and execute it. Alternatively you could rename this makefile to
</div></div></div><div class="div_line"  data-info=({id:1683,ln:42}) id=l42><div class="dl_wrapper"><a name=line42 onclick='overload_click(this)' class="a_ln">42<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">  CTags.make and issue the command `Build CTags`.
</div></div></div><div class="div_line"  data-info=({id:1684,ln:43}) id=l43><div class="dl_wrapper"><a name=line43 onclick='overload_click(this)' class="a_ln">43<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">  
</div></div></div><div class="div_line"  data-info=({id:1685,ln:44}) id=l44><div class="dl_wrapper"><a name=line44 onclick='overload_click(this)' class="a_ln">44<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">  If the build process goes wrong make sure the line endings for the
</div></div></div><div class="div_line"  data-info=({id:1686,ln:45}) id=l45><div class="dl_wrapper"><a name=line45 onclick='overload_click(this)' class="a_ln">45<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">  makefile are set to MacOS (CR instead of LF).
</div></div></div><div class="div_line"  data-info=({id:1687,ln:46}) id=l46><div class="dl_wrapper"><a name=line46 onclick='overload_click(this)' class="a_ln">46<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:1688,ln:47}) id=l47><div class="dl_wrapper"><a name=line47 onclick='overload_click(this)' class="a_ln">47<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">  This version of Ctags only accepts and emits unix style paths. This was
</div></div></div><div class="div_line"  data-info=({id:1689,ln:48}) id=l48><div class="dl_wrapper"><a name=line48 onclick='overload_click(this)' class="a_ln">48<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">  done since it was easier to implement (few changes in main source files)
</div></div></div><div class="div_line"  data-info=({id:1690,ln:49}) id=l49><div class="dl_wrapper"><a name=line49 onclick='overload_click(this)' class="a_ln">49<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">  and since I ported Ctags to MPW to use with Pepper which also works with
</div></div></div><div class="div_line"  data-info=({id:1691,ln:50}) id=l50><div class="dl_wrapper"><a name=line50 onclick='overload_click(this)' class="a_ln">50<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">  unix style paths internally. Besides, since we're now moving to MacOS X
</div></div></div><div class="div_line"  data-info=({id:1692,ln:51}) id=l51><div class="dl_wrapper"><a name=line51 onclick='overload_click(this)' class="a_ln">51<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">  anyway, Mac programmers are getting used to unix style paths anyway.
</div></div></div><div class="div_line"  data-info=({id:1693,ln:52}) id=l52><div class="dl_wrapper"><a name=line52 onclick='overload_click(this)' class="a_ln">52<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">  
</div></div></div><div class="div_line"  data-info=({id:1694,ln:53}) id=l53><div class="dl_wrapper"><a name=line53 onclick='overload_click(this)' class="a_ln">53<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">  Example, suppose you have a project using PowerPlant which is located in
</div></div></div><div class="div_line"  data-info=({id:1695,ln:54}) id=l54><div class="dl_wrapper"><a name=line54 onclick='overload_click(this)' class="a_ln">54<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">  'HD20:tools:PowerPlant:' and you want a tags file for all powerplant
</div></div></div><div class="div_line"  data-info=({id:1696,ln:55}) id=l55><div class="dl_wrapper"><a name=line55 onclick='overload_click(this)' class="a_ln">55<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">  sources and your projects sources. Go to the root directory of your
</div></div></div><div class="div_line"  data-info=({id:1697,ln:56}) id=l56><div class="dl_wrapper"><a name=line56 onclick='overload_click(this)' class="a_ln">56<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">  project and type:
</div></div></div><div class="div_line"  data-info=({id:1698,ln:57}) id=l57><div class="dl_wrapper"><a name=line57 onclick='overload_click(this)' class="a_ln">57<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:1699,ln:58}) id=l58><div class="dl_wrapper"><a name=line58 onclick='overload_click(this)' class="a_ln">58<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">    CTags -R . '/HD20/tools/PowerPlant/'
</div></div></div><div class="div_line"  data-info=({id:1700,ln:59}) id=l59><div class="dl_wrapper"><a name=line59 onclick='overload_click(this)' class="a_ln">59<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:1701,ln:60}) id=l60><div class="dl_wrapper"><a name=line60 onclick='overload_click(this)' class="a_ln">60<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">  The '.' in this command means current directory. You will also have to
</div></div></div><div class="div_line"  data-info=({id:1702,ln:61}) id=l61><div class="dl_wrapper"><a name=line61 onclick='overload_click(this)' class="a_ln">61<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">  put quotes around the full unix style path since / has a special meaning
</div></div></div><div class="div_line"  data-info=({id:1703,ln:62}) id=l62><div class="dl_wrapper"><a name=line62 onclick='overload_click(this)' class="a_ln">62<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">  in MPW.
</div></div></div><div class="div_line"  data-info=({id:1704,ln:63}) id=l63><div class="dl_wrapper"><a name=line63 onclick='overload_click(this)' class="a_ln">63<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">  
</div></div></div><div class="div_line"  data-info=({id:1705,ln:64}) id=l64><div class="dl_wrapper"><a name=line64 onclick='overload_click(this)' class="a_ln">64<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">RISC OS:
</div></div></div><div class="div_line"  data-info=({id:1706,ln:65}) id=l65><div class="dl_wrapper"><a name=line65 onclick='overload_click(this)' class="a_ln">65<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">--------
</div></div></div><div class="div_line"  data-info=({id:1707,ln:66}) id=l66><div class="dl_wrapper"><a name=line66 onclick='overload_click(this)' class="a_ln">66<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">
</div></div></div><div class="div_line"  data-info=({id:1708,ln:67}) id=l67><div class="dl_wrapper"><a name=line67 onclick='overload_click(this)' class="a_ln">67<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">  Regex support on RISC OS is available when compiled to use the RISC OS port
</div></div></div><div class="div_line"  data-info=({id:1709,ln:68}) id=l68><div class="dl_wrapper"><a name=line68 onclick='overload_click(this)' class="a_ln">68<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">  of the GNU regex library, which can be obtained from:
</div></div></div><div class="div_line"  data-info=({id:1710,ln:69}) id=l69><div class="dl_wrapper"><a name=line69 onclick='overload_click(this)' class="a_ln">69<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents"> 
</div></div></div><div class="div_line"  data-info=({id:1711,ln:70}) id=l70><div class="dl_wrapper"><a name=line70 onclick='overload_click(this)' class="a_ln">70<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">    &lt;http://www.sbellon.de/software.html&gt;
</div></div></div><div class="div_line"  data-info=({id:1712,ln:71}) id=l71><div class="dl_wrapper"><a name=line71 onclick='overload_click(this)' class="a_ln">71<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents"> 
</div></div></div><div class="div_line"  data-info=({id:1713,ln:72}) id=l72><div class="dl_wrapper"><a name=line72 onclick='overload_click(this)' class="a_ln">72<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">  Using 'Set RexEx$Path &lt;Obey$Dir&gt;.' in the regex-0/12 directory will ensure
</div></div></div><div class="div_line"  data-info=({id:1714,ln:73}) id=l73><div class="dl_wrapper"><a name=line73 onclick='overload_click(this)' class="a_ln">73<span class="glyphicon glyphicon-pencil"></span></a><div class="div_line_contents">  it can be found.
</div></div></div>
<script>
var local_symbol_set=0;
var file_info = '({folder:0,project:"ctags5_8", table:"comments", topdir:"ctags_5_8", path:"ctags/INSTALL.oth",version:"5_8"})';
</script>